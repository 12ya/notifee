{
	"id": 0,
	"name": "@notifee/react-native - v0.5.1",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 235,
			"name": "AndroidBadgeIconType",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Enum used to define how a notification badge is displayed in badge mode.",
				"text": "View the [Badges](/react-native/docs/android/appearance#badges) documentation for more information.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 238,
					"name": "LARGE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Shows the badge as the notifications `largeIcon` (if available).",
						"text": "This is the default value used by a notification if not provided.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 992,
							"character": 7
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 236,
					"name": "NONE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "No badge is displayed, will always show as a number."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 980,
							"character": 6
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 237,
					"name": "SMALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Shows the badge as the notifications `smallIcon`."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 985,
							"character": 7
						}
					],
					"defaultValue": "1"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						238,
						236,
						237
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 976,
					"character": 32
				}
			]
		},
		{
			"id": 239,
			"name": "AndroidCategory",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Enum used to describe the category of a notification.",
				"text": "Setting a category on a notification helps the device to understand what the notification is for,\nor what impact it will have on the user. The category can be used for ranking and filtering\nthe notification, however has no visual impact on the notification.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 240,
					"name": "ALARM",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1005,
							"character": 7
						}
					],
					"defaultValue": "\"alarm\""
				},
				{
					"id": 241,
					"name": "CALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1006,
							"character": 6
						}
					],
					"defaultValue": "\"call\""
				},
				{
					"id": 242,
					"name": "EMAIL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1007,
							"character": 7
						}
					],
					"defaultValue": "\"email\""
				},
				{
					"id": 243,
					"name": "ERROR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1008,
							"character": 7
						}
					],
					"defaultValue": "\"error\""
				},
				{
					"id": 244,
					"name": "EVENT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1009,
							"character": 7
						}
					],
					"defaultValue": "\"event\""
				},
				{
					"id": 245,
					"name": "MESSAGE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1010,
							"character": 9
						}
					],
					"defaultValue": "\"msg\""
				},
				{
					"id": 246,
					"name": "NAVIGATION",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1011,
							"character": 12
						}
					],
					"defaultValue": "\"navigation\""
				},
				{
					"id": 247,
					"name": "PROGRESS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1012,
							"character": 10
						}
					],
					"defaultValue": "\"progress\""
				},
				{
					"id": 248,
					"name": "PROMO",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1013,
							"character": 7
						}
					],
					"defaultValue": "\"promo\""
				},
				{
					"id": 249,
					"name": "RECOMMENDATION",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1014,
							"character": 16
						}
					],
					"defaultValue": "\"recommendation\""
				},
				{
					"id": 250,
					"name": "REMINDER",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1015,
							"character": 10
						}
					],
					"defaultValue": "\"reminder\""
				},
				{
					"id": 251,
					"name": "SERVICE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1016,
							"character": 9
						}
					],
					"defaultValue": "\"service\""
				},
				{
					"id": 252,
					"name": "SOCIAL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1017,
							"character": 8
						}
					],
					"defaultValue": "\"social\""
				},
				{
					"id": 253,
					"name": "STATUS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1018,
							"character": 8
						}
					],
					"defaultValue": "\"status\""
				},
				{
					"id": 254,
					"name": "SYSTEM",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Avoid using - generally used by the system."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1023,
							"character": 8
						}
					],
					"defaultValue": "\"sys\""
				},
				{
					"id": 255,
					"name": "TRANSPORT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1024,
							"character": 11
						}
					],
					"defaultValue": "\"transport\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						240,
						241,
						242,
						243,
						244,
						245,
						246,
						247,
						248,
						249,
						250,
						251,
						252,
						253,
						254,
						255
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 1004,
					"character": 27
				}
			]
		},
		{
			"id": 256,
			"name": "AndroidColor",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A set or predefined colors which can be used with Android Notifications.",
				"text": "View the [Color](/react-native/docs/android/appearance#color) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 270,
					"name": "AQUA",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1048,
							"character": 6
						}
					],
					"defaultValue": "\"aqua\""
				},
				{
					"id": 260,
					"name": "BLACK",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1038,
							"character": 7
						}
					],
					"defaultValue": "\"black\""
				},
				{
					"id": 258,
					"name": "BLUE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1036,
							"character": 6
						}
					],
					"defaultValue": "\"blue\""
				},
				{
					"id": 262,
					"name": "CYAN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1040,
							"character": 6
						}
					],
					"defaultValue": "\"cyan\""
				},
				{
					"id": 266,
					"name": "DARKGRAY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1044,
							"character": 10
						}
					],
					"defaultValue": "\"darkgray\""
				},
				{
					"id": 269,
					"name": "DARKGREY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1047,
							"character": 10
						}
					],
					"defaultValue": "\"darkgrey\""
				},
				{
					"id": 271,
					"name": "FUCHSIA",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1049,
							"character": 9
						}
					],
					"defaultValue": "\"fuchsia\""
				},
				{
					"id": 267,
					"name": "GRAY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1045,
							"character": 6
						}
					],
					"defaultValue": "\"gray\""
				},
				{
					"id": 259,
					"name": "GREEN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1037,
							"character": 7
						}
					],
					"defaultValue": "\"green\""
				},
				{
					"id": 265,
					"name": "LIGHTGRAY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1043,
							"character": 11
						}
					],
					"defaultValue": "\"lightgray\""
				},
				{
					"id": 268,
					"name": "LIGHTGREY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1046,
							"character": 11
						}
					],
					"defaultValue": "\"lightgrey\""
				},
				{
					"id": 272,
					"name": "LIME",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1050,
							"character": 6
						}
					],
					"defaultValue": "\"lime\""
				},
				{
					"id": 263,
					"name": "MAGENTA",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1041,
							"character": 9
						}
					],
					"defaultValue": "\"magenta\""
				},
				{
					"id": 273,
					"name": "MAROON",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1051,
							"character": 8
						}
					],
					"defaultValue": "\"maroon\""
				},
				{
					"id": 274,
					"name": "NAVY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1052,
							"character": 6
						}
					],
					"defaultValue": "\"navy\""
				},
				{
					"id": 275,
					"name": "OLIVE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1053,
							"character": 7
						}
					],
					"defaultValue": "\"olive\""
				},
				{
					"id": 276,
					"name": "PURPLE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1054,
							"character": 8
						}
					],
					"defaultValue": "\"purple\""
				},
				{
					"id": 257,
					"name": "RED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1035,
							"character": 5
						}
					],
					"defaultValue": "\"red\""
				},
				{
					"id": 277,
					"name": "SILVER",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1055,
							"character": 8
						}
					],
					"defaultValue": "\"silver\""
				},
				{
					"id": 278,
					"name": "TEAL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1056,
							"character": 6
						}
					],
					"defaultValue": "\"teal\""
				},
				{
					"id": 261,
					"name": "WHITE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1039,
							"character": 7
						}
					],
					"defaultValue": "\"white\""
				},
				{
					"id": 264,
					"name": "YELLOW",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1042,
							"character": 8
						}
					],
					"defaultValue": "\"yellow\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						270,
						260,
						258,
						262,
						266,
						269,
						271,
						267,
						259,
						265,
						268,
						272,
						263,
						273,
						274,
						275,
						276,
						257,
						277,
						278,
						261,
						264
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 1034,
					"character": 24
				}
			]
		},
		{
			"id": 279,
			"name": "AndroidDefaults",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "On devices which do not support notification channels (API Level < 26), the notification\nby default will use all methods to alert the user (depending on the importance).",
				"text": "To override the default behaviour, provide an array of defaults to the notification.\n\nOn API Levels >= 26, this has no effect and notifications will use the channel behaviour.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android API Level < 26\n"
					}
				]
			},
			"children": [
				{
					"id": 280,
					"name": "ALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "All options will be used, where possible."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1073,
							"character": 5
						}
					],
					"defaultValue": " -1"
				},
				{
					"id": 281,
					"name": "LIGHTS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The notification will use lights to alert the user."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1078,
							"character": 8
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 282,
					"name": "SOUND",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The notification will use sound to alert the user."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1083,
							"character": 7
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 283,
					"name": "VIBRATE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The notification will vibrate to alert the user."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1088,
							"character": 9
						}
					],
					"defaultValue": "2"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						280,
						281,
						282,
						283
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 1069,
					"character": 27
				}
			]
		},
		{
			"id": 284,
			"name": "AndroidGroupAlertBehavior",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Enum used to describe how a notification alerts the user when it apart of a group.",
				"text": "View the [Grouping & Sorting](/react-native/docs/android/grouping-and-sorting#group-behaviour) documentation to\nlearn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 285,
					"name": "ALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "All notifications will alert."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1103,
							"character": 5
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 287,
					"name": "CHILDREN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Children of a group will alert the user. The summary notification will not alert when displayed."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1113,
							"character": 10
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 286,
					"name": "SUMMARY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Only the summary notification will alert the user when displayed. The children of the group will not alert."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1108,
							"character": 9
						}
					],
					"defaultValue": "1"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						285,
						287,
						286
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 1099,
					"character": 37
				}
			]
		},
		{
			"id": 288,
			"name": "AndroidStyle",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Available Android Notification Styles.",
				"text": "View the [Styles](/react-native/docs/android/styles) documentation to learn more with example usage.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 289,
					"name": "BIGPICTURE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1124,
							"character": 12
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 290,
					"name": "BIGTEXT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1125,
							"character": 9
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 291,
					"name": "INBOX",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1126,
							"character": 7
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 292,
					"name": "MESSAGING",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1127,
							"character": 11
						}
					],
					"defaultValue": "3"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						289,
						290,
						291,
						292
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 1123,
					"character": 24
				}
			]
		},
		{
			"id": 293,
			"name": "AndroidVisibility",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface used to define the visibility of an Android notification.",
				"text": "Use with the `visibility` property on the notification.\n\nView the [Visibility](/react-native/docs/android/appearance#visibility) documentation to learn more.\n\nDefault value is `AndroidVisibility.PRIVATE`.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 294,
					"name": "PRIVATE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Show the notification on all lockscreens, but conceal sensitive or private information on secure lockscreens."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1145,
							"character": 9
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 295,
					"name": "PUBLIC",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Show this notification in its entirety on all lockscreens."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1150,
							"character": 8
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 296,
					"name": "SECRET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Do not reveal any part of this notification on a secure lockscreen.",
						"text": "Useful for notifications showing sensitive information such as banking apps.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 1157,
							"character": 8
						}
					],
					"defaultValue": " -1"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						294,
						295,
						296
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 1141,
					"character": 29
				}
			]
		},
		{
			"id": 319,
			"name": "EventType",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An enum representing an event type, defined on [`Event`](/react-native/reference/event).",
				"text": "View the [Events](/react-native/docs/events) documentation to learn more about foreground and\nbackground events.\n"
			},
			"children": [
				{
					"id": 323,
					"name": "ACTION_PRESS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Event type is sent when a user presses a notification action."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 211,
							"character": 14
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 325,
					"name": "APP_BLOCKED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Event is sent when the user changes the notification blocked state for the entire application or\nwhen the user opens the application settings.",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 228,
							"character": 13
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 326,
					"name": "CHANNEL_BLOCKED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Event type is sent when the user changes the notification blocked state for a channel in the application.",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 235,
							"character": 17
						}
					],
					"defaultValue": "5"
				},
				{
					"id": 327,
					"name": "CHANNEL_GROUP_BLOCKED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Event type is sent when the user changes the notification blocked state for a channel group in the application.",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 242,
							"character": 23
						}
					],
					"defaultValue": "6"
				},
				{
					"id": 324,
					"name": "DELIVERED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Event type sent when a notification has been delivered to the device. For scheduled notifications,\nthis event is sent at the point when the schedule executes, not when a the schedule is created.",
						"text": "It's important to note even though a notification has been delivered, it may not be shown to the\nuser. For example, they may have notifications disabled on the device/channel/app.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 220,
							"character": 11
						}
					],
					"defaultValue": "3"
				},
				{
					"id": 321,
					"name": "DISMISSED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Event type is sent when the user dismisses a notification. This is triggered via the user swiping\nthe notification from the notification shade or performing \"Clear all\" notifications.",
						"text": "This event is **not** sent when a notification is cancelled or times out.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android Android\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 197,
							"character": 11
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 322,
					"name": "PRESS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Event type is sent when a notification has been pressed by the user.",
						"text": "On Android, notifications must include an `android.pressAction` property for this event to trigger.\n\nOn iOS, this event is always sent when the user presses a notification.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 206,
							"character": 7
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 320,
					"name": "UNKNOWN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An unknown event was received.",
						"text": "This event type is a failsafe to catch any unknown events from the device. Please\nreport an issue with a reproduction so it can be correctly handled.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 187,
							"character": 9
						}
					],
					"defaultValue": " -1"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						323,
						325,
						326,
						327,
						324,
						321,
						322,
						320
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Notification.ts",
					"line": 180,
					"character": 21
				}
			]
		},
		{
			"id": 30,
			"name": "IOSAuthorizationStatus",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An enum representing the notification authorization status for this app on the device.",
				"text": "Value is truthy if authorized, compare against an exact status (e.g. PROVISIONAL) for a more\ngranular status.\n"
			},
			"children": [
				{
					"id": 33,
					"name": "AUTHORIZED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The app is authorized to create notifications."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 195,
							"character": 12
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 32,
					"name": "DENIED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The app is not authorized to create notifications."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 190,
							"character": 8
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 31,
					"name": "NOT_DETERMINED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The app user has not yet chosen whether to allow the application to create notifications. Usually\nthis status is returned prior to the first call of `requestPermission`."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 185,
							"character": 16
						}
					],
					"defaultValue": " -1"
				},
				{
					"id": 34,
					"name": "PROVISIONAL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The app is currently authorized to post non-interrupting user notifications",
						"tags": [
							{
								"tag": "platform",
								"text": "ios iOS >= 12\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 201,
							"character": 13
						}
					],
					"defaultValue": "2"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						33,
						32,
						31,
						34
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 180,
					"character": 34
				}
			]
		},
		{
			"id": 56,
			"name": "IOSIntentIdentifier",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "TODO docs, used to provide context to Siri"
			},
			"children": [
				{
					"id": 69,
					"name": "CANCEL_WORKOUT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 302,
							"character": 16
						}
					],
					"defaultValue": "12"
				},
				{
					"id": 68,
					"name": "END_WORKOUT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 300,
							"character": 13
						}
					],
					"defaultValue": "11"
				},
				{
					"id": 81,
					"name": "GET_RIDE_STATUS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 326,
							"character": 17
						}
					],
					"defaultValue": "24"
				},
				{
					"id": 79,
					"name": "LIST_RIDE_OPTIONS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 322,
							"character": 19
						}
					],
					"defaultValue": "22"
				},
				{
					"id": 67,
					"name": "PAUSE_WORKOUT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 298,
							"character": 15
						}
					],
					"defaultValue": "10"
				},
				{
					"id": 76,
					"name": "REQUEST_PAYMENT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 316,
							"character": 17
						}
					],
					"defaultValue": "19"
				},
				{
					"id": 80,
					"name": "REQUEST_RIDE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 324,
							"character": 14
						}
					],
					"defaultValue": "23"
				},
				{
					"id": 70,
					"name": "RESUME_WORKOUT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 304,
							"character": 16
						}
					],
					"defaultValue": "13"
				},
				{
					"id": 65,
					"name": "SAVE_PROFILE_IN_CAR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 294,
							"character": 21
						}
					],
					"defaultValue": "8"
				},
				{
					"id": 59,
					"name": "SEARCH_CALL_HISTORY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 282,
							"character": 21
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 73,
					"name": "SEARCH_FOR_MESSAGES",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 310,
							"character": 21
						}
					],
					"defaultValue": "16"
				},
				{
					"id": 77,
					"name": "SEARCH_FOR_PHOTOS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 318,
							"character": 19
						}
					],
					"defaultValue": "20"
				},
				{
					"id": 72,
					"name": "SEND_MESSAGE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 308,
							"character": 14
						}
					],
					"defaultValue": "15"
				},
				{
					"id": 75,
					"name": "SEND_PAYMENT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 314,
							"character": 14
						}
					],
					"defaultValue": "18"
				},
				{
					"id": 60,
					"name": "SET_AUDIO_SOURCE_IN_CAR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 284,
							"character": 25
						}
					],
					"defaultValue": "3"
				},
				{
					"id": 61,
					"name": "SET_CLIMATE_SETTINGS_IN_CAR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 286,
							"character": 29
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 62,
					"name": "SET_DEFROSTER_SETTINGS_IN_CAR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 288,
							"character": 31
						}
					],
					"defaultValue": "5"
				},
				{
					"id": 74,
					"name": "SET_MESSAGE_ATTRIBUTE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 312,
							"character": 23
						}
					],
					"defaultValue": "17"
				},
				{
					"id": 64,
					"name": "SET_PROFILE_IN_CAR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 292,
							"character": 20
						}
					],
					"defaultValue": "7"
				},
				{
					"id": 71,
					"name": "SET_RADIO_STATION",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 306,
							"character": 19
						}
					],
					"defaultValue": "14"
				},
				{
					"id": 63,
					"name": "SET_SEAT_SETTINGS_IN_CAR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 290,
							"character": 26
						}
					],
					"defaultValue": "6"
				},
				{
					"id": 57,
					"name": "START_AUDIO_CALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 278,
							"character": 18
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 78,
					"name": "START_PHOTO_PLAYBACK",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 320,
							"character": 22
						}
					],
					"defaultValue": "21"
				},
				{
					"id": 58,
					"name": "START_VIDEO_CALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 280,
							"character": 18
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 66,
					"name": "START_WORKOUT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 296,
							"character": 15
						}
					],
					"defaultValue": "9"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						69,
						68,
						81,
						79,
						67,
						76,
						80,
						70,
						65,
						59,
						73,
						77,
						72,
						75,
						60,
						61,
						62,
						74,
						64,
						71,
						63,
						57,
						78,
						58,
						66
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 277,
					"character": 31
				}
			]
		},
		{
			"id": 40,
			"name": "IOSNotificationSetting",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An enum representing a notification setting for this app on the device.",
				"text": "Value is truthy if setting enabled, compare against an exact value (e.g. NOT_SUPPORTED) for more\ngranular control.\n"
			},
			"children": [
				{
					"id": 42,
					"name": "DISABLED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This setting is currently disabled by the user."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 249,
							"character": 10
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 43,
					"name": "ENABLED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This setting is currently enabled."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 254,
							"character": 9
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 41,
					"name": "NOT_SUPPORTED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This setting is not supported on this device. Usually this means that the iOS version required\nfor this setting has not been met."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 244,
							"character": 15
						}
					],
					"defaultValue": " -1"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						42,
						43,
						41
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 239,
					"character": 34
				}
			]
		},
		{
			"id": 35,
			"name": "IOSShowPreviewsSetting",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An enum representing the show previews notification setting for this app on the device.",
				"text": "Value is truthy if previews are to be shown, compare against an exact value\n(e.g. WHEN_AUTHENTICATED) for more granular control.\n"
			},
			"children": [
				{
					"id": 38,
					"name": "ALWAYS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Always show previews even if the device is currently locked."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 225,
							"character": 8
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 37,
					"name": "NEVER",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Never show previews."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 220,
							"character": 7
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 36,
					"name": "NOT_SUPPORTED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This setting is not supported on this device. Usually this means that the iOS version required\nfor this setting (iOS 11+) has not been met."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 215,
							"character": 15
						}
					],
					"defaultValue": " -1"
				},
				{
					"id": 39,
					"name": "WHEN_AUTHENTICATED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Only show previews when the device is unlocked."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 230,
							"character": 20
						}
					],
					"defaultValue": "2"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						38,
						37,
						36,
						39
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 210,
					"character": 34
				}
			]
		},
		{
			"id": 335,
			"name": "Importance",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface describing the importance levels of an incoming notification.",
				"text": "On Android, the importance level can be set directly onto a notification channel for supported devices (API Level >= 26)\nor directly onto the notification for devices which do not support channels.\n\nOn iOS, the importance level can be set directly onto the notification to control how it is displayed to users when the\napplication is in the foreground.\n\nThe importance is used to both change the visual prompt of a received notification\nand also how it visually appears on the device.\n\nView the [Android Appearance](/react-native/docs/android/appearance#importance) or [iOS Appearance](/react-native/docs/ios/appearance) documentation\nto learn more.\n"
			},
			"children": [
				{
					"id": 336,
					"name": "DEFAULT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The default importance applied to a channel/notification.",
						"text": "On Android, the application small icon will show in the device statusbar. When the user pulls down the\nnotification shade, the notification will show in it's expanded state (if applicable).\n\nOn iOS, the notification will display in heads-up mode, showing on top of the current application. The notification\nhowever will not alert the user (e.g. via sound).\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 345,
							"character": 9
						}
					],
					"defaultValue": "3"
				},
				{
					"id": 337,
					"name": "HIGH",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The highest importance level applied to a channel/notification.",
						"text": "On Android, the notifications will appear on-top of applications, allowing direct interaction without pulling\ndown the notification shade. This level should only be used for urgent notifications, such as\nincoming phone calls, messages etc, which require immediate attention.\n\nOn iOS, the notification will display in heads-up mode, showing on top of the current application. The notification\nwill be displayed & alert the user (e.g. via sound).\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 357,
							"character": 6
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 338,
					"name": "LOW",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A low importance level applied to a channel/notification.",
						"text": "On Android, the application small icon will show in the device statusbar, however the notification will not alert\nthe user (no sound or vibration). The notification will show in it's expanded state when the\nnotification shade is pulled down.\n\nOn iOS, the notification will not display to the user or alert them. It will still be visible on the devices\nnotification center.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 369,
							"character": 5
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 339,
					"name": "MIN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The minimum importance level applied to a channel/notification.",
						"text": "On Android, the application small icon will not show up in the statusbar, or alert the user. The notification\nwill be in a collapsed state in the notification shade and placed at the bottom of the list.\n\nThis level should be used when the notification requires no immediate attention. An example of this\nimportance level is the Google app providing weather updates and only being visible when the\nuser pulls the notification shade down,\n\nOn iOS, the notification will not display to the user or alert them. It will still be visible on the devices\nnotification center (same as `Importance.LOW`)\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 384,
							"character": 5
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 340,
					"name": "NONE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "On Android, the notification will not be shown. This has the same effect as the user disabling notifications\nin the application settings.",
						"text": "On iOS, the notification will not display to the user or alert them. It will still be visible on the devices\nnotification center (same as `Importance.LOW`).\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 393,
							"character": 6
						}
					],
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						336,
						337,
						338,
						339,
						340
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Notification.ts",
					"line": 335,
					"character": 22
				}
			]
		},
		{
			"id": 148,
			"name": "AndroidAction",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface used to describe a notification quick action.",
				"text": "Notification actions allow users to interact with notifications, allowing you to handle events\nwithin your application. When an action completes (e.g. pressing an action, or filling out an input\nbox) and event is sent.\n\nView the [Quick Actions](/react-native/docs/android/interaction#quick-actions) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 151,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An remote http or local icon path representing the action. Newer devices may not show the icon.",
						"text": "Recommended icon size is 24x24 px.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 429,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 152,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If provided, the action accepts user input.",
						"text": "If `true`, the user will be able to provide free text input when the action is pressed. This\nproperty can be further configured for advanced inputs.\n\nView the [Action input](/react-native/docs/android/interaction#action-input) documentation to\nlearn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 440,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "true"
							},
							{
								"type": "reference",
								"name": "AndroidInput",
								"id": 153
							}
						]
					}
				},
				{
					"id": 149,
					"name": "pressAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The press action interface describing what happens when an action completes.",
						"text": "Note; unlike the `pressAction` in the notification body, an action does not need to open the application\nand can perform background tasks. See the [AndroidPressAction](/react-native/reference/androidpressaction) reference\nor [Quick Actions](/react-native/docs/android/interaction#quick-actions) documentation to learn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 417,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "NotificationPressAction",
						"id": 315
					}
				},
				{
					"id": 150,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The title of the notification, e.g. \"Reply\", \"Mark as read\" etc."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 422,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						151,
						152,
						149,
						150
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 409,
					"character": 30
				}
			]
		},
		{
			"id": 159,
			"name": "AndroidBigPictureStyle",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface used when displaying a Big Picture Style notification.",
				"text": "<Vimeo id=\"android-style-bigpicture\" caption=\"Android Big Picture Style\" />\n\nView the [Big Picture](/react-native/docs/android/styles#big-picture) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 163,
					"name": "largeIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, overrides the main notification `largeIcon` when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 526,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 161,
					"name": "picture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A remote http or local file path to the picture to display.",
						"text": "The image will be automatically resized depending on the device and it's size. If the image could\nnot be found a blank space will appear.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 516,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 164,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, overrides the main notification `summary` when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 531,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 162,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, overrides the main notification `title` when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 521,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 160,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constant enum value used to identify the style type."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 508,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "BIGPICTURE",
						"id": 289
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						163,
						161,
						164,
						162,
						160
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 504,
					"character": 39
				}
			]
		},
		{
			"id": 165,
			"name": "AndroidBigTextStyle",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface used when displaying a Big Text Style notification.",
				"text": "<Vimeo id=\"android-style-bigtext\" caption=\"Android Big Text Style\" />\n\nView the [Big Text](/react-native/docs/android/styles#big-text) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 169,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, overrides the main notification `summary` when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 562,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 167,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The text to display when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 552,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 168,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, overrides the main notification `title` when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 557,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 166,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constant enum value used to identify the style type."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 547,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "BIGTEXT",
						"id": 290
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						169,
						167,
						168,
						166
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 543,
					"character": 36
				}
			]
		},
		{
			"id": 196,
			"name": "AndroidChannel",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface for describing an Android Channel.",
				"text": "Channels override any individual notification preferences (e.g. lights/vibration) and the user\nhas final control over the setting. Once created, only channel metadata can be updated (e.g. name).\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 199,
					"name": "badge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether badges are enabled for the channel.",
						"text": "View the [Badges](/react-native/docs/android/appearance#badges) documentation to learn more.\n\nDefaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 788,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 200,
					"name": "bypassDnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether or not notifications posted to this channel can interrupt the user in\n'Do Not Disturb' mode.",
						"text": "Defaults to `false`.\n\nThis setting cannot be overridden once the channel is created.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 29\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 800,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 201,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the user visible description of this channel.",
						"text": "The recommended maximum length is 300 characters; the value may be truncated if it is too long.\n\nThis setting can be updated after creation.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 811,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 204,
					"name": "groupId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets what group this channel belongs to. Group information is only used for presentation, not for behavior.",
						"text": "Groups can be created via via [`createChannelGroup`](/react-native/reference/createchannelgroup).\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 838,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 197,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The unique channel ID."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 769,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 205,
					"name": "importance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the level of interruption of this notification channel.",
						"text": "Defaults to `Importance.DEFAULT`.\n\nThis setting can only be set to a lower importance level once set.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 847,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Importance",
						"id": 335
					}
				},
				{
					"id": 206,
					"name": "lightColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If lights are enabled (via `lights`), sets/overrides the light color for notifications\nposted to this channel.",
						"text": "This setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 855,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "AndroidColor",
								"id": 256
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 202,
					"name": "lights",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notifications posted to this channel should display notification lights, on devices that support that feature.",
						"text": "Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 820,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 198,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The channel name. This is shown to the user so must be descriptive and relate to the notifications\nwhich will be delivered under this channel.",
						"text": "This setting can be updated after creation.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 777,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 209,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Overrides the sound the notification is displayed with.",
						"text": "The default value is to play no sound. To play the default system sound use 'default'.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 883,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 203,
					"name": "vibration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notification posted to this channel should vibrate.",
						"text": "Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 829,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 208,
					"name": "vibrationPattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets/overrides the vibration pattern for notifications posted to this channel.",
						"text": "The pattern in milliseconds. Must be an even amount of numbers.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 874,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 207,
					"name": "visibility",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notifications posted to this channel appear on the lockscreen or not,\nand if so, whether they appear in a redacted form.",
						"text": "Defaults to `AndroidVisibility.PRIVATE`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 865,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidVisibility",
						"id": 293
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						199,
						200,
						201,
						204,
						197,
						205,
						206,
						202,
						198,
						209,
						203,
						208,
						207
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 765,
					"character": 31
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "NativeAndroidChannel",
					"id": 210
				}
			]
		},
		{
			"id": 225,
			"name": "AndroidChannelGroup",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface for describing an Android Channel Group.",
				"text": "Channel groups have no impact on the notification, they are used to help group channels in the applications\nsettings UI.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android API Level >= 26\n"
					}
				]
			},
			"children": [
				{
					"id": 228,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional description of the group. This is visible to the user.",
						"text": "On Android APIs less than 28 this will always be undefined.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 939,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 226,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Unique id for this channel group."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 922,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 227,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the group. This is visible to the user so should be a descriptive name which\ncategorizes other channels (e.g. reminders).",
						"text": "The recommended maximum length is 40 characters; the value may be truncated if it is too long.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 930,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						228,
						226,
						227
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 918,
					"character": 36
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "NativeAndroidChannelGroup",
					"id": 229
				}
			]
		},
		{
			"id": 170,
			"name": "AndroidInboxStyle",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface used when displaying a Inbox Style notification.",
				"text": "<Vimeo id=\"android-style-inbox\" caption=\"Android Inbox Style\" />\n\nView the [Inbox](/react-native/docs/android/styles#inbox) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 172,
					"name": "lines",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An array of messages to display, in order provided.",
						"text": "The device will automatically handle displaying the lines visible depending on space in the notification\nshade.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 586,
							"character": 7
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 174,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, overrides the main notification `summary` when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 596,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 173,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, overrides the main notification `title` when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 591,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 171,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constant enum value used to identify the style type."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 578,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "INBOX",
						"id": 291
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						172,
						174,
						173,
						171
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 574,
					"character": 34
				}
			]
		},
		{
			"id": 153,
			"name": "AndroidInput",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface used to enable advanced user input on a notification.",
				"text": "View the [Action input](/react-native/docs/android/interaction#action-input) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 154,
					"name": "allowFreeFormInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether the user can freely enter text into the input.",
						"text": "This value changes the behaviour of the notification:\n\n- If `true`, when an action is pressed this allows the user to type free form text into the input area.\n- If `false`, you must provide an array of `choices` the user is allowed to use as the input.\n\nDefaults to `true`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 461,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 155,
					"name": "allowGeneratedReplies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether generated replies can be added to the action.",
						"text": "Generated replies will only be shown if the input has `choices` and whether the device\nis able to generate replies.\n\nDefaults to `true`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 471,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 156,
					"name": "choices",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An array of pre-defined input choices the user can select.",
						"text": "If `allowFreeFormInput` is `false`, this property must contain at least one choice.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 478,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 157,
					"name": "editableChoices",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, the user will be able to edit the selected choice before sending the action event, however\n`allowFreeFormInput` must also be `true`.",
						"text": "By default, the platform will decide whether choices can be editable. To explicitly enable or disable\nthis, provide `true` or `false`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 487,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 158,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The placeholder text to display inside of the user input area."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 492,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						154,
						155,
						156,
						157,
						158
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 450,
					"character": 29
				}
			]
		},
		{
			"id": 175,
			"name": "AndroidMessagingStyle",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface used when displaying a Messaging Style notification.",
				"text": "<Vimeo id=\"android-style-messaging\" caption=\"Android Messaging Style\" />\n\nView the [Messaging](/react-native/docs/android/styles#messaging) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 180,
					"name": "group",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether this conversation notification represents a group (3 or more persons)."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 632,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 178,
					"name": "messages",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An array of messages to display inside the notification."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 622,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "AndroidMessagingStyleMessage",
							"id": 181
						}
					}
				},
				{
					"id": 177,
					"name": "person",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The person who is receiving a message on the current device."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 617,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidPerson",
						"id": 185
					}
				},
				{
					"id": 179,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, overrides the main notification `title` when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 627,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 176,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Constant enum value used to identify the style type."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 612,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "MESSAGING",
						"id": 292
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						180,
						178,
						177,
						179,
						176
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 608,
					"character": 38
				}
			]
		},
		{
			"id": 181,
			"name": "AndroidMessagingStyleMessage",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface for messages when constructing a Messaging Style notification.",
				"text": "<Vimeo id=\"android-style-messaging\" caption=\"Android Messaging Style\" />\n\nView the [`AndroidMessagingStyle`](/react-native/reference/androidmessagingstyle) reference\nand [Messaging](/react-native/docs/android/styles#messaging) documentation to learn more.\n"
			},
			"children": [
				{
					"id": 184,
					"name": "person",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The sender of this message. See [`AndroidPerson`](/react-native/reference/androidperson) reference\nfor more information on the properties available.",
						"text": "This property should only be provided if the message is from an external person, and not the person receiving the message.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 660,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidPerson",
						"id": 185
					}
				},
				{
					"id": 182,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The content of the message."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 647,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 183,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The timestamp of when the message arrived in milliseconds."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 652,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						184,
						182,
						183
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 643,
					"character": 45
				}
			]
		},
		{
			"id": 185,
			"name": "AndroidPerson",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface used to describe a person shown in notifications.",
				"text": "Currently used with [`AndroidMessagingStyle`](/react-native/reference/androidmessagingstyle) notifications.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 188,
					"name": "bot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true` this person represents a machine rather than a human. This is used primarily for testing and automated tooling.",
						"text": "Defaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 689,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 190,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The icon to display next to the person in the notification. The icon can be URL or local\nAndroid resource.",
						"text": "If not provided, an icon will be automatically creating using the `name` property.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 708,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 187,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional unique ID of the person. Setting this property is preferred for unique identification,\nhowever not required. If no value is provided, the `name` will be used instead.."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 682,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 189,
					"name": "important",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true` this person will be marked as important.",
						"text": "Important users are those who frequently contact the receiving person. If the app is in\n\"Do not disturb\" mode, a notification containing an important person may override this mode\nif the person has been whitelisted on the device.\n\nDefaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 700,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 186,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the person.",
						"text": "If no `id` is provided, the name will be used as the unique identifier.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 676,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 191,
					"name": "uri",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "URI contact of the person.",
						"text": "The URI can be any of the following:\n\n - The representation of a contact URI, e.g. `android.provider.ContactsContract.Contacts#CONTENT_LOOKUP_URI`\n - A `mailto:` string\n - A `tel:` string\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 719,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						188,
						190,
						187,
						189,
						186,
						191
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 670,
					"character": 30
				}
			]
		},
		{
			"id": 192,
			"name": "AndroidProgress",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface for defining the progress of an Android Notification.",
				"text": "<Vimeo id=\"android-progress-summary\" caption=\"Android Progress (w/ Big Picture Style)\" />\n\nView the [Progress Indicators](/react-native/docs/android/progress-indicators) documentation to learn more.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 194,
					"name": "current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The current progress value.",
						"text": "E.g. setting to `4` with a `max` value of `10` would set a fixed progress bar on the notification at 40% complete.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 744,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 195,
					"name": "indeterminate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, overrides the `max` and `current` values and displays an unknown progress style. Useful when you have no\nknowledge of a tasks completion state.",
						"text": "Defaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 752,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 193,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The maximum progress number. E.g `10`.",
						"text": "Must be greater than the `current` value.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 737,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						194,
						195,
						193
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 731,
					"character": 32
				}
			]
		},
		{
			"id": 312,
			"name": "Event",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface representing a Notifee event.",
				"text": "View the [Events](/react-native/docs/events) documentation to learn more about foreground and\nbackground events.\n"
			},
			"children": [
				{
					"id": 314,
					"name": "detail",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An object containing event detail."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 117,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "EventDetail",
						"id": 328
					}
				},
				{
					"id": 313,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The type of notification event."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 112,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "EventType",
						"id": 319
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						314,
						313
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Notification.ts",
					"line": 108,
					"character": 22
				}
			]
		},
		{
			"id": 328,
			"name": "EventDetail",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface representing the different detail values which can be provided with a notification event.",
				"text": "View the [Events](/react-native/docs/events) documentation to learn more.\n"
			},
			"children": [
				{
					"id": 334,
					"name": "blocked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification blocked status of your entire application.",
						"text": "The blocked detail is available when the event type is [`EventType.APP_BLOCKED`](/react-native/reference/eventtype#app_blocked).\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 317,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 332,
					"name": "channel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The channel that had its block state changed.",
						"text": "Note that if the channel no longer exists during the time the event was sent the channel property will be undefined.\n\nThe channel detail is available when the event type is [`EventType.CHANNEL_BLOCKED`](/react-native/reference/eventtype#channel_blocked).\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 297,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "NativeAndroidChannel",
						"id": 210
					}
				},
				{
					"id": 333,
					"name": "channelGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The channel group that had its block state changed.",
						"text": "Note that if the channel no longer exists during the time the event was sent the channel group property will be undefined.\n\nThe channel group detail is available when the event type is [`EventType.CHANNEL_GROUP_BLOCKED`](/react-native/reference/eventtype#channel_group_blocked).\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 308,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "NativeAndroidChannelGroup",
						"id": 229
					}
				},
				{
					"id": 331,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The input from a notification action.",
						"text": "The input detail is available when the [`EventType`](/react-native/reference/eventtype) is:\n\n- [`EventType.ACTION_PRESS`](/react-native/reference/eventtype#action_press)\n- The notification quick action has input enabled. View [`AndroidInput`](/react-native/reference/androidinput) for more details.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 20\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 286,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 329,
					"name": "notification",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification this event relates to.",
						"text": "The notification details is available when the [`EventType`](/react-native/reference/eventtype) is one of:\n\n - [`EventType.DISMISSED`](/react-native/reference/eventtype#dismissed)\n - [`EventType.PRESS`](/react-native/reference/eventtype#press)\n - [`EventType.ACTION_PRESS`](/react-native/reference/eventtype#action_press)\n - [`EventType.DELIVERED`](/react-native/reference/eventtype#delivered)\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 261,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "Notification",
						"id": 297
					}
				},
				{
					"id": 330,
					"name": "pressAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The press action which triggered the event.",
						"text": "If a press action caused the event, this property will be available allowing you to retrieve the\naction ID and perform logic.\n\nThe press action details is available when the [`EventType`](/react-native/reference/eventtype) is one of:\n\n- [`EventType.PRESS`](/react-native/reference/eventtype#press)\n- [`EventType.ACTION_PRESS`](/react-native/reference/eventtype#action_press)\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 274,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "NotificationPressAction",
						"id": 315
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						334,
						332,
						333,
						331,
						329,
						330
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Notification.ts",
					"line": 250,
					"character": 28
				}
			]
		},
		{
			"id": 106,
			"name": "IOSAttachmentOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 109,
					"name": "thumbnailClippingRect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 386,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "object"
							}
						]
					}
				},
				{
					"id": 108,
					"name": "thumbnailHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 385,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 110,
					"name": "thumbnailTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 387,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 107,
					"name": "typeHint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 384,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						109,
						108,
						110,
						107
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 383,
					"character": 37
				}
			]
		},
		{
			"id": 99,
			"name": "IOSInput",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 100,
					"name": "buttonText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Overrides the default button text \"Send\", next to the input box."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 368,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 101,
					"name": "placeholderText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The placeholder text displayed in the text input field for this action."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 373,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						100,
						101
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 364,
					"character": 25
				}
			]
		},
		{
			"id": 102,
			"name": "IOSNotificationAttachment",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 103,
					"name": "identifier",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 377,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 105,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 380,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSAttachmentOptions",
						"id": 106
					}
				},
				{
					"id": 104,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 378,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						103,
						105,
						104
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 376,
					"character": 42
				}
			]
		},
		{
			"id": 82,
			"name": "IOSNotificationCategory",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "TODO docs"
			},
			"children": [
				{
					"id": 91,
					"name": "actions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IOSNotificationCategoryAction",
							"id": 92
						}
					}
				},
				{
					"id": 86,
					"name": "allowAnnouncement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 336,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 85,
					"name": "allowInCarPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 335,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 89,
					"name": "hiddenPreviewsBodyPlaceholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 339,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 88,
					"name": "hiddenPreviewsShowSubtitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 338,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 87,
					"name": "hiddenPreviewsShowTitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 337,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 83,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 333,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 90,
					"name": "intentIdentifiers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 340,
							"character": 19
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IOSIntentIdentifier",
							"id": 56
						}
					}
				},
				{
					"id": 84,
					"name": "summaryFormat",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 334,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						91,
						86,
						85,
						89,
						88,
						87,
						83,
						90,
						84
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 332,
					"character": 40
				}
			]
		},
		{
			"id": 92,
			"name": "IOSNotificationCategoryAction",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 98,
					"name": "authenticationRequired",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether this action should require unlocking before being performed."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 361,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 96,
					"name": "destructive",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Makes the action red, indicating that the action is destructive."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 351,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 97,
					"name": "foreground",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether this action should cause the application to launch in the foreground."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 356,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 93,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 345,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 95,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 347,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "true"
							},
							{
								"type": "reference",
								"name": "IOSInput",
								"id": 99
							}
						]
					}
				},
				{
					"id": 94,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 346,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						98,
						96,
						97,
						93,
						95,
						94
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 344,
					"character": 46
				}
			]
		},
		{
			"id": 22,
			"name": "IOSNotificationPermissions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface representing all the available permissions that can be requested by your app via\nthe `requestPermission` API."
			},
			"children": [
				{
					"id": 23,
					"name": "alert",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Request permission to display alerts.",
						"text": "Defaults to true.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 115,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 29,
					"name": "announcement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Request permission for Siri to automatically read out notification messages over AirPods.",
						"text": "Defaults to false.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "ios iOS >= 13\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 158,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 25,
					"name": "badge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Request permission to update the application badge.",
						"text": "Defaults to true.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 126,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 27,
					"name": "carPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Request permission to display notifications in a CarPlay environment.",
						"text": "Defaults to true.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 140,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 24,
					"name": "criticalAlert",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 119,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 28,
					"name": "provisional",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Request permission to provisionally create non-interrupting notifications.",
						"text": "Defaults to false.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "ios iOS >= 12\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 149,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 26,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Request permission to play sounds.",
						"text": "Defaults to true.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 133,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						23,
						29,
						25,
						27,
						24,
						28,
						26
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 109,
					"character": 43
				}
			]
		},
		{
			"id": 44,
			"name": "IOSNotificationSettings",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "TODO docs"
			},
			"children": [
				{
					"id": 45,
					"name": "alert",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 261,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotificationSetting",
						"id": 40
					}
				},
				{
					"id": 52,
					"name": "announcement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 268,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotificationSetting",
						"id": 40
					}
				},
				{
					"id": 55,
					"name": "authorizationStatus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 271,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSAuthorizationStatus",
						"id": 30
					}
				},
				{
					"id": 46,
					"name": "badge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 262,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotificationSetting",
						"id": 40
					}
				},
				{
					"id": 50,
					"name": "carPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 266,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotificationSetting",
						"id": 40
					}
				},
				{
					"id": 47,
					"name": "criticalAlert",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 263,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotificationSetting",
						"id": 40
					}
				},
				{
					"id": 54,
					"name": "inAppNotificationSettings",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 270,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotificationSetting",
						"id": 40
					}
				},
				{
					"id": 51,
					"name": "lockScreen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 267,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotificationSetting",
						"id": 40
					}
				},
				{
					"id": 53,
					"name": "notificationCenter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 269,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotificationSetting",
						"id": 40
					}
				},
				{
					"id": 48,
					"name": "showPreviews",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 264,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSShowPreviewsSetting",
						"id": 35
					}
				},
				{
					"id": 49,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 265,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotificationSetting",
						"id": 40
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						45,
						52,
						55,
						46,
						50,
						47,
						54,
						51,
						53,
						48,
						49
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 260,
					"character": 40
				}
			]
		},
		{
			"id": 308,
			"name": "InitialNotification",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface representing a notification & action that launched the current app / or Android activity.",
				"text": "View the [App open events](/react-native/docs/events#app-open-events) documentation to learn more.\n\nThis interface is returned from [`getInitialNotification`](/react-native/reference/getinitialnotification) when\nan initial notification is available.\n"
			},
			"children": [
				{
					"id": 311,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The input from a notification action.",
						"text": "The input detail is available when the [`EventType`](/react-native/reference/eventtype) is:\n\n- [`EventType.ACTION_PRESS`](/react-native/reference/eventtype#action_press)\n- The notification quick action has input enabled. View [`AndroidInput`](/react-native/reference/androidinput) for more details.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 20\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 99,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 309,
					"name": "notification",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The notification which the user interacted with, which caused the application to open."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 82,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "Notification",
						"id": 297
					}
				},
				{
					"id": 310,
					"name": "pressAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The press action which the user interacted with, on the notification, which caused the application to open."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 87,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "NotificationPressAction",
						"id": 315
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						311,
						309,
						310
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Notification.ts",
					"line": 78,
					"character": 36
				}
			]
		},
		{
			"id": 430,
			"name": "JsonConfig",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface describing the contents of a `notifee.config.json` file.",
				"text": "View the [License Keys](/react-native/docs/license-keys) documentation for more information.\n\n```json\n{\n  \"android: {\n    \"license\": \"...\"\n  },\n  \"ios\": {\n    \"license\": \"...\"\n  }\n}\n```\n"
			},
			"children": [
				{
					"id": 431,
					"name": "android",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Android specific Notifee configuration."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 463,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "JsonConfigAndroid",
						"id": 426
					}
				},
				{
					"id": 432,
					"name": "ios",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "iOS specific Notifee configuration."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 468,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "JsonConfigIOS",
						"id": 428
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						431,
						432
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Module.ts",
					"line": 459,
					"character": 27
				}
			]
		},
		{
			"id": 426,
			"name": "JsonConfigAndroid",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface describing the Android specific configuration properties for the `notifee.config.json` file.",
				"text": "View the [License Keys](/react-native/docs/license-keys) documentation for more information.\n\n```json\n{\n  \"android\": {\n    \"license\": \"...\"\n  }\n}\n```\n"
			},
			"children": [
				{
					"id": 427,
					"name": "license",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The license key created via the Notifee account section. A valid license is required\nfor production usage with Notifee.",
						"text": "The license must match your App ID when created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 417,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						427
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Module.ts",
					"line": 410,
					"character": 34
				}
			]
		},
		{
			"id": 428,
			"name": "JsonConfigIOS",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface describing the iOS specific configuration properties for the `notifee.config.json` file.",
				"text": "View the [License Keys](/react-native/docs/license-keys) documentation for more information.\n\n```json\n{\n  \"ios\": {\n    \"license\": \"...\"\n  }\n}\n```\n"
			},
			"children": [
				{
					"id": 429,
					"name": "license",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The license key created via the Notifee account section. A valid license is required\nfor production usage with Notifee.",
						"text": "The license must match your Bundle ID when created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 440,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						429
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Module.ts",
					"line": 433,
					"character": 30
				}
			]
		},
		{
			"id": 345,
			"name": "Module",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 346,
					"name": "cancelAllNotifications",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 347,
							"name": "cancelAllNotifications",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to cancel all notifications.",
								"text": "The `cancelAllNotifications` API removes any displayed notifications from the users device and\nany pending notification triggers.\n\nThis method does not cancel Android [Foreground Service](/react-native/docs/android/foreground-service)\nnotifications.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 28,
							"character": 24
						}
					]
				},
				{
					"id": 348,
					"name": "cancelNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 349,
							"name": "cancelNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to cancel a single notification.",
								"text": "The `cancelNotification` API removes removes any displayed notifications or ones with triggers\nset for the specified ID.\n\nThis method does not cancel [Foreground Service](/react-native/docs/android/foreground-service)\nnotifications.\n"
							},
							"parameters": [
								{
									"id": 350,
									"name": "notificationId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The unique notification ID. This is automatically generated and returned\nwhen creating a notification, or has been set manually via the `id` property.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 42,
							"character": 20
						}
					]
				},
				{
					"id": 351,
					"name": "createChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 352,
							"name": "createChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API to create and update channels on supported Android devices.",
								"text": "Creates a new Android channel. Channels are used to collectively assign notifications to\na single responsible channel. Users can manage settings for channels, e.g. disabling sound or vibration.\nChannels can be further organized into groups (see `createChannelGroup`).\n\nBy providing a `groupId` property, channels can be assigned to groups created with\n[`createChannelGroup`](/react-native/reference/createchannelgroup).\n\nThe channel ID is returned once the operation has completed.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 353,
									"name": "channel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The [`AndroidChannel`](/react-native/reference/androidchannel) interface used to create/update a group.\n"
									},
									"type": {
										"type": "reference",
										"name": "AndroidChannel",
										"id": 196
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 61,
							"character": 15
						}
					]
				},
				{
					"id": 357,
					"name": "createChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 358,
							"name": "createChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API to create or update a channel group on supported Android devices.",
								"text": "Creates a new Android channel group. Groups are used to further organize the appearance of your\nchannels in the settings UI. Groups allow users to easily identify and control multiple\nnotification channels.\n\nChannels can be assigned to groups during creation using the\n[`createChannel`](/react-native/reference/createchannel) method.\n\nThe channel group ID is returned once the operation has completed.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 359,
									"name": "channelGroup",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The [`AndroidChannelGroup`](/react-native/reference/androidchannelgroup)\ninterface used to create/update a group.\n"
									},
									"type": {
										"type": "reference",
										"name": "AndroidChannelGroup",
										"id": 225
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 92,
							"character": 20
						}
					]
				},
				{
					"id": 360,
					"name": "createChannelGroups",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 361,
							"name": "createChannelGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API to create and update multiple channel groups on supported Android devices.",
								"text": "This API is used to perform a single operation to create or update channel groups. See the\n[`createChannelGroup`](/react-native/reference/createchannelgroup) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 362,
									"name": "channelGroups",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An array of [`AndroidChannelGroup`](/react-native/reference/androidchannelgroup) interfaces.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannelGroup",
											"id": 225
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 103,
							"character": 21
						}
					]
				},
				{
					"id": 354,
					"name": "createChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 355,
							"name": "createChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API to create and update multiple channels on supported Android devices.",
								"text": "This API is used to perform a single operation to create or update channels. See the\n[`createChannel`](/react-native/reference/createchannel) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 356,
									"name": "channels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An array of [`AndroidChannel`](/react-native/reference/androidchannel) interfaces.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannel",
											"id": 196
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 72,
							"character": 16
						}
					]
				},
				{
					"id": 423,
					"name": "decrementBadgeCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 424,
							"name": "decrementBadgeCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Decrements the badge count for this application on the current device by a specified\nvalue.",
								"text": "Defaults to an decrement of `1`.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"parameters": [
								{
									"id": 425,
									"name": "decrementBy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 394,
							"character": 21
						}
					]
				},
				{
					"id": 363,
					"name": "deleteChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 364,
							"name": "deleteChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to delete a channel by ID on supported Android devices.",
								"text": "Channels can be deleted using this API by providing the channel ID. Channel information (including\nthe ID) can be retrieved from the [`getChannels`](/react-native/reference/getchannels) API.\n\n> When a channel is deleted, notifications assigned to that channel will fail to display.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 365,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The unique channel ID to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 118,
							"character": 15
						}
					]
				},
				{
					"id": 366,
					"name": "deleteChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 367,
							"name": "deleteChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to delete a channel group by ID on supported Android devices.",
								"text": "Channel groups can be deleted using this API by providing the channel ID. Channel information (including\nthe ID) can be retrieved from the [`getChannels`](/react-native/reference/getchannels) API.\n\nDeleting a group does not delete channels which are assigned to the group, they will instead be\nunassigned the group and continue to function as expected.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 368,
									"name": "channelGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The unique channel group ID to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 134,
							"character": 20
						}
					]
				},
				{
					"id": 369,
					"name": "displayNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 370,
							"name": "displayNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to immediately display or update a notification on the users device.",
								"text": "This API is used to display a notification on the users device. All\nchannels/categories should be created before triggering this method during the apps lifecycle.\n\nView the [Displaying a Notification](/react-native/docs/displaying-a-notification)\ndocumentation for more information.\n"
							},
							"parameters": [
								{
									"id": 371,
									"name": "notification",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The [`Notification`](/react-native/reference/notification) interfaced used\nto create a notification for both Android & iOS."
									},
									"type": {
										"type": "reference",
										"name": "Notification",
										"id": 297
									}
								},
								{
									"id": 372,
									"name": "trigger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "TODO(salakar) Trigger types\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 150,
							"character": 21
						}
					]
				},
				{
					"id": 415,
					"name": "getBadgeCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 416,
							"name": "getBadgeCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the current badge count value for this application on the current device.",
								"text": "Returns `0` on Android.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 360,
							"character": 15
						}
					]
				},
				{
					"id": 373,
					"name": "getChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 374,
							"name": "getChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to return a channel on supported Android devices.",
								"text": "This API is used to return a `NativeAndroidChannel`. Returns `null` if no channel could be matched to\nthe given ID.\n\nA \"native channel\" also includes additional properties about the channel at the time it's\nretrieved from the device. View the [`NativeAndroidChannel`](/react-native/reference/nativeandroidchannel)\ndocumentation for more information.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 375,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The channel ID created with [`createChannel`](/react-native/reference/createchannel). If\na unknown channel ID is provided, `null` is returned.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "NativeAndroidChannel",
												"id": 210
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 168,
							"character": 12
						}
					]
				},
				{
					"id": 378,
					"name": "getChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 379,
							"name": "getChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to return a channel group on supported Android devices.",
								"text": "This API is used to return an `NativeAndroidChannelGroup`. Returns `null` if no channel could be matched to\nthe given ID.\n\nA \"native channel group\" also includes additional properties about the channel group at the time it's\nretrieved from the device. View the [`NativeAndroidChannelGroup`](/react-native/reference/nativeandroidchannelgroup)\ndocumentation for more information.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 380,
									"name": "channelGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The channel ID created with [`createChannelGroup`](/react-native/reference/createchannelgroup). If\na unknown channel group ID is provided, `null` is returned.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "NativeAndroidChannelGroup",
												"id": 229
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 202,
							"character": 17
						}
					]
				},
				{
					"id": 381,
					"name": "getChannelGroups",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 382,
							"name": "getChannelGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to return all channel groups on supported Android devices.",
								"text": "This API is used to return a `NativeAndroidChannelGroup`. Returns an empty array if no channel\ngroups exist.\n\nA \"native channel group\" also includes additional properties about the channel group at the time it's\nretrieved from the device. View the [`NativeAndroidChannelGroup`](/react-native/reference/nativeandroidchannelgroup)\ndocumentation for more information.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NativeAndroidChannelGroup",
											"id": 229
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 218,
							"character": 18
						}
					]
				},
				{
					"id": 376,
					"name": "getChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 377,
							"name": "getChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to return all channels on supported Android devices.",
								"text": "This API is used to return a `NativeAndroidChannel`. Returns an empty array if no channels\nexist.\n\nA \"native channel\" also includes additional properties about the channel at the time it's\nretrieved from the device. View the [`NativeAndroidChannel`](/react-native/reference/nativeandroidchannel)\ndocumentation for more information.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NativeAndroidChannel",
											"id": 210
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 184,
							"character": 13
						}
					]
				},
				{
					"id": 383,
					"name": "getInitialNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 384,
							"name": "getInitialNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to fetch the notification which causes the application to open.",
								"text": "This API can be used to fetch which notification & press action has caused the application to\nopen. The call returns a `null` value when the application wasn't launched by a notification.\n\nOnce the initial notification has been consumed by this API, it is removed and will no longer\nbe available. It will also be removed if the user relaunches the application.\n\nView the [App open events](/react-native/docs/events#app-open-events) documentation for more\ninformation and example usage.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "InitialNotification",
												"id": 308
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 232,
							"character": 24
						}
					]
				},
				{
					"id": 411,
					"name": "getNotificationCategories",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 412,
							"name": "getNotificationCategories",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the currently set notification categories on this Apple device.",
								"text": "Returns an empty array on Android.\n\n  TODO better description\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IOSNotificationCategory",
											"id": 82
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 340,
							"character": 27
						}
					]
				},
				{
					"id": 413,
					"name": "getNotificationSettings",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 414,
							"name": "getNotificationSettings",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the current notification settings for this application on the current device.",
								"text": "Returns null on Android.\n\n  TODO better description\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "reference",
												"name": "IOSNotificationSettings",
												"id": 44
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 351,
							"character": 25
						}
					]
				},
				{
					"id": 420,
					"name": "incrementBadgeCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 421,
							"name": "incrementBadgeCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Increments the badge count for this application on the current device by a specified\nvalue.",
								"text": "Defaults to an increment of `1`.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"parameters": [
								{
									"id": 422,
									"name": "incrementBy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The value to increment the badge count by.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 384,
							"character": 21
						}
					]
				},
				{
					"id": 385,
					"name": "onBackgroundEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 386,
							"name": "onBackgroundEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to handle events when the application is in a background state.",
								"text": "Applications in a background state will use an event handler registered by this API method\nto send events. The handler must return a Promise once complete and only a single event handler\ncan be registered for the application.\n\nView the [Background events](/react-native/docs/events#background-events) documentation for more\ninformation and example usage.\n\nTo listen to foreground events, see the [`onForegroundEvent`](/react-native/reference/onforegroundevent) documentation.\n"
							},
							"parameters": [
								{
									"id": 387,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A Function which returns a Promise, called on a new event when the application\nis in a background state.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 388,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 389,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 390,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Event",
																"id": 312
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Promise",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/react-native/src/types/Module.ts",
													"line": 249,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 249,
							"character": 19
						}
					]
				},
				{
					"id": 391,
					"name": "onForegroundEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 392,
							"name": "onForegroundEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to handle events when the application is in a foreground state.",
								"text": "Applications in a foreground state will use an event handler registered by this API method\nto send events. Multiple foreground observers can be registered throughout the applications\nlifecycle. The method returns a function, used to unsubscribe from further events,\n\nView the [Foreground events](/react-native/docs/events#foreground-events) documentation for more\ninformation and example usage.\n\nTo listen to background events, see the [`onBackgroundEvent`](/react-native/reference/onbackgroundevent) documentation.\n"
							},
							"parameters": [
								{
									"id": 393,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A Function which returns a Promise, called on a new event when the application\nis in a foreground state.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 394,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 395,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 396,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Event",
																"id": 312
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/react-native/src/types/Module.ts",
													"line": 266,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 397,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 398,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/react-native/src/types/Module.ts",
											"line": 266,
											"character": 54
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 266,
							"character": 19
						}
					]
				},
				{
					"id": 399,
					"name": "openNotificationSettings",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 400,
							"name": "openNotificationSettings",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to open the Android System settings for the application.",
								"text": "If the API version is >= 26:\n- With no `channelId`, the notification settings screen is displayed.\n- With a `channelId`, the notification settings screen for the specific channel is displayed.\n\nIf the API version is < 26, the application settings screen is displayed. The `channelId`\nis ignored.\n\nIf an invalid `channelId` is provided (e.g. does not exist), the settings screen will redirect\nback to your application.\n\nOn iOS, this is a no-op & instantly resolves.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 401,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The ID of the channel which will be opened. Can be ignored/omitted to display the\noverall notification settings.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 287,
							"character": 26
						}
					]
				},
				{
					"id": 402,
					"name": "registerForegroundService",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 403,
							"name": "registerForegroundService",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to register a foreground service on Android devices.",
								"text": "This method is used to register a long running task which can be used with Foreground Service\nnotifications.\n\nOnly a single foreground service can exist for the application, and calling this method more\nthan once will update the existing task runner.\n\nView the [Foreground Service](/react-native/docs/android/foreground-service) documentation for\nmore information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 404,
									"name": "task",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The runner function which runs for the duration of the service's lifetime.\n"
									},
									"type": {
										"type": "reference",
										"name": "ForegroundServiceTask",
										"id": 341
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 304,
							"character": 27
						}
					]
				},
				{
					"id": 405,
					"name": "requestPermission",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 406,
							"name": "requestPermission",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Request specific notification permissions for your application on the current device.",
								"text": "Returns null on Android.\n\n  TODO better description\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios"
									}
								]
							},
							"parameters": [
								{
									"id": 407,
									"name": "permissions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IOSNotificationPermissions",
										"id": 22
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IOSNotificationSettings",
												"id": 44
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 316,
							"character": 19
						}
					]
				},
				{
					"id": 417,
					"name": "setBadgeCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 418,
							"name": "setBadgeCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the badge count value for this application on the current device.",
								"text": "If set to zero, the badge count is removed from the device. The count must also\nbe a positive number.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"parameters": [
								{
									"id": 419,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The number value to set as the badge count.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 372,
							"character": 15
						}
					]
				},
				{
					"id": 408,
					"name": "setNotificationCategories",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 409,
							"name": "setNotificationCategories",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the notification categories to be used on this Apple device.",
								"text": "  TODO better description\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"parameters": [
								{
									"id": 410,
									"name": "categories",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IOSNotificationCategory",
											"id": 82
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 329,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						346,
						348,
						351,
						357,
						360,
						354,
						423,
						363,
						366,
						369,
						415,
						373,
						378,
						381,
						376,
						383,
						411,
						413,
						420,
						385,
						391,
						399,
						402,
						405,
						417,
						408
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Module.ts",
					"line": 18,
					"character": 23
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ModuleWithStatics",
					"id": 435
				}
			]
		},
		{
			"id": 433,
			"name": "ModuleStatics",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface describing the static properties available on the default `@notifee/react-native` export.",
				"text": "```js\nimport notifee from `@notifee/react-native`;\n\nconsole.log(notifee.SDK_VERSION);\n```\n"
			},
			"children": [
				{
					"id": 434,
					"name": "SDK_VERSION",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the current Notifee SDK version in use."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 484,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						434
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Module.ts",
					"line": 480,
					"character": 30
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ModuleWithStatics",
					"id": 435
				}
			]
		},
		{
			"id": 435,
			"name": "ModuleWithStatics",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 516,
					"name": "SDK_VERSION",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns the current Notifee SDK version in use."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 484,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ModuleStatics.SDK_VERSION",
						"id": 434
					}
				},
				{
					"id": 436,
					"name": "cancelAllNotifications",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 437,
							"name": "cancelAllNotifications",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to cancel all notifications.",
								"text": "The `cancelAllNotifications` API removes any displayed notifications from the users device and\nany pending notification triggers.\n\nThis method does not cancel Android [Foreground Service](/react-native/docs/android/foreground-service)\nnotifications.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.cancelAllNotifications",
								"id": 346
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 28,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.cancelAllNotifications",
						"id": 346
					}
				},
				{
					"id": 438,
					"name": "cancelNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 439,
							"name": "cancelNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to cancel a single notification.",
								"text": "The `cancelNotification` API removes removes any displayed notifications or ones with triggers\nset for the specified ID.\n\nThis method does not cancel [Foreground Service](/react-native/docs/android/foreground-service)\nnotifications.\n"
							},
							"parameters": [
								{
									"id": 440,
									"name": "notificationId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The unique notification ID. This is automatically generated and returned\nwhen creating a notification, or has been set manually via the `id` property.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.cancelNotification",
								"id": 348
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 42,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.cancelNotification",
						"id": 348
					}
				},
				{
					"id": 441,
					"name": "createChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 442,
							"name": "createChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API to create and update channels on supported Android devices.",
								"text": "Creates a new Android channel. Channels are used to collectively assign notifications to\na single responsible channel. Users can manage settings for channels, e.g. disabling sound or vibration.\nChannels can be further organized into groups (see `createChannelGroup`).\n\nBy providing a `groupId` property, channels can be assigned to groups created with\n[`createChannelGroup`](/react-native/reference/createchannelgroup).\n\nThe channel ID is returned once the operation has completed.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 443,
									"name": "channel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The [`AndroidChannel`](/react-native/reference/androidchannel) interface used to create/update a group.\n"
									},
									"type": {
										"type": "reference",
										"name": "AndroidChannel",
										"id": 196
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.createChannel",
								"id": 351
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 61,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.createChannel",
						"id": 351
					}
				},
				{
					"id": 447,
					"name": "createChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 448,
							"name": "createChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API to create or update a channel group on supported Android devices.",
								"text": "Creates a new Android channel group. Groups are used to further organize the appearance of your\nchannels in the settings UI. Groups allow users to easily identify and control multiple\nnotification channels.\n\nChannels can be assigned to groups during creation using the\n[`createChannel`](/react-native/reference/createchannel) method.\n\nThe channel group ID is returned once the operation has completed.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 449,
									"name": "channelGroup",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The [`AndroidChannelGroup`](/react-native/reference/androidchannelgroup)\ninterface used to create/update a group.\n"
									},
									"type": {
										"type": "reference",
										"name": "AndroidChannelGroup",
										"id": 225
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.createChannelGroup",
								"id": 357
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 92,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.createChannelGroup",
						"id": 357
					}
				},
				{
					"id": 450,
					"name": "createChannelGroups",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 451,
							"name": "createChannelGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API to create and update multiple channel groups on supported Android devices.",
								"text": "This API is used to perform a single operation to create or update channel groups. See the\n[`createChannelGroup`](/react-native/reference/createchannelgroup) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 452,
									"name": "channelGroups",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An array of [`AndroidChannelGroup`](/react-native/reference/androidchannelgroup) interfaces.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannelGroup",
											"id": 225
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.createChannelGroups",
								"id": 360
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 103,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.createChannelGroups",
						"id": 360
					}
				},
				{
					"id": 444,
					"name": "createChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 445,
							"name": "createChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API to create and update multiple channels on supported Android devices.",
								"text": "This API is used to perform a single operation to create or update channels. See the\n[`createChannel`](/react-native/reference/createchannel) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 446,
									"name": "channels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An array of [`AndroidChannel`](/react-native/reference/androidchannel) interfaces.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannel",
											"id": 196
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.createChannels",
								"id": 354
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 72,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.createChannels",
						"id": 354
					}
				},
				{
					"id": 513,
					"name": "decrementBadgeCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 514,
							"name": "decrementBadgeCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Decrements the badge count for this application on the current device by a specified\nvalue.",
								"text": "Defaults to an decrement of `1`.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"parameters": [
								{
									"id": 515,
									"name": "decrementBy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.decrementBadgeCount",
								"id": 423
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 394,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.decrementBadgeCount",
						"id": 423
					}
				},
				{
					"id": 453,
					"name": "deleteChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 454,
							"name": "deleteChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to delete a channel by ID on supported Android devices.",
								"text": "Channels can be deleted using this API by providing the channel ID. Channel information (including\nthe ID) can be retrieved from the [`getChannels`](/react-native/reference/getchannels) API.\n\n> When a channel is deleted, notifications assigned to that channel will fail to display.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 455,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The unique channel ID to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.deleteChannel",
								"id": 363
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 118,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.deleteChannel",
						"id": 363
					}
				},
				{
					"id": 456,
					"name": "deleteChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 457,
							"name": "deleteChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to delete a channel group by ID on supported Android devices.",
								"text": "Channel groups can be deleted using this API by providing the channel ID. Channel information (including\nthe ID) can be retrieved from the [`getChannels`](/react-native/reference/getchannels) API.\n\nDeleting a group does not delete channels which are assigned to the group, they will instead be\nunassigned the group and continue to function as expected.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 458,
									"name": "channelGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The unique channel group ID to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.deleteChannelGroup",
								"id": 366
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 134,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.deleteChannelGroup",
						"id": 366
					}
				},
				{
					"id": 459,
					"name": "displayNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 460,
							"name": "displayNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to immediately display or update a notification on the users device.",
								"text": "This API is used to display a notification on the users device. All\nchannels/categories should be created before triggering this method during the apps lifecycle.\n\nView the [Displaying a Notification](/react-native/docs/displaying-a-notification)\ndocumentation for more information.\n"
							},
							"parameters": [
								{
									"id": 461,
									"name": "notification",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The [`Notification`](/react-native/reference/notification) interfaced used\nto create a notification for both Android & iOS."
									},
									"type": {
										"type": "reference",
										"name": "Notification",
										"id": 297
									}
								},
								{
									"id": 462,
									"name": "trigger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "TODO(salakar) Trigger types\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.displayNotification",
								"id": 369
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 150,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.displayNotification",
						"id": 369
					}
				},
				{
					"id": 505,
					"name": "getBadgeCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 506,
							"name": "getBadgeCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the current badge count value for this application on the current device.",
								"text": "Returns `0` on Android.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getBadgeCount",
								"id": 415
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 360,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getBadgeCount",
						"id": 415
					}
				},
				{
					"id": 463,
					"name": "getChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 464,
							"name": "getChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to return a channel on supported Android devices.",
								"text": "This API is used to return a `NativeAndroidChannel`. Returns `null` if no channel could be matched to\nthe given ID.\n\nA \"native channel\" also includes additional properties about the channel at the time it's\nretrieved from the device. View the [`NativeAndroidChannel`](/react-native/reference/nativeandroidchannel)\ndocumentation for more information.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 465,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The channel ID created with [`createChannel`](/react-native/reference/createchannel). If\na unknown channel ID is provided, `null` is returned.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "NativeAndroidChannel",
												"id": 210
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getChannel",
								"id": 373
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 168,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getChannel",
						"id": 373
					}
				},
				{
					"id": 468,
					"name": "getChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 469,
							"name": "getChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to return a channel group on supported Android devices.",
								"text": "This API is used to return an `NativeAndroidChannelGroup`. Returns `null` if no channel could be matched to\nthe given ID.\n\nA \"native channel group\" also includes additional properties about the channel group at the time it's\nretrieved from the device. View the [`NativeAndroidChannelGroup`](/react-native/reference/nativeandroidchannelgroup)\ndocumentation for more information.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 470,
									"name": "channelGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The channel ID created with [`createChannelGroup`](/react-native/reference/createchannelgroup). If\na unknown channel group ID is provided, `null` is returned.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "NativeAndroidChannelGroup",
												"id": 229
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getChannelGroup",
								"id": 378
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 202,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getChannelGroup",
						"id": 378
					}
				},
				{
					"id": 471,
					"name": "getChannelGroups",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 472,
							"name": "getChannelGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to return all channel groups on supported Android devices.",
								"text": "This API is used to return a `NativeAndroidChannelGroup`. Returns an empty array if no channel\ngroups exist.\n\nA \"native channel group\" also includes additional properties about the channel group at the time it's\nretrieved from the device. View the [`NativeAndroidChannelGroup`](/react-native/reference/nativeandroidchannelgroup)\ndocumentation for more information.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NativeAndroidChannelGroup",
											"id": 229
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getChannelGroups",
								"id": 381
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 218,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getChannelGroups",
						"id": 381
					}
				},
				{
					"id": 466,
					"name": "getChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 467,
							"name": "getChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to return all channels on supported Android devices.",
								"text": "This API is used to return a `NativeAndroidChannel`. Returns an empty array if no channels\nexist.\n\nA \"native channel\" also includes additional properties about the channel at the time it's\nretrieved from the device. View the [`NativeAndroidChannel`](/react-native/reference/nativeandroidchannel)\ndocumentation for more information.\n\nView the [Channels & Groups](/react-native/docs/android/channels) documentation for more information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NativeAndroidChannel",
											"id": 210
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getChannels",
								"id": 376
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 184,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getChannels",
						"id": 376
					}
				},
				{
					"id": 473,
					"name": "getInitialNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 474,
							"name": "getInitialNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to fetch the notification which causes the application to open.",
								"text": "This API can be used to fetch which notification & press action has caused the application to\nopen. The call returns a `null` value when the application wasn't launched by a notification.\n\nOnce the initial notification has been consumed by this API, it is removed and will no longer\nbe available. It will also be removed if the user relaunches the application.\n\nView the [App open events](/react-native/docs/events#app-open-events) documentation for more\ninformation and example usage.\n"
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "InitialNotification",
												"id": 308
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getInitialNotification",
								"id": 383
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 232,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getInitialNotification",
						"id": 383
					}
				},
				{
					"id": 501,
					"name": "getNotificationCategories",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 502,
							"name": "getNotificationCategories",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the currently set notification categories on this Apple device.",
								"text": "Returns an empty array on Android.\n\n  TODO better description\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IOSNotificationCategory",
											"id": 82
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getNotificationCategories",
								"id": 411
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 340,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getNotificationCategories",
						"id": 411
					}
				},
				{
					"id": 503,
					"name": "getNotificationSettings",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 504,
							"name": "getNotificationSettings",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the current notification settings for this application on the current device.",
								"text": "Returns null on Android.\n\n  TODO better description\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "null"
											},
											{
												"type": "reference",
												"name": "IOSNotificationSettings",
												"id": 44
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getNotificationSettings",
								"id": 413
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 351,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getNotificationSettings",
						"id": 413
					}
				},
				{
					"id": 510,
					"name": "incrementBadgeCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 511,
							"name": "incrementBadgeCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Increments the badge count for this application on the current device by a specified\nvalue.",
								"text": "Defaults to an increment of `1`.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"parameters": [
								{
									"id": 512,
									"name": "incrementBy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The value to increment the badge count by.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.incrementBadgeCount",
								"id": 420
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 384,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.incrementBadgeCount",
						"id": 420
					}
				},
				{
					"id": 475,
					"name": "onBackgroundEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 476,
							"name": "onBackgroundEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to handle events when the application is in a background state.",
								"text": "Applications in a background state will use an event handler registered by this API method\nto send events. The handler must return a Promise once complete and only a single event handler\ncan be registered for the application.\n\nView the [Background events](/react-native/docs/events#background-events) documentation for more\ninformation and example usage.\n\nTo listen to foreground events, see the [`onForegroundEvent`](/react-native/reference/onforegroundevent) documentation.\n"
							},
							"parameters": [
								{
									"id": 477,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A Function which returns a Promise, called on a new event when the application\nis in a background state.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 478,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 479,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 480,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Event",
																"id": 312
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Promise",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/react-native/src/types/Module.ts",
													"line": 249,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.onBackgroundEvent",
								"id": 385
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 249,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.onBackgroundEvent",
						"id": 385
					}
				},
				{
					"id": 481,
					"name": "onForegroundEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 482,
							"name": "onForegroundEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to handle events when the application is in a foreground state.",
								"text": "Applications in a foreground state will use an event handler registered by this API method\nto send events. Multiple foreground observers can be registered throughout the applications\nlifecycle. The method returns a function, used to unsubscribe from further events,\n\nView the [Foreground events](/react-native/docs/events#foreground-events) documentation for more\ninformation and example usage.\n\nTo listen to background events, see the [`onBackgroundEvent`](/react-native/reference/onbackgroundevent) documentation.\n"
							},
							"parameters": [
								{
									"id": 483,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A Function which returns a Promise, called on a new event when the application\nis in a foreground state.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 484,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 485,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 486,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Event",
																"id": 312
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "packages/react-native/src/types/Module.ts",
													"line": 266,
													"character": 29
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 487,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 488,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "packages/react-native/src/types/Module.ts",
											"line": 266,
											"character": 54
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.onForegroundEvent",
								"id": 391
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 266,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.onForegroundEvent",
						"id": 391
					}
				},
				{
					"id": 489,
					"name": "openNotificationSettings",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 490,
							"name": "openNotificationSettings",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to open the Android System settings for the application.",
								"text": "If the API version is >= 26:\n- With no `channelId`, the notification settings screen is displayed.\n- With a `channelId`, the notification settings screen for the specific channel is displayed.\n\nIf the API version is < 26, the application settings screen is displayed. The `channelId`\nis ignored.\n\nIf an invalid `channelId` is provided (e.g. does not exist), the settings screen will redirect\nback to your application.\n\nOn iOS, this is a no-op & instantly resolves.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 491,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The ID of the channel which will be opened. Can be ignored/omitted to display the\noverall notification settings.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.openNotificationSettings",
								"id": 399
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 287,
							"character": 26
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.openNotificationSettings",
						"id": 399
					}
				},
				{
					"id": 492,
					"name": "registerForegroundService",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 493,
							"name": "registerForegroundService",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "API used to register a foreground service on Android devices.",
								"text": "This method is used to register a long running task which can be used with Foreground Service\nnotifications.\n\nOnly a single foreground service can exist for the application, and calling this method more\nthan once will update the existing task runner.\n\nView the [Foreground Service](/react-native/docs/android/foreground-service) documentation for\nmore information.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "android"
									}
								]
							},
							"parameters": [
								{
									"id": 494,
									"name": "task",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The runner function which runs for the duration of the service's lifetime.\n"
									},
									"type": {
										"type": "reference",
										"name": "ForegroundServiceTask",
										"id": 341
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.registerForegroundService",
								"id": 402
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 304,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.registerForegroundService",
						"id": 402
					}
				},
				{
					"id": 495,
					"name": "requestPermission",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 496,
							"name": "requestPermission",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Request specific notification permissions for your application on the current device.",
								"text": "Returns null on Android.\n\n  TODO better description\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios"
									}
								]
							},
							"parameters": [
								{
									"id": 497,
									"name": "permissions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "IOSNotificationPermissions",
										"id": 22
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IOSNotificationSettings",
												"id": 44
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.requestPermission",
								"id": 405
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 316,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.requestPermission",
						"id": 405
					}
				},
				{
					"id": 507,
					"name": "setBadgeCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 508,
							"name": "setBadgeCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the badge count value for this application on the current device.",
								"text": "If set to zero, the badge count is removed from the device. The count must also\nbe a positive number.\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"parameters": [
								{
									"id": 509,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The number value to set as the badge count.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.setBadgeCount",
								"id": 417
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 372,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.setBadgeCount",
						"id": 417
					}
				},
				{
					"id": 498,
					"name": "setNotificationCategories",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 499,
							"name": "setNotificationCategories",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the notification categories to be used on this Apple device.",
								"text": "  TODO better description\n",
								"tags": [
									{
										"tag": "platform",
										"text": "ios\n"
									}
								]
							},
							"parameters": [
								{
									"id": 500,
									"name": "categories",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IOSNotificationCategory",
											"id": 82
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.setNotificationCategories",
								"id": 408
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Module.ts",
							"line": 329,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.setNotificationCategories",
						"id": 408
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						516
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						436,
						438,
						441,
						447,
						450,
						444,
						513,
						453,
						456,
						459,
						505,
						463,
						468,
						471,
						466,
						473,
						501,
						503,
						510,
						475,
						481,
						489,
						492,
						495,
						507,
						498
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Module.ts",
					"line": 488,
					"character": 34
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Module",
					"id": 345
				},
				{
					"type": "reference",
					"name": "ModuleStatics",
					"id": 433
				}
			]
		},
		{
			"id": 210,
			"name": "NativeAndroidChannel",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface which describes a channel which has been fetched from the device.",
				"text": "Contains additional information which is only available when fetching the channel from the device.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 214,
					"name": "badge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether badges are enabled for the channel.",
						"text": "View the [Badges](/react-native/docs/android/appearance#badges) documentation to learn more.\n\nDefaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 788,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.badge",
						"id": 199
					}
				},
				{
					"id": 211,
					"name": "blocked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 905,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 215,
					"name": "bypassDnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether or not notifications posted to this channel can interrupt the user in\n'Do Not Disturb' mode.",
						"text": "Defaults to `false`.\n\nThis setting cannot be overridden once the channel is created.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 29\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 800,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.bypassDnd",
						"id": 200
					}
				},
				{
					"id": 216,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the user visible description of this channel.",
						"text": "The recommended maximum length is 300 characters; the value may be truncated if it is too long.\n\nThis setting can be updated after creation.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 811,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.description",
						"id": 201
					}
				},
				{
					"id": 219,
					"name": "groupId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets what group this channel belongs to. Group information is only used for presentation, not for behavior.",
						"text": "Groups can be created via via [`createChannelGroup`](/react-native/reference/createchannelgroup).\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 838,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.groupId",
						"id": 204
					}
				},
				{
					"id": 212,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The unique channel ID."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 769,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.id",
						"id": 197
					}
				},
				{
					"id": 220,
					"name": "importance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the level of interruption of this notification channel.",
						"text": "Defaults to `Importance.DEFAULT`.\n\nThis setting can only be set to a lower importance level once set.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 847,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Importance",
						"id": 335
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.importance",
						"id": 205
					}
				},
				{
					"id": 221,
					"name": "lightColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If lights are enabled (via `lights`), sets/overrides the light color for notifications\nposted to this channel.",
						"text": "This setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 855,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "AndroidColor",
								"id": 256
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.lightColor",
						"id": 206
					}
				},
				{
					"id": 217,
					"name": "lights",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notifications posted to this channel should display notification lights, on devices that support that feature.",
						"text": "Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 820,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.lights",
						"id": 202
					}
				},
				{
					"id": 213,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The channel name. This is shown to the user so must be descriptive and relate to the notifications\nwhich will be delivered under this channel.",
						"text": "This setting can be updated after creation.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 777,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.name",
						"id": 198
					}
				},
				{
					"id": 224,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Overrides the sound the notification is displayed with.",
						"text": "The default value is to play no sound. To play the default system sound use 'default'.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 883,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.sound",
						"id": 209
					}
				},
				{
					"id": 218,
					"name": "vibration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notification posted to this channel should vibrate.",
						"text": "Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 829,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.vibration",
						"id": 203
					}
				},
				{
					"id": 223,
					"name": "vibrationPattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets/overrides the vibration pattern for notifications posted to this channel.",
						"text": "The pattern in milliseconds. Must be an even amount of numbers.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 874,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.vibrationPattern",
						"id": 208
					}
				},
				{
					"id": 222,
					"name": "visibility",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notifications posted to this channel appear on the lockscreen or not,\nand if so, whether they appear in a redacted form.",
						"text": "Defaults to `AndroidVisibility.PRIVATE`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 865,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidVisibility",
						"id": 293
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannel.visibility",
						"id": 207
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						214,
						211,
						215,
						216,
						219,
						212,
						220,
						221,
						217,
						213,
						224,
						218,
						223,
						222
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 893,
					"character": 37
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AndroidChannel",
					"id": 196
				}
			]
		},
		{
			"id": 229,
			"name": "NativeAndroidChannelGroup",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface which describes a channel group which has been fetched from the device.",
				"text": "Contains additional information which is only available when fetching the channel group from the device.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android API Level >= 26\n"
					}
				]
			},
			"children": [
				{
					"id": 230,
					"name": "blocked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns whether or not notifications posted to a Channel belonging to this group are\nblocked by the user.",
						"text": "On API levels < 28, returns `false`.\n\nView the [Listening to channel events](/react-native/docs/android/channels#listening-to-channel-events)\ndocumentation to learn more about subscribing to when a channel is blocked by the user.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 961,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 231,
					"name": "channels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Returns a list of channels assigned to this channel group."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 966,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "NativeAndroidChannel",
							"id": 210
						}
					}
				},
				{
					"id": 234,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional description of the group. This is visible to the user.",
						"text": "On Android APIs less than 28 this will always be undefined.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 28\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 939,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannelGroup.description",
						"id": 228
					}
				},
				{
					"id": 232,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Unique id for this channel group."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 922,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannelGroup.id",
						"id": 226
					}
				},
				{
					"id": 233,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the group. This is visible to the user so should be a descriptive name which\ncategorizes other channels (e.g. reminders).",
						"text": "The recommended maximum length is 40 characters; the value may be truncated if it is too long.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 930,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "AndroidChannelGroup.name",
						"id": 227
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						230,
						231,
						234,
						232,
						233
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 949,
					"character": 42
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "AndroidChannelGroup",
					"id": 225
				}
			]
		},
		{
			"id": 1,
			"name": "NativeError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An Error that has occurred in native Android or iOS code converted into a JavaScript Error."
			},
			"children": [
				{
					"id": 8,
					"name": "Error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 984,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ErrorConstructor"
					}
				},
				{
					"id": 2,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Error code, e.g. `invalid-parameter`"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Library.ts",
							"line": 12,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Error message"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Library.ts",
							"line": 17,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 6,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 973,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 4,
					"name": "nativeErrorCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The native returned error code, different per platform"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Library.ts",
							"line": 22,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 5,
					"name": "nativeErrorMessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The native returned error message, different per platform"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Library.ts",
							"line": 27,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 7,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 975,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						8,
						2,
						3,
						6,
						4,
						5,
						7
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Library.ts",
					"line": 8,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Error"
				}
			]
		},
		{
			"id": 297,
			"name": "Notification",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface for building a local notification for both Android & iOS devices.",
				"text": "To learn more about displaying a notification, view the [Displaying a Notification](/react-native/docs/displaying-a-notification)\ndocumentation.\n\n"
			},
			"children": [
				{
					"id": 306,
					"name": "android",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Android specific notification options. See the [`NotificationAndroid`](/react-native/reference/notificationandroid)\ninterface for more information and default options which are applied to a notification.",
						"tags": [
							{
								"tag": "platform",
								"text": "android\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 59,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "NotificationAndroid",
						"id": 111
					}
				},
				{
					"id": 301,
					"name": "body",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The main body content of a notification."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 43,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 302,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Additional data to store on the notification. Only `string` values can be stored.",
						"text": "Data can be used to provide additional context to your notification which can be retrieved\nat a later point in time (e.g. via an event).\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 51,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 303,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 304,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 305,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 298,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A unique identifier for your notification.",
						"text": "Notifications with the same ID will be created as the same instance, allowing you to update\na notification which already exists on the device.\n\nDefaults to a random string if not provided.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 307,
					"name": "ios",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "iOS specific notification options. See the [`NotificationIOS`](/react-native/reference/notificationios)\ninterface for more information and default options which are applied to a notification.",
						"tags": [
							{
								"tag": "platform",
								"text": "ios\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 67,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "NotificationIOS",
						"id": 9
					}
				},
				{
					"id": 300,
					"name": "subtitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification subtitle, which appears on a new line below/next the title."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 38,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 299,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification title which appears above the body text."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 33,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						306,
						301,
						302,
						298,
						307,
						300,
						299
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Notification.ts",
					"line": 19,
					"character": 29
				}
			]
		},
		{
			"id": 111,
			"name": "NotificationAndroid",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface for Android specific options which are applied to a notification.",
				"text": "To learn more about Android notifications, view the [Android](/react-native/docs/android/overview)\ndocumentation for full examples and usage.\n",
				"tags": [
					{
						"tag": "platform",
						"text": "android\n"
					}
				]
			},
			"children": [
				{
					"id": 112,
					"name": "actions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An array of [AndroidAction](/react-native/reference/androidaction) interfaces.",
						"text": "Adds quick actions to a notification. Quick Actions enable users to interact with your application\ndirectly from the notification body, providing an overall greater user experience.\n\nView the [Quick Actions](/react-native/docs/android/interaction#quick-actions) documentation for more information.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 24,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "AndroidAction",
							"id": 148
						}
					}
				},
				{
					"id": 113,
					"name": "asForegroundService",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When set to `true` this notification will be shown as a foreground service.",
						"text": "The application can only display one foreground service notification at once. If a\nforeground service notification is already running and a new notification with this flag set to\n`true` is provided, the service will stop the existing service and start a new one.\n\nEnsure a foreground service runner function has been provided to `registerForegroundService`.\nWithout one, the notification will not be displayed.\n\nView the [Foreground Service](/react-native/docs/android/foreground-service) documentation for more information.\n\nDefaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 40,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 114,
					"name": "autoCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Setting this flag will make it so the notification is automatically canceled when the user\npresses it in the panel.",
						"text": "By default when the user taps a notification it is automatically removed from the notification\npanel. Setting this to `false` will keep the notification in the panel.\n\nIf `false`, the notification will persist in the notification panel after being pressed. It will\nremain there until the user removes it (e.g. swipes away) or is cancelled via\n[`cancelNotification`](/react-native/reference/cancelNotification).\n\nDefaults to `true`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 55,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 115,
					"name": "badgeCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Overrides the current number of active notifications shown on the device.",
						"text": "If no number is provided, the system displays the current number of active notifications.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 116,
					"name": "badgeIconType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the type of badge used when the notification is being displayed in badge mode.",
						"text": "View the [Badges](/react-native/docs/android/appearance#badges) documentation for more information\nand usage examples.\n\nDefaults to `AndroidBadgeIconType.LARGE`.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level >= 26\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 74,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidBadgeIconType",
						"id": 235
					}
				},
				{
					"id": 117,
					"name": "category",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Assigns the notification to a category. Use the one which best describes the notification.",
						"text": "The category may be used by the device for ranking and filtering. It has no visual or behavioural\nimpact.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 82,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidCategory",
						"id": 239
					}
				},
				{
					"id": 118,
					"name": "channelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specifies the `AndroidChannel` which the notification will be delivered on.",
						"text": "On Android 8.0 (API 26) the channel ID is required. Providing a invalid channel ID will throw\nan error. View the [Channels & Groups](/react-native/docs/android/channels) documentation for\nmore information and usage examples.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 91,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 121,
					"name": "chronometerDirection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If `showChronometer` is `true`, the direction of the chronometer can be changed to count down instead of up.",
						"text": "Has no effect if `showChronometer` is `false`.\n\nDefaults to `up`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 124,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "up"
							},
							{
								"type": "stringLiteral",
								"value": "down"
							}
						]
					}
				},
				{
					"id": 119,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set an custom accent color for the notification. If not provided, the default notification\nsystem color will be used.",
						"text": "The color can be a predefined system `AndroidColor` or [hexadecimal](https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4).\n\nView the [Color](/react-native/docs/android/appearance#color) documentation for more information.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 101,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "AndroidColor",
								"id": 256
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 120,
					"name": "colorized",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When `asForegroundService` is `true`, the notification will use the provided `color` property\nto set a background color on the notification. This property has no effect when `asForegroundService`\nis `false`.",
						"text": "This should only be used for high priority ongoing tasks like navigation, an ongoing call,\nor other similarly high-priority events for the user.\n\nView the [Foreground Service](/react-native/docs/android/foreground-service) documentation for more information.\n\nDefaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 115,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 122,
					"name": "defaults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "For devices without notification channel support, this property sets the default behaviour\nfor a notification.",
						"text": "On API Level >= 26, this has no effect.\n\nSee [AndroidDefaults](/react-native/reference/androiddefaults) for more information.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level < 26\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 136,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "AndroidDefaults",
							"id": 279
						}
					}
				},
				{
					"id": 124,
					"name": "groupAlertBehavior",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the group alert behavior for this notification. Use this method to mute this notification\nif alerts for this notification's group should be handled by a different notification. This is\nonly applicable for notifications that belong to a `groupId`. This must be called on all notifications\nyou want to mute. For example, if you want only the summary of your group to make noise, all\nchildren in the group should have the group alert behavior `AndroidGroupAlertBehavior.SUMMARY`.",
						"text": "View the [Android Grouping & Sorting guide](/react-native/docs/android/grouping-and-sorting#group-behaviour)\ndocumentation to learn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 159,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidGroupAlertBehavior",
						"id": 284
					}
				},
				{
					"id": 123,
					"name": "groupId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set this notification to be part of a group of notifications sharing the same key. Grouped notifications may\ndisplay in a cluster or stack on devices which support such rendering.",
						"text": "On some devices, the system may automatically group notifications.\n\nView the [Android Grouping & Sorting guide](/react-native/docs/android/grouping-and-sorting) documentation to\nlearn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 147,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 125,
					"name": "groupSummary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether this notification should be a group summary.",
						"text": "If `true`, Set this notification to be the group summary for a group of notifications. Grouped notifications may display in\na cluster or stack on devices which support such rendering. Requires a `groupId` key to be set.\n\nDefaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 169,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 133,
					"name": "importance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set a notification importance for devices without channel support.",
						"text": "Devices using Android API Level < 26 have no channel support, meaning incoming notifications\nwon't be assigned an importance level from the channel. If your application supports devices\nwithout channel support, set this property to directly assign an importance level to the incoming\nnotification.\n\nDefaults to `Importance.DEFAULT`.\n\nView the [Appearance](/react-native/docs/android/appearance#importance) documentation to learn\nmore.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level < 26\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 259,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Importance",
						"id": 335
					}
				},
				{
					"id": 126,
					"name": "inputHistory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The local user input history for this notification.",
						"text": "Input history is shown on supported devices below the main notification body. History of the\nusers input with the notification should be shown when receiving action input by updating\nthe existing notification. It is recommended to clear the history when it is no longer\nrelevant (e.g. someone has responded to the users input).\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 179,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 127,
					"name": "largeIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets a large icon on the notification.",
						"text": "View the [Android Appearance](/react-native/docs/android/appearance#large-icons) documentation to learn\nmore about this property.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 187,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 128,
					"name": "lights",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the color and frequency of the light pattern. This only has effect on supported devices.",
						"text": "The option takes an array containing a hexadecimal color value or predefined `AndroidColor`,\nalong with the number of milliseconds to show the light, and the number of milliseconds to\nturn off the light. The light frequency pattern is repeated.\n\nView the [Lights](/react-native/docs/android/behaviour#lights) documentation for more information.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 198,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "AndroidColor",
										"id": 256
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 129,
					"name": "localOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether the notification will only appear on the local device.",
						"text": "Users who have connected devices which support notifications (such as a smart watch) will\nreceive an alert for the notification on that device. If set to `true`, the notification will\nonly alert on the main device.\n\nDefaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 209,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 130,
					"name": "ongoing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set whether this is an on-going notification.",
						"text": "Setting this value to `true` changes the default behaviour of a notification:\n\n- Ongoing notifications are sorted above the regular notifications in the notification panel.\n- Ongoing notifications do not have an 'X' close button, and are not affected by the \"Clear all\" button.\n\nView the [Ongoing](/react-native/docs/android/behaviour#ongoing) documentation for more information.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 221,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 131,
					"name": "onlyAlertOnce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Notifications with the same `id` will only show a single instance at any one time on your device,\nhowever will still alert the user (for example, by making a sound).",
						"text": "If this flag is set to `true`, notifications with the same `id` will only alert the user once whilst\nthe notification is visible.\n\nThis property is commonly used when frequently updating a notification (such as updating the progress bar).\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 232,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 132,
					"name": "pressAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "By default notifications have no behaviour when a user presses them. The\n`pressAction` property allows you to set what happens when a user presses\nthe notification.",
						"text": "View the  [Interaction](/react-native/docs/android/interaction) documentation to learn\nmore.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 242,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "NotificationPressAction",
						"id": 315
					}
				},
				{
					"id": 134,
					"name": "progress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A notification can show current progress of a task. The progress state can either be fixed or\nindeterminate (unknown).",
						"text": "View the [Progress Indicators](/react-native/docs/android/progress-indicators) documentation\nto learn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 268,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidProgress",
						"id": 192
					}
				},
				{
					"id": 142,
					"name": "showChronometer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Shows a counting timer on the notification, useful for on-going notifications such as a phone call.",
						"text": "If no `timestamp` is provided, a counter will display on the notification starting from 00:00. If a `timestamp` is\nprovided, the number of hours/minutes/seconds since that have elapsed since that value will be shown instead.\n\nDefaults to `false`.\n\nView the [Timers](/react-native/docs/android/timers#timers) documentation to learn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 343,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 135,
					"name": "showTimestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether the `timestamp` provided is shown in the notification.",
						"text": "Setting this field is useful for notifications which are more informative with a timestamp,\nsuch as an E-Mail.\n\nIf no `timestamp` is set, this field has no effect.\n\nView the [Timestamps](/react-native/docs/android/timers#timestamps) documentation to learn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 280,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 136,
					"name": "smallIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The small icon to show in the heads-up notification.",
						"text": "View the [Icons](/react-native/docs/android/appearance#small-icons) documentation to learn\nmore.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 288,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 137,
					"name": "smallIconLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An additional level parameter for when the icon is an instance of a Android `LevelListDrawable`."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 293,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 138,
					"name": "sortKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set a sort key that orders this notification among other notifications from the same package.\nThis can be useful if an external sort was already applied and an app would like to preserve\nthis. Notifications will be sorted lexicographically using this value, although providing\ndifferent priorities in addition to providing sort key may cause this value to be ignored.",
						"text": "If a `groupId` has been set, the sort key can also be used to order members of a notification group.\n\nView the [Android Grouping & Sorting](/react-native/docs/android/grouping-and-sorting#sorting)\ndocumentation to learn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 147,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Overrides the sound the notification is displayed with.",
						"text": "The default value is to play no sound. To play the default system sound use 'default'.\n\nThis setting has no behaviour on Android after API level version 26, instead you can set the\nsound on the notification channels.\n\nView the [Sound](/react-native/docs/android/behaviour#sound) documentation for more information.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android API Level < 26\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 395,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 139,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styled notifications provide users with more informative content and additional functionality.",
						"text": "Android supports different styles, however only one can be used with a notification.\n\nView the [Styles](/react-native/docs/android/styles) documentation to learn more\nview usage examples.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 316,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "AndroidBigPictureStyle",
								"id": 159
							},
							{
								"type": "reference",
								"name": "AndroidBigTextStyle",
								"id": 165
							},
							{
								"type": "reference",
								"name": "AndroidInboxStyle",
								"id": 170
							},
							{
								"type": "reference",
								"name": "AndroidMessagingStyle",
								"id": 175
							}
						]
					}
				},
				{
					"id": 145,
					"name": "tag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets a tag on the notification.",
						"text": "Tags can be used to query groups notifications by the tag value. Setting a tag has no\nimpact on the notification itself.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 369,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 140,
					"name": "ticker",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Text that summarizes this notification for accessibility services. As of the Android L release, this\ntext is no longer shown on screen, but it is still useful to accessibility services\n(where it serves as an audible announcement of the notification's appearance).",
						"text": "Ticker text does not show in the notification.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 325,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 141,
					"name": "timeoutAfter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the time in milliseconds at which the notification should be\nautomatically cancelled once displayed, if it is not already cancelled."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 331,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 146,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The timestamp in milliseconds for this notification. Notifications in the panel are sorted by this time.",
						"text": "The timestamp can be used with other properties to change the behaviour of a notification:\n\n- Use with `showTimestamp` to show the timestamp to the users.\n- Use with `showChronometer` to create a on-going timer.\n\nView the [Timers](/react-native/docs/android/timers) documentation to learn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 381,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 143,
					"name": "vibrationPattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the vibration pattern the notification uses when displayed. Must be an even amount of numbers.",
						"text": "View the [Vibration](/react-native/docs/android/behaviour#vibration) documentation to learn more.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 350,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 144,
					"name": "visibility",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the visibility for this notification. This may be used for apps which show user\nsensitive information (e.g. a banking app).",
						"text": "Defaults to `AndroidVisibility.PRIVATE`.\n\nView the [Visibility](/react-native/docs/android/appearance#visibility) documentation to learn\nmore.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
							"line": 361,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidVisibility",
						"id": 293
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						112,
						113,
						114,
						115,
						116,
						117,
						118,
						121,
						119,
						120,
						122,
						124,
						123,
						125,
						133,
						126,
						127,
						128,
						129,
						130,
						131,
						132,
						134,
						142,
						135,
						136,
						137,
						138,
						147,
						139,
						145,
						140,
						141,
						146,
						143,
						144
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationAndroid.ts",
					"line": 15,
					"character": 36
				}
			]
		},
		{
			"id": 9,
			"name": "NotificationIOS",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 10,
					"name": "attachments",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Optional array of attachments"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 13,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IOSNotificationAttachment",
							"id": 102
						}
					}
				},
				{
					"id": 11,
					"name": "badgeCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The application badge count number. Set to null to indicate no change, or 0 to hide."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 18,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					}
				},
				{
					"id": 12,
					"name": "categoryId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The id of a registered `IOSCategory` (via the `setNotificationCategories` API) that will be used to determine the\nappropriate actions to display for the notification."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 16,
					"name": "critical",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If the notification is a critical alert set this property to true; critical alerts will bypass\nthe mute switch and also bypass Do Not Disturb.",
						"tags": [
							{
								"tag": "platform",
								"text": "ios iOS >= 12\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 55,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 17,
					"name": "criticalVolume",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The optional audio volume of the critical sound; a float value between 0.0 and 1.0.",
						"text": "This property is not used unless the `critical: true` option is also set.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "ios iOS >= 12\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 64,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 14,
					"name": "importance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The importance level applied to the notification. This controls how the notification is presented\nto the user whilst the application is in the foreground.",
						"text": "Defaults to `Importance.DEFAULT`.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 37,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Importance",
						"id": 335
					}
				},
				{
					"id": 13,
					"name": "launchImageName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The launch image that will be used when the app is opened from this notification."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 29,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 15,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the sound file to be played. The sound must be in the Library/Sounds folder of the\napp's data container or the Library/Sounds folder of an app group data container.",
						"text": "If the file is not found in a container, the system will look in the app's bundle.\n\nUse 'default' to use the default system sound.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 47,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 19,
					"name": "summaryArgument",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The argument that is inserted in the IOSCategory.summaryFormat for this notification.",
						"text": "See `IOSCategory.summaryFormat`.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "ios iOS >= 12\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 79,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 20,
					"name": "summaryArgumentCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A number that indicates how many items in the summary are being represented.",
						"text": "For example if a messages app sends one notification for 3 new messages in a group chat,\nthe summaryArgument could be the name of the group chat and the summaryArgumentCount should be 3.\n\nDefaults to 1 and cannot be 0.\n\nSee `IOSCategory.summaryFormat`.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "ios iOS >= 12\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 93,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 21,
					"name": "targetContentId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The identifier for the window to be opened when the user taps a notification.",
						"text": "This value determines the window brought forward when the user taps this notification on iPadOS.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "ios iOS >= 13\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 102,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 18,
					"name": "threadId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A unique id for the thread or conversation related to this notification.\nThis will be used to visually group notifications together."
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/NotificationIOS.ts",
							"line": 70,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						10,
						11,
						12,
						16,
						17,
						14,
						13,
						15,
						19,
						20,
						21,
						18
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/NotificationIOS.ts",
					"line": 9,
					"character": 32
				}
			]
		},
		{
			"id": 315,
			"name": "NotificationPressAction",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface used to describe a press action for a notification.",
				"text": "There are various ways a user can interact with a notification, the most common being pressing\nthe notification, pressing an action or providing text input. This interface defines what happens\nwhen a user performs such interaction.\n\nOn Android; when provided to a notification action, the action will only open you application if\na `launchActivity` and/or a `mainComponent` is provided.\n"
			},
			"children": [
				{
					"id": 316,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The unique ID for the action.",
						"text": "The `id` property is used to differentiate between user press actions. When listening to notification\nevents, the ID can be read from the `event.detail.pressAction` object.\n"
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 147,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 317,
					"name": "launchActivity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The custom Android Activity to launch on a press action.",
						"text": "This property can be used in advanced scenarios to launch a custom Android Activity when the user\nperforms a press action.\n\nView the [Android Interaction](/react-native/docs/android/interaction) docs to learn more.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 159,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 318,
					"name": "mainComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom registered React component to launch on press action.",
						"text": "This property can be used to open a custom React component when the user performs a press action.\nFor this to correctly function on Android, a minor native code change is required.\n\nView the [Press Action](/react-native/docs/android/interaction#press-action) document to learn more.\n",
						"tags": [
							{
								"tag": "platform",
								"text": "android\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 171,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						316,
						317,
						318
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Notification.ts",
					"line": 140,
					"character": 40
				}
			]
		},
		{
			"id": 341,
			"name": "ForegroundServiceTask",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A representation of a Foreground Service task registered via [`registerForegroundService`](/react-native/reference/registerforegroundservice).",
				"text": "The task must resolve a promise once complete, and in turn removes the notification.\n\nView the [Foreground Service](/react-native/docs/android/foreground-service) documentation to\nlearn more.\n"
			},
			"sources": [
				{
					"fileName": "packages/react-native/src/types/Notification.ts",
					"line": 128,
					"character": 33
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 342,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 343,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 344,
									"name": "notification",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Notification",
										"id": 297
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/react-native/src/types/Notification.ts",
							"line": 128,
							"character": 35
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				235,
				239,
				256,
				279,
				284,
				288,
				293,
				319,
				30,
				56,
				40,
				35,
				335
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				148,
				159,
				165,
				196,
				225,
				170,
				153,
				175,
				181,
				185,
				192,
				312,
				328,
				106,
				99,
				102,
				82,
				92,
				22,
				44,
				308,
				430,
				426,
				428,
				345,
				433,
				435,
				210,
				229,
				1,
				297,
				111,
				9,
				315
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				341
			]
		}
	]
}