{
	"id": 0,
	"name": "@notifee/react-native",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 117,
			"name": "AndroidBadgeIconType",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "When a notification is being displayed as a badge, the `AndroidBadgeIconType` interface\ndescribes how the badge icon is shown to the user."
			},
			"children": [
				{
					"id": 120,
					"name": "LARGE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Shows the notification `largeIcon`."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 934,
							"character": 7
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 118,
					"name": "NONE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Shows no badge, but instead uses the notification `number` if provided."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 924,
							"character": 6
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 119,
					"name": "SMALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Shows the notification `smallIcon`."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 929,
							"character": 7
						}
					],
					"defaultValue": "1"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						120,
						118,
						119
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 920,
					"character": 32
				}
			]
		},
		{
			"id": 135,
			"name": "AndroidCategory",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 136,
					"name": "ALARM",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1010,
							"character": 7
						}
					],
					"defaultValue": "\"alarm\""
				},
				{
					"id": 137,
					"name": "CALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1011,
							"character": 6
						}
					],
					"defaultValue": "\"call\""
				},
				{
					"id": 138,
					"name": "EMAIL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1012,
							"character": 7
						}
					],
					"defaultValue": "\"email\""
				},
				{
					"id": 139,
					"name": "ERROR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1013,
							"character": 7
						}
					],
					"defaultValue": "\"error\""
				},
				{
					"id": 140,
					"name": "EVENT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1014,
							"character": 7
						}
					],
					"defaultValue": "\"event\""
				},
				{
					"id": 141,
					"name": "MESSAGE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1015,
							"character": 9
						}
					],
					"defaultValue": "\"msg\""
				},
				{
					"id": 142,
					"name": "NAVIGATION",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1016,
							"character": 12
						}
					],
					"defaultValue": "\"navigation\""
				},
				{
					"id": 143,
					"name": "PROGRESS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1017,
							"character": 10
						}
					],
					"defaultValue": "\"progress\""
				},
				{
					"id": 144,
					"name": "PROMO",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1018,
							"character": 7
						}
					],
					"defaultValue": "\"promo\""
				},
				{
					"id": 145,
					"name": "RECOMMENDATION",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1019,
							"character": 16
						}
					],
					"defaultValue": "\"recommendation\""
				},
				{
					"id": 146,
					"name": "REMINDER",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1020,
							"character": 10
						}
					],
					"defaultValue": "\"reminder\""
				},
				{
					"id": 147,
					"name": "SERVICE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1021,
							"character": 9
						}
					],
					"defaultValue": "\"service\""
				},
				{
					"id": 148,
					"name": "SOCIAL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1022,
							"character": 8
						}
					],
					"defaultValue": "\"social\""
				},
				{
					"id": 149,
					"name": "STATUS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1023,
							"character": 8
						}
					],
					"defaultValue": "\"status\""
				},
				{
					"id": 150,
					"name": "SYSTEM",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1024,
							"character": 8
						}
					],
					"defaultValue": "\"sys\""
				},
				{
					"id": 151,
					"name": "TRANSPORT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1025,
							"character": 11
						}
					],
					"defaultValue": "\"transport\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						136,
						137,
						138,
						139,
						140,
						141,
						142,
						143,
						144,
						145,
						146,
						147,
						148,
						149,
						150,
						151
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1009,
					"character": 27
				}
			]
		},
		{
			"id": 152,
			"name": "AndroidColor",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A set or predefined colors which can be used with Android Notifications."
			},
			"children": [
				{
					"id": 166,
					"name": "AQUA",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1045,
							"character": 6
						}
					],
					"defaultValue": "\"aqua\""
				},
				{
					"id": 156,
					"name": "BLACK",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1035,
							"character": 7
						}
					],
					"defaultValue": "\"black\""
				},
				{
					"id": 154,
					"name": "BLUE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1033,
							"character": 6
						}
					],
					"defaultValue": "\"blue\""
				},
				{
					"id": 158,
					"name": "CYAN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1037,
							"character": 6
						}
					],
					"defaultValue": "\"cyan\""
				},
				{
					"id": 162,
					"name": "DARKGRAY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1041,
							"character": 10
						}
					],
					"defaultValue": "\"darkgray\""
				},
				{
					"id": 165,
					"name": "DARKGREY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1044,
							"character": 10
						}
					],
					"defaultValue": "\"darkgrey\""
				},
				{
					"id": 167,
					"name": "FUCHSIA",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1046,
							"character": 9
						}
					],
					"defaultValue": "\"fuchsia\""
				},
				{
					"id": 163,
					"name": "GRAY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1042,
							"character": 6
						}
					],
					"defaultValue": "\"gray\""
				},
				{
					"id": 155,
					"name": "GREEN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1034,
							"character": 7
						}
					],
					"defaultValue": "\"green\""
				},
				{
					"id": 161,
					"name": "LIGHTGRAY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1040,
							"character": 11
						}
					],
					"defaultValue": "\"lightgray\""
				},
				{
					"id": 164,
					"name": "LIGHTGREY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1043,
							"character": 11
						}
					],
					"defaultValue": "\"lightgrey\""
				},
				{
					"id": 168,
					"name": "LIME",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1047,
							"character": 6
						}
					],
					"defaultValue": "\"lime\""
				},
				{
					"id": 159,
					"name": "MAGENTA",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1038,
							"character": 9
						}
					],
					"defaultValue": "\"magenta\""
				},
				{
					"id": 169,
					"name": "MAROON",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1048,
							"character": 8
						}
					],
					"defaultValue": "\"maroon\""
				},
				{
					"id": 170,
					"name": "NAVY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1049,
							"character": 6
						}
					],
					"defaultValue": "\"navy\""
				},
				{
					"id": 171,
					"name": "OLIVE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1050,
							"character": 7
						}
					],
					"defaultValue": "\"olive\""
				},
				{
					"id": 172,
					"name": "PURPLE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1051,
							"character": 8
						}
					],
					"defaultValue": "\"purple\""
				},
				{
					"id": 153,
					"name": "RED",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1032,
							"character": 5
						}
					],
					"defaultValue": "\"red\""
				},
				{
					"id": 173,
					"name": "SILVER",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1052,
							"character": 8
						}
					],
					"defaultValue": "\"silver\""
				},
				{
					"id": 174,
					"name": "TEAL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1053,
							"character": 6
						}
					],
					"defaultValue": "\"teal\""
				},
				{
					"id": 157,
					"name": "WHITE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1036,
							"character": 7
						}
					],
					"defaultValue": "\"white\""
				},
				{
					"id": 160,
					"name": "YELLOW",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1039,
							"character": 8
						}
					],
					"defaultValue": "\"yellow\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						166,
						156,
						154,
						158,
						162,
						165,
						167,
						163,
						155,
						161,
						164,
						168,
						159,
						169,
						170,
						171,
						172,
						153,
						173,
						174,
						157,
						160
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1031,
					"character": 24
				}
			]
		},
		{
			"id": 175,
			"name": "AndroidDefaults",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 176,
					"name": "ALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1057,
							"character": 5
						}
					],
					"defaultValue": " -1"
				},
				{
					"id": 179,
					"name": "LIGHTS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1060,
							"character": 8
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 177,
					"name": "SOUND",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1058,
							"character": 7
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 178,
					"name": "VIBRATE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1059,
							"character": 9
						}
					],
					"defaultValue": "2"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						176,
						179,
						177,
						178
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1056,
					"character": 27
				}
			]
		},
		{
			"id": 180,
			"name": "AndroidGroupAlertBehavior",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 181,
					"name": "ALL",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1064,
							"character": 5
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 183,
					"name": "CHILDREN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1066,
							"character": 10
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 182,
					"name": "SUMMARY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1065,
							"character": 9
						}
					],
					"defaultValue": "1"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						181,
						183,
						182
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1063,
					"character": 37
				}
			]
		},
		{
			"id": 191,
			"name": "AndroidImportance",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 192,
					"name": "DEFAULT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1079,
							"character": 9
						}
					],
					"defaultValue": "3"
				},
				{
					"id": 193,
					"name": "HIGH",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1080,
							"character": 6
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 194,
					"name": "LOW",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1081,
							"character": 5
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 195,
					"name": "MAX",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1082,
							"character": 5
						}
					],
					"defaultValue": "5"
				},
				{
					"id": 196,
					"name": "MIN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1083,
							"character": 5
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 197,
					"name": "NONE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1084,
							"character": 6
						}
					],
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						192,
						193,
						194,
						195,
						196,
						197
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1078,
					"character": 29
				}
			]
		},
		{
			"id": 184,
			"name": "AndroidPriority",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 185,
					"name": "DEFAULT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1070,
							"character": 9
						}
					],
					"defaultValue": "3"
				},
				{
					"id": 186,
					"name": "HIGH",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1071,
							"character": 6
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 187,
					"name": "LOW",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1072,
							"character": 5
						}
					],
					"defaultValue": "2"
				},
				{
					"id": 188,
					"name": "MAX",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1073,
							"character": 5
						}
					],
					"defaultValue": "5"
				},
				{
					"id": 189,
					"name": "MIN",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1074,
							"character": 5
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 190,
					"name": "NONE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1075,
							"character": 6
						}
					],
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						185,
						186,
						187,
						188,
						189,
						190
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1069,
					"character": 27
				}
			]
		},
		{
			"id": 206,
			"name": "AndroidRepeatInterval",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface used when defining the `repeatInterval` on a scheduled notification."
			},
			"children": [
				{
					"id": 209,
					"name": "DAY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1182,
							"character": 5
						}
					],
					"defaultValue": "\"day\""
				},
				{
					"id": 208,
					"name": "HOUR",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1181,
							"character": 6
						}
					],
					"defaultValue": "\"hour\""
				},
				{
					"id": 207,
					"name": "MINUTE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1180,
							"character": 8
						}
					],
					"defaultValue": "\"minute\""
				},
				{
					"id": 210,
					"name": "WEEK",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1183,
							"character": 6
						}
					],
					"defaultValue": "\"week\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						209,
						208,
						207,
						210
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1179,
					"character": 33
				}
			]
		},
		{
			"id": 121,
			"name": "AndroidStyle",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Available Android Notification Styles.",
				"text": "Used when providing a `style` to a notification builder with `displayNotification`.\n"
			},
			"children": [
				{
					"id": 122,
					"name": "BIGPICTURE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 943,
							"character": 12
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 123,
					"name": "BIGTEXT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 944,
							"character": 9
						}
					],
					"defaultValue": "1"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						122,
						123
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 942,
					"character": 24
				}
			]
		},
		{
			"id": 202,
			"name": "AndroidVisibility",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface used to define the visibility of an Android notification.",
				"text": "Use with the `visibility` property on the notification.\n\nDefault value is `AndroidVisibility.PRIVATE`.\n"
			},
			"children": [
				{
					"id": 203,
					"name": "PRIVATE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Show the notification on all lockscreens, but conceal sensitive or private information on secure lockscreens."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1161,
							"character": 9
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 204,
					"name": "PUBLIC",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Show this notification in its entirety on all lockscreens."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1166,
							"character": 8
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 205,
					"name": "SECRET",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Do not reveal any part of this notification on a secure lockscreen.",
						"text": "Useful for notifications showing sensitive information such as banking apps.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1173,
							"character": 8
						}
					],
					"defaultValue": " -1"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						203,
						204,
						205
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1157,
					"character": 29
				}
			]
		},
		{
			"id": 87,
			"name": "AndroidAction",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 91,
					"name": "allowGeneratedReplies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 841,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 89,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 839,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 88,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 838,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 92,
					"name": "remoteInputs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 842,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "AndroidRemoteInput",
							"id": 95
						}
					}
				},
				{
					"id": 93,
					"name": "semanticAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 843,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidSemanticAction",
						"id": 105
					}
				},
				{
					"id": 94,
					"name": "showsUserInterface",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 844,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 90,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 840,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						91,
						89,
						88,
						92,
						93,
						94,
						90
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 837,
					"character": 30
				}
			]
		},
		{
			"id": 124,
			"name": "AndroidBigPictureStyle",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Notifications can show a large image when expanded, which is useful for apps with a heavy media\nfocus, such as Instagram.",
				"text": "![Big Picture Style](https://developer.android.com/images/ui/notifications/template-image_2x.png)\n\n#### Example\n\n```js\nTODO example\n```\n"
			},
			"children": [
				{
					"id": 128,
					"name": "largeIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 963,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 126,
					"name": "picture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 961,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 129,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 964,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 127,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 962,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 125,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 960,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "BIGPICTURE",
						"id": 122
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						128,
						126,
						129,
						127,
						125
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 959,
					"character": 39
				}
			]
		},
		{
			"id": 130,
			"name": "AndroidBigTextStyle",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Notifications can show a large amount of text when expanded, for example when displaying new\nmessages.",
				"text": "By default, messages are not expanded, causing any overflowing notification `body` next to be\ntruncated. Setting a `bigTextStyle` allows the notification to be expandable showing the full\ntext body.\n\n![Big Text Style](https://developer.android.com/images/ui/notifications/template-large-text_2x.png)\n\n#### Example\n\n```js\nawait firebase.notifications().displayNotification({\n  body: 'Hello World',\n  android: {\n    style: {\n      type: firebase.notifications.AndroidStyle.BIGTEXT,\n      text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis consectetur magna ut nulla blandit tristique.',\n    },\n  }\n});\n```\n"
			},
			"children": [
				{
					"id": 134,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets summary text when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1006,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 132,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The text to display when the notification is expanded."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 996,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 133,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Overrides the notification title when expanded."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1001,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 131,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 992,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "BIGTEXT",
						"id": 123
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						134,
						132,
						133,
						131
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 991,
					"character": 36
				}
			]
		},
		{
			"id": 215,
			"name": "AndroidChannel",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface for describing an Android Channel.",
				"text": "Channels override any individual notification preferences (e.g. lights/vibration) and the user\nhas control over the setting.\n\n> On Android 8.0 (API 26) each notification must be assigned to a channel.\n\n![Android Channel](https://prismic-io.s3.amazonaws.com/invertase%2Fbb773539-581a-457d-ae43-687a7a7646a9_new+project+%2822%29.jpg)\n\n#### Example\n\n```js\nawait firebase.notifications().createChannel({\n  channelId: 'alarms',\n  name: 'Alarms & Timers',\n  lightColor: '#3f51b5',\n  vibrationPattern: [300, 400],\n});\n```\n"
			},
			"children": [
				{
					"id": 218,
					"name": "bypassDnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1284,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 216,
					"name": "channelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The unique channel ID."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1273,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 219,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the user visible description of this channel.",
						"text": "The recommended maximum length is 300 characters; the value may be truncated if it is too long.\n\nThis setting can be updated after creation.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1293,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 220,
					"name": "enableLights",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notifications posted to this channel should display notification lights, on devices that support that feature.",
						"text": "Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1302,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 221,
					"name": "enableVibration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notification posted to this channel should vibrate.",
						"text": "Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1311,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 222,
					"name": "groupId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets what group this channel belongs to. Group information is only used for presentation, not for behavior.",
						"text": "Create a group via `createChannelGroup()`.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1320,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 223,
					"name": "importance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the level of interruption of this notification channel.",
						"text": "See `AndroidImportance` for more details on the levels.\n\nThis setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1329,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "DEFAULT",
								"id": 192
							},
							{
								"type": "reference",
								"name": "HIGH",
								"id": 193
							},
							{
								"type": "reference",
								"name": "LOW",
								"id": 194
							},
							{
								"type": "reference",
								"name": "MAX",
								"id": 195
							},
							{
								"type": "reference",
								"name": "MIN",
								"id": 196
							},
							{
								"type": "reference",
								"name": "NONE",
								"id": 197
							}
						]
					}
				},
				{
					"id": 224,
					"name": "lightColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If lights are enabled (via `enableLights`), sets/overrides the light color for notifications\nposted to this channel.",
						"text": "This setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1343,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "AndroidColor",
								"id": 152
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 217,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The channel name. This is shown to the user so must be descriptive and relate to the notifications\nwhich will be delivered under this channel.",
						"text": "This setting can be updated after creation.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1281,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 226,
					"name": "showBadge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notifications posted to this channel can appear as application icon badges in a Launcher.",
						"text": "Defaults to `true`.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1357,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 227,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1360,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 228,
					"name": "vibrationPattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets/overrides the vibration pattern for notifications posted to this channel.",
						"text": "The pattern in milliseconds. Must be an even amount of numbers.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1367,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 225,
					"name": "visibility",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether notifications posted to this channel appear on the lockscreen or not, and if so, whether they appear in a redacted form.",
						"text": "This setting cannot be overridden once the channel is created.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1350,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "PRIVATE",
								"id": 203
							},
							{
								"type": "reference",
								"name": "PUBLIC",
								"id": 204
							},
							{
								"type": "reference",
								"name": "SECRET",
								"id": 205
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						218,
						216,
						219,
						220,
						221,
						222,
						223,
						224,
						217,
						226,
						227,
						228,
						225
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1269,
					"character": 31
				}
			]
		},
		{
			"id": 229,
			"name": "AndroidChannelGroup",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface for an Android Channel Group.",
				"text": "![Channel Group Example](https://prismic-io.s3.amazonaws.com/invertase%2F21fb6bbf-6932-47c3-8695-877e1d4f296b_new+project+%2821%29.jpg)\n"
			},
			"children": [
				{
					"id": 230,
					"name": "channelGroupId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Unique id for this channel group."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1379,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 232,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional description of the group. This is visible to the user."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1390,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 231,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the group. This is visible to the user so should be a descriptive name which\ncategorizes other channels (e.g. reminders)."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1385,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						230,
						232,
						231
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1375,
					"character": 36
				}
			]
		},
		{
			"id": 53,
			"name": "AndroidNotification",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The interface for Android specific options which are applied to a notification.",
				"text": "#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  android: {\n    color: '#3F51B5',\n    autoCancel: false,\n    ongoing: true,\n  },\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n",
				"tags": [
					{
						"tag": "android",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 54,
					"name": "actions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 237,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "AndroidAction",
							"id": 87
						}
					}
				},
				{
					"id": 55,
					"name": "autoCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Setting this flag will make it so the notification is automatically canceled when the user\nclicks it in the panel.",
						"text": "By default when the user taps a notification it is automatically removed from the notification\npanel. Setting this to `false` will keep the notification in the panel.\n\nIf `false`, the notification will persist in the notification panel after being pressed. It will\nremain there until the user removes (e.g. swipes away) or is cancelled via `removeDeliveredNotification`.\n\nDefaults to `true`.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 251,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 56,
					"name": "badgeIconType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Starting with 8.0 (API level 26), notification badges (also known as notification dots) appear\non a launcher icon when the associated app has an active notification. Users can long-press\non the app icon to reveal the notifications (alongside any app shortcuts).",
						"text": "![Badges](https://developer.android.com/images/ui/notifications/badges-open_2x.png)\n\nIf the notification is shown as a badge, this option can be set to control how the badge icon\nis shown:\n\n- `NONE`: Always shows as a number.\n- `SMALL`: Uses the icon provided to `smallIcon`.\n- `LARGE`: Uses the icon provided to `largeIcon`.\n\nDefaults to `AndroidBadgeIconType.NONE`.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 269,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "NONE",
								"id": 118
							},
							{
								"type": "reference",
								"name": "SMALL",
								"id": 119
							},
							{
								"type": "reference",
								"name": "LARGE",
								"id": 120
							}
						]
					}
				},
				{
					"id": 57,
					"name": "category",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Assigns the notification to a category. Use the one which best describes the notification.",
						"text": "The category may be used by the device for ranking and filtering.\n\n```js\nconst notification = {\n  body: 'Congratulations...',\n  android: {\n    category: firebase.notifications.AndroidCategory.MESSAGE,\n  },\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 290,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ALARM",
								"id": 136
							},
							{
								"type": "reference",
								"name": "CALL",
								"id": 137
							},
							{
								"type": "reference",
								"name": "EMAIL",
								"id": 138
							},
							{
								"type": "reference",
								"name": "ERROR",
								"id": 139
							},
							{
								"type": "reference",
								"name": "EVENT",
								"id": 140
							},
							{
								"type": "reference",
								"name": "MESSAGE",
								"id": 141
							},
							{
								"type": "reference",
								"name": "NAVIGATION",
								"id": 142
							},
							{
								"type": "reference",
								"name": "PROGRESS",
								"id": 143
							},
							{
								"type": "reference",
								"name": "PROMO",
								"id": 144
							},
							{
								"type": "reference",
								"name": "RECOMMENDATION",
								"id": 145
							},
							{
								"type": "reference",
								"name": "REMINDER",
								"id": 146
							},
							{
								"type": "reference",
								"name": "SERVICE",
								"id": 147
							},
							{
								"type": "reference",
								"name": "SOCIAL",
								"id": 148
							},
							{
								"type": "reference",
								"name": "STATUS",
								"id": 149
							},
							{
								"type": "reference",
								"name": "SYSTEM",
								"id": 150
							},
							{
								"type": "reference",
								"name": "TRANSPORT",
								"id": 151
							}
						]
					}
				},
				{
					"id": 58,
					"name": "channelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify the `AndroidChannel` which the notification will be delivered on.",
						"text": "Channels override any notification options.\n\n> On Android 8.0 (API 26) the channel ID is required. Providing a invalid channel ID will throw an error.\n\n#### Example\n\n```js\nconst channelId = firebase.notifications().createChannel({\n  channelId: 'my-custom-channel',\n  name: 'Custom Notification Channel',\n});\n\nawait firebase.notifications().displayNotification({\n  body: 'Notification with channel',\n  android: {\n    channelId,\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 331,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 59,
					"name": "clickAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A click action is used to help identify a notification which is being handled by your application.",
						"text": "#### Example\n\n```js\nconst notification = {\n  body: 'Update your settings',\n  android: {\n    channelId: 'open_settings',\n  },\n};\n\nawait firebase.notifications().displayNotification(notification);\n\n...\n\n// The user taps the notification....\nconst notification = await firebase.notifications().getInitialNotification();\n\nif (notification.android.clickAction === 'open_settings') {\n  // open settings view\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 358,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 60,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set an custom accent color for the notification. If not provided, the default notification\nsystem color will be used.",
						"text": "The color can be a predefined system `AndroidColor` or [hexadecimal](https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4).\n\n#### Example\n\nUsing a predefined color.\n\n```js\nimport notification, { AndroidColor } from '@react-native-firebase/notifications';\n\nawait notification.displayNotification({\n  android: {\n    color: AndroidColor.AQUA,\n  },\n});\n```\n\n#### Example\n\nUsing a hexadecimal color.\n\n```js\nimport notification, { AndroidColor } from '@react-native-firebase/notifications';\n\nawait notification.displayNotification({\n  android: {\n    color: '#2196f3', // material blue\n    // color: '#802196f3', // 50% opacity material blue\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 395,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "AndroidColor",
								"id": 152
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 61,
					"name": "colorized",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set whether this notification should be colorized. When set, the color set with `color`\nwill be used as the background color of this notification.",
						"text": "This should only be used for high priority ongoing tasks like navigation, an ongoing call,\nor other similarly high-priority events for the user.\n\nFor most styles, the coloring will only be applied if the notification is for a foreground service notification.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 406,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 62,
					"name": "contentInfo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 409,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 63,
					"name": "defaults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 412,
							"character": 10
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "AndroidDefaults",
							"id": 175
						}
					}
				},
				{
					"id": 64,
					"name": "group",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set this notification to be part of a group of notifications sharing the same key. Grouped notifications may\ndisplay in a cluster or stack on devices which support such rendering.",
						"text": "To make this notification the summary for its group, set `groupSummary` to `true`.\n\n![Grouped Notifications](https://developer.android.com/images/ui/notifications/notification-group_2x.png)\n\n```js\nimport notification from '@react-native-firebase/notifications';\n\nawait notification.displayNotification({\n  android: {\n    group: message.group.id,\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 432,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 65,
					"name": "groupAlertBehavior",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the group alert behavior for this notification. Use this method to mute this notification\nif alerts for this notification's group should be handled by a different notification. This is\nonly applicable for notifications that belong to a `group`. This must be called on all notifications\nyou want to mute. For example, if you want only the summary of your group to make noise, all\nchildren in the group should have the group alert behavior `AndroidGroupAlertBehavior.SUMMARY`.",
						"text": "See `AndroidGroupAlertBehavior` for more information on different behaviours.\n\nDefaults to `AndroidGroupAlertBehavior.ALL`.\n\n#### Example\n\n```js\nimport notification, { AndroidGroupAlertBehavior } from '@react-native-firebase/notifications';\n\nawait notification.displayNotification({\n  android: {\n    group: message.group.id,\n    groupAlertBehavior: AndroidGroupAlertBehavior.CHILDREN,\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 458,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ALL",
								"id": 181
							},
							{
								"type": "reference",
								"name": "SUMMARY",
								"id": 182
							},
							{
								"type": "reference",
								"name": "CHILDREN",
								"id": 183
							}
						]
					}
				},
				{
					"id": 66,
					"name": "groupSummary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether this notification should be a group summary.",
						"text": "If `true`, Set this notification to be the group summary for a group of notifications. Grouped notifications may display in\na cluster or stack on devices which support such rendering. Requires a `group` key to be set.\n\nDefaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 471,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 67,
					"name": "largeIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets a large icon on the notification.",
						"text": "![Large Icon](https://prismic-io.s3.amazonaws.com/invertase%2F3f2f803e-b9ae-4e6b-8b58-f0b8ab01aa52_new+project+%2819%29.jpg)\n\nTODO: example, URL?\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 480,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 68,
					"name": "lights",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the color and frequency of the light pattern. This only has effect on supported devices.",
						"text": "The option takes an array containing a hexadecimal color value or predefined `AndroidColor`,\nalong with the number of milliseconds to show the light, and the number of milliseconds to\nturn off the light. The light frequency pattern is repeated.\n\n#### Example\n\nShow a red light, for 300ms and turn it off for 600ms.\n\n```js\nawait notification.displayNotification({\n  android: {\n    lights: ['#f44336', 300, 600],\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 501,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "AndroidColor",
										"id": 152
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 69,
					"name": "localOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set whether or not this notification is only relevant to the current device.",
						"text": "Some notifications can be bridged to other devices for remote display. This hint can be set to recommend this notification not be bridged.\n\nDefaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 510,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 70,
					"name": "number",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set the large number at the right-hand side of the notification."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 515,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 71,
					"name": "ongoing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set whether this is an on-going notification.",
						"text": "- Ongoing notifications are sorted above the regular notifications in the notification panel.\n- Ongoing notifications do not have an 'X' close button, and are not affected by the \"Clear all\" button.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 523,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 72,
					"name": "onlyAlertOnce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set this flag if you would only like the sound, vibrate and ticker to be played if the notification is not already showing."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 528,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 73,
					"name": "priority",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set the relative priority for this notification. Priority is an indication of how much of the\nuser's valuable attention should be consumed by this notification. Low-priority notifications\nmay be hidden from the user in certain situations, while the user might be interrupted for a\nhigher-priority notification. The system sets a notification's priority based on various\nfactors including the setPriority value. The effect may differ slightly on different platforms.",
						"text": "Defaults to `AndroidPriority.DEFAULT`.\n\nSee `AndroidPriority` for descriptions of each priority settings.\n\n#### Example\n\n```js\nawait notification.displayNotification({\n  android: {\n    priority: firebase.notifications.AndroidPriority.LOW,\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 551,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "DEFAULT",
								"id": 185
							},
							{
								"type": "reference",
								"name": "HIGH",
								"id": 186
							},
							{
								"type": "reference",
								"name": "LOW",
								"id": 187
							},
							{
								"type": "reference",
								"name": "MAX",
								"id": 188
							},
							{
								"type": "reference",
								"name": "MIN",
								"id": 189
							},
							{
								"type": "reference",
								"name": "NONE",
								"id": 190
							}
						]
					}
				},
				{
					"id": 74,
					"name": "progress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A notification can show current progress of a task. The progress state can either be fixed or\nindeterminate (unknown).",
						"text": "#### Example - Fixed Progress\n\n![Fixed Progress](https://miro.medium.com/max/480/1*OHOY45cU27NaYkF0MU3hrw.gif)\n\n```js\nawait notification.displayNotification({\n  notificationId: 'upload-task',\n  android: {\n    progress: {\n      max: 10,\n      current: 0,\n    }\n  },\n});\n\n// Sometime later... Set progress to 50%\nawait notification.displayNotification({\n  notificationId: 'upload-task',\n  android: {\n    progress: {\n      max: 10,\n      current: 5,\n    }\n  },\n});\n```\n\n#### Example - Indeterminate Progress\n\nSetting `indeterminate` to `true` overrides the `max`/`current` settings.\n\n![Progress](https://miro.medium.com/max/480/1*mW-_3PUxAG1unAZOf0IuoQ.gif)\n\n```js\nawait notification.displayNotification({\n  android: {\n    progress: {\n      max: 10,\n      current: 5,\n      indeterminate: true,\n    }\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 608,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidProgress",
						"id": 198
					}
				},
				{
					"id": 75,
					"name": "remoteInputHistory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 611,
							"character": 20
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 76,
					"name": "shortcutId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If this notification is duplicative of a Launcher shortcut, sets the id of the shortcut,\nin case the Launcher wants to hide the shortcut.",
						"text": "Note: This field will be ignored by Launchers that don't support badging or shortcuts.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 619,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 77,
					"name": "showWhenTimestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets whether the timestamp provided to `when` is shown in the notification.",
						"text": "Setting this field is useful for notifications which are more informative with a timestamp,\nsuch as a message.\n\nIf no `when` timestamp is set, this field has no effect.\n\n#### Example\n\nAssuming the current notification has delivered to the user 8 minutes ago, the timestamp\nwill be displayed to the user in the notification, for example:\n\n![When Timestamp](https://prismic-io.s3.amazonaws.com/invertase%2F3f2f803e-b9ae-4e6b-8b58-f0b8ab01aa52_new+project+%2819%29.jpg)\n\n```js\nawait notification.displayNotification({\n  android: {\n    when: Date.now(),\n    showWhenTimestamp: true,\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 645,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 78,
					"name": "smallIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The small icon for the notification with various levels.",
						"text": "Icon levels can be used to show different icons. For example if displaying a notification about the\ndevice battery level, 4 different levels can be defined (4 = full battery icon, 1 = low battery icon).\n\n#### Example\n\n```js\nawait notification.displayNotification({\n  bodyL: 'Custom small icon',\n  android: {\n    smallIcon: ['battery_level', 2],\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 685,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 79,
					"name": "sortKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set a sort key that orders this notification among other notifications from the same package.\nThis can be useful if an external sort was already applied and an app would like to preserve\nthis. Notifications will be sorted lexicographically using this value, although providing\ndifferent priorities in addition to providing sort key may cause this value to be ignored.",
						"text": "If a `group` has been set, the sort key can also be used to order members of a notification group.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 695,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 80,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styled notifications provide users with more informative content and additional functionality.\nThe current supported formats are:",
						"text": "1. **Big Picture Style**: Shows a large picture when expanded. See `AndroidBigPictureStyle` for more information and examples.\n2. **Big Text Style**: Shows a large volume of text when expanded. See `AndroidBigTextStyle` for more information and examples.\n\n#### Example - Big Picture Style\n\n#### Example - Big Text Style\n\n```js\nawait notification.displayNotification({\n  body: 'Congratulations you have won a prize...',\n  android: {\n    style: {\n      type: firebase.notifications.AndroidStyle.BIGTEXT,\n      text: 'Congratulations you have won a prize. To claim the prize please login to your account...'\n    }\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 720,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "AndroidBigPictureStyle",
								"id": 124
							},
							{
								"type": "reference",
								"name": "AndroidBigTextStyle",
								"id": 130
							}
						]
					}
				},
				{
					"id": 81,
					"name": "ticker",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A ticker is used for accessibility purposes for devices with accessibility services enabled. Text passed\nto `ticker` will be audibly announced.",
						"text": "Ticker text does not show in the notification.\n\n#### Example\n\n```js\nawait notification.displayNotification({\n  android: {\n    body: 'You have 1 new message',\n    ticker: 'A new message has been received',\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 739,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 82,
					"name": "timeoutAfter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the time in milliseconds at which the notification should be\ncancelled, if it is not already cancelled.",
						"text": "#### Example\n\nTime out in 10 minutes.\n\n```js\nawait notification.displayNotification({\n  body: 'Limited time prize available',\n  android: {\n    timeoutAfter: Date.now() + 600000,\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 758,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 83,
					"name": "usesChronometer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Show the `when` field as a stopwatch. Instead of presenting when as a timestamp, the\nnotification will show an automatically updating display of the minutes and seconds from the `when` timestamp.\nUseful when showing an elapsed time (like an ongoing phone call).",
						"text": "If no `when` timestamp is set, this has no effect.\n\nDefaults to `false`.\n\n#### Example\n\n```js\nawait notification.displayNotification({\n  body: 'Limited time prize available',\n  android: {\n    when: Date.now() + 300000,\n    usesChronometer: true,\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 781,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 84,
					"name": "vibrationPattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Enables and sets the vibrate pattern.",
						"text": "The pattern in milliseconds. Must be an even amount of numbers.\n\n#### Example\n\nVibrate for 300ms with a 300ms delay.\n\n```js\nawait notification.displayNotification({\n  android: {\n    body: 'Vibrating notification',\n    vibrationPattern: [300, 300],\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 801,
							"character": 18
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 85,
					"name": "visibility",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Sets the visibility for this notification. This may be used for apps which show user\nsensitive information (e.g. a banking app).",
						"text": "Defaults to `AndroidVisibility.PRIVATE`.\n\nSee `AndroidVisibility` for more information.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 811,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "PRIVATE",
								"id": 203
							},
							{
								"type": "reference",
								"name": "PUBLIC",
								"id": 204
							},
							{
								"type": "reference",
								"name": "SECRET",
								"id": 205
							}
						]
					}
				},
				{
					"id": 86,
					"name": "when",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The timestamp in milliseconds for this notification. Notifications in the panel are sorted by this time.",
						"text": "- Use with `showWhenTimestamp` to show the timestamp to the users.\n- Use with `usesChronometer` to create a on-going timer.\n\n#### Example\n\nShow the length of time the notification has been showing for.\n\n```js\nawait notification.displayNotification({\n  body: 'Phone call in progress',\n  android: {\n    ongoing: true,\n    when: Date.now(),\n    usesChronometer: true,\n  },\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 834,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						54,
						55,
						56,
						57,
						58,
						59,
						60,
						61,
						62,
						63,
						64,
						65,
						66,
						67,
						68,
						69,
						70,
						71,
						72,
						73,
						74,
						75,
						76,
						77,
						78,
						79,
						80,
						81,
						82,
						83,
						84,
						85,
						86
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 233,
					"character": 36
				}
			]
		},
		{
			"id": 198,
			"name": "AndroidProgress",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface for defining the progress of an Android Notification.",
				"text": "A notification can show current progress of a task. The progress state can either be fixed or\nindeterminate (unknown).\n\n#### Example - Fixed Progress\n\n![Fixed Progress](https://miro.medium.com/max/480/1*OHOY45cU27NaYkF0MU3hrw.gif)\n\n```js\nawait notification.displayNotification({\n  android: {\n    progress: {\n      max: 10,\n      current: 5,\n    }\n  },\n});\n```\n\n#### Example - Indeterminate Progress\n\nSetting `indeterminate` to `true` overrides the `max`/`current` settings.\n\n![Progress](https://miro.medium.com/max/480/1*mW-_3PUxAG1unAZOf0IuoQ.gif)\n\n```js\nawait notification.displayNotification({\n  android: {\n    progress: {\n      max: 10,\n      current: 5,\n      indeterminate: true,\n    }\n  },\n});\n```\n"
			},
			"children": [
				{
					"id": 200,
					"name": "current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The current progress.",
						"text": "E.g. setting to `4` with a `max` value of `10` would set a fixed progress bar on the notification at 40% complete.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1139,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 201,
					"name": "indeterminate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true`, overrides the `max` and `current` values and displays an unknown progress style. Useful when you have no\nknowledge of a tasks completion state.",
						"text": "Defaults to `false`.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1147,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 199,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The maximum progress number. E.g `10`.",
						"text": "Must be greater than the `current` value.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1132,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						200,
						201,
						199
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1126,
					"character": 32
				}
			]
		},
		{
			"id": 95,
			"name": "AndroidRemoteInput",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 101,
					"name": "allowDataTypes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 850,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 102,
					"name": "allowFreeFormTextInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 851,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 103,
					"name": "choices",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 852,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 97,
					"name": "extras",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 849,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 98,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 99,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 100,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 96,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 848,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 104,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 853,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						101,
						102,
						103,
						97,
						96,
						104
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 847,
					"character": 35
				}
			]
		},
		{
			"id": 105,
			"name": "AndroidSemanticAction",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "TODO"
			},
			"children": [
				{
					"id": 106,
					"name": "ARCHIVE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Archive the content associated with the notification. This could mean archiving an email, message, etc."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 863,
							"character": 9
						}
					],
					"type": {
						"type": "unknown",
						"name": "5"
					}
				},
				{
					"id": 107,
					"name": "CALL",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Call a contact, group, etc."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 868,
							"character": 6
						}
					],
					"type": {
						"type": "unknown",
						"name": "10"
					}
				},
				{
					"id": 108,
					"name": "DELETE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Delete the content associated with the notification. This could mean deleting an email, message, etc."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 873,
							"character": 8
						}
					],
					"type": {
						"type": "unknown",
						"name": "4"
					}
				},
				{
					"id": 109,
					"name": "MARK_AS_READ",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Mark content as read."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 878,
							"character": 14
						}
					],
					"type": {
						"type": "unknown",
						"name": "2"
					}
				},
				{
					"id": 110,
					"name": "MARK_AS_UNREAD",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Mark content as unread."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 883,
							"character": 16
						}
					],
					"type": {
						"type": "unknown",
						"name": "3"
					}
				},
				{
					"id": 111,
					"name": "MUTE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Mute the content associated with the notification. This could mean silencing a conversation or currently playing media."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 888,
							"character": 6
						}
					],
					"type": {
						"type": "unknown",
						"name": "6"
					}
				},
				{
					"id": 112,
					"name": "NONE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "No semantic action defined."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 893,
							"character": 6
						}
					],
					"type": {
						"type": "unknown",
						"name": "0"
					}
				},
				{
					"id": 113,
					"name": "REPLY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Reply to a conversation, chat, group, or wherever replies may be appropriate."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 898,
							"character": 7
						}
					],
					"type": {
						"type": "unknown",
						"name": "1"
					}
				},
				{
					"id": 114,
					"name": "THUMBS_DOWN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Mark content with a thumbs down."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 903,
							"character": 13
						}
					],
					"type": {
						"type": "unknown",
						"name": "9"
					}
				},
				{
					"id": 115,
					"name": "THUMBS_UP",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Mark content with a thumbs up."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 908,
							"character": 11
						}
					],
					"type": {
						"type": "unknown",
						"name": "8"
					}
				},
				{
					"id": 116,
					"name": "UNMUTE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Unmute the content associated with the notification. This could mean un-silencing a conversation or currently playing media."
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 913,
							"character": 8
						}
					],
					"type": {
						"type": "unknown",
						"name": "7"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						106,
						107,
						108,
						109,
						110,
						111,
						112,
						113,
						114,
						115,
						116
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 859,
					"character": 38
				}
			]
		},
		{
			"id": 44,
			"name": "IOSAttachment",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 45,
					"name": "identifier",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 200,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 47,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 202,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSAttachmentOptions",
						"id": 48
					}
				},
				{
					"id": 46,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 201,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						45,
						47,
						46
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 199,
					"character": 30
				}
			]
		},
		{
			"id": 48,
			"name": "IOSAttachmentOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 51,
					"name": "thumbnailClippingRect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 209,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "object"
							}
						]
					}
				},
				{
					"id": 50,
					"name": "thumbnailHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 208,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 52,
					"name": "thumbnailTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 210,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 49,
					"name": "typeHint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 207,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						51,
						50,
						52,
						49
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 206,
					"character": 37
				}
			]
		},
		{
			"id": 35,
			"name": "IOSNotification",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 37,
					"name": "alertAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "ios",
								"text": "iOS 9 Only\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 176,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36,
					"name": "attachment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "ios",
								"text": "iOS 10+\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 171,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSAttachment",
						"id": 44
					}
				},
				{
					"id": 38,
					"name": "badge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 178,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 39,
					"name": "category",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 181,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 43,
					"name": "complete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 196,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "Function"
					}
				},
				{
					"id": 40,
					"name": "hasAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "ios",
								"text": "iOS 9 Only\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 186,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 41,
					"name": "launchImage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 188,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42,
					"name": "threadIdentifier",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "ios",
								"text": "iOS 10+\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 193,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						37,
						36,
						38,
						39,
						43,
						40,
						41,
						42
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 167,
					"character": 32
				}
			]
		},
		{
			"id": 233,
			"name": "Module",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "The Firebase Notifications service interface.",
				"text": "> This module is available for the default app only.\n\n#### Example\n\nGet the Notifications service for the default app:\n\n```js\nconst defaultAppNotifications = firebase.notifications();\n```\n"
			},
			"children": [
				{
					"id": 234,
					"name": "cancelAllNotifications",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 235,
							"name": "cancelAllNotifications",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1408,
							"character": 24
						}
					]
				},
				{
					"id": 236,
					"name": "cancelNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 237,
							"name": "cancelNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 238,
									"name": "notificationId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1410,
							"character": 20
						}
					]
				},
				{
					"id": 239,
					"name": "createChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 240,
							"name": "createChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new Android channel. Channels are used to collectively assign notifications to\na single responsible channel. Users can manage settings for channels, e.g. disabling sound or vibration.\nChannels can be further organized into groups (see `createChannelGroup`).",
								"text": "Once a channel has been created, only certain fields such as the name & description can be\nmodified. To change a groups settings, you must delete the group (via `deleteChannel`)\nand re-create it. Keep in mind the user always have final control over channel settings.\n\nCreating an existing notification channel with its original values performs no operation,\nso it's safe to call this code when starting an app.\n\nCreated channels can be viewed/managed under App Info -> Notifications.\n\n> On Android 8.0 (API 26) all notifications must be assigned to a channel.\n\nReturns the channel ID.\n\n#### Example\n\n```js\nconst channelId = await firebase.notifications().createChannel({\n  channelId: 'custom-channel',\n  name: 'Custom Channel',\n  description: 'A test channel',\n});\n\nawait firebase.notifications().displayNotification({\n  body: 'Test notification',\n  android: {\n    channelId, // 'custom-channel'\n  },\n});\n```\n"
							},
							"parameters": [
								{
									"id": 241,
									"name": "channel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An `AndroidChannel` interface.\n"
									},
									"type": {
										"type": "reference",
										"name": "AndroidChannel",
										"id": 215
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1449,
							"character": 15
						}
					]
				},
				{
					"id": 245,
					"name": "createChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 246,
							"name": "createChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 247,
									"name": "channelGroup",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AndroidChannelGroup",
										"id": 229
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1460,
							"character": 20
						}
					]
				},
				{
					"id": 248,
					"name": "createChannelGroups",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 249,
							"name": "createChannelGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 250,
									"name": "channelGroups",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannelGroup",
											"id": 229
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1462,
							"character": 21
						}
					]
				},
				{
					"id": 242,
					"name": "createChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 243,
							"name": "createChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates multiple channels in a single operation.",
								"text": "See `createChannel` for more information.\n"
							},
							"parameters": [
								{
									"id": 244,
									"name": "channels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An array of AndroidChannel interfaces.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannel",
											"id": 215
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1458,
							"character": 16
						}
					]
				},
				{
					"id": 251,
					"name": "deleteChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 252,
							"name": "deleteChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes a channel by ID.",
								"text": "#### Example\n\n```js\nawait firebase.notifications().deleteChannel('custom-channel');\n```\n"
							},
							"parameters": [
								{
									"id": 253,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The channel ID to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1475,
							"character": 15
						}
					]
				},
				{
					"id": 254,
					"name": "deleteChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 255,
							"name": "deleteChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 256,
									"name": "channelGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1477,
							"character": 20
						}
					]
				},
				{
					"id": 257,
					"name": "displayNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 258,
							"name": "displayNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Displays a notification on the device.",
								"text": "See `AndroidNotification` and `IOSNotification` for platform specific options.\n\n#### Example\n\n```js\nawait firebase.notifications().displayNotification({\n  title: 'Test',\n  body: 'Test notification body',\n  android: {\n    // Android specific options\n  },\n  ios: {\n    // iOS specific options\n  },\n});\n```\n",
								"returns": "Promise<string> A promise that resolves the new notification id\n"
							},
							"parameters": [
								{
									"id": 259,
									"name": "notification",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A `Notification` interface."
									},
									"type": {
										"type": "reference",
										"name": "NotificationBuilder",
										"id": 11
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1502,
							"character": 21
						}
					]
				},
				{
					"id": 270,
					"name": "getBadge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 271,
							"name": "getBadge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1523,
							"character": 10
						}
					]
				},
				{
					"id": 260,
					"name": "getChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 261,
							"name": "getChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a single `AndroidChannel` by id.",
								"text": "Returns `null` if no channel could be matched to the given ID.\n"
							},
							"parameters": [
								{
									"id": 262,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The channel id.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "AndroidChannel",
												"id": 215
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1511,
							"character": 12
						}
					]
				},
				{
					"id": 265,
					"name": "getChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 266,
							"name": "getChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 267,
									"name": "channelGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "AndroidChannelGroup",
												"id": 229
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1518,
							"character": 17
						}
					]
				},
				{
					"id": 268,
					"name": "getChannelGroups",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 269,
							"name": "getChannelGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannelGroup",
											"id": 229
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1520,
							"character": 18
						}
					]
				},
				{
					"id": 263,
					"name": "getChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 264,
							"name": "getChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array of `AndroidChannel` which are currently active on the device."
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannel",
											"id": 215
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1516,
							"character": 13
						}
					]
				},
				{
					"id": 272,
					"name": "getInitialNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 273,
							"name": "getInitialNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "RemoteNotification",
												"id": 23
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1525,
							"character": 24
						}
					]
				},
				{
					"id": 274,
					"name": "getScheduledNotifications",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 275,
							"name": "getScheduledNotifications",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "RemoteNotification",
											"id": 23
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1527,
							"character": 27
						}
					]
				},
				{
					"id": 276,
					"name": "onNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 277,
							"name": "onNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 278,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NotificationObserver",
										"id": 371
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NotificationObserverUnsubscribe",
								"id": 375
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1529,
							"character": 16
						}
					]
				},
				{
					"id": 279,
					"name": "onNotificationDisplayed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 280,
							"name": "onNotificationDisplayed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 281,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NotificationObserver",
										"id": 371
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NotificationObserverUnsubscribe",
								"id": 375
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1531,
							"character": 25
						}
					]
				},
				{
					"id": 282,
					"name": "onNotificationOpened",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 283,
							"name": "onNotificationOpened",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 284,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NotificationObserver",
										"id": 371
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NotificationObserverUnsubscribe",
								"id": 375
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1533,
							"character": 22
						}
					]
				},
				{
					"id": 285,
					"name": "removeAllDeliveredNotifications",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 286,
							"name": "removeAllDeliveredNotifications",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1535,
							"character": 33
						}
					]
				},
				{
					"id": 287,
					"name": "removeDeliveredNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 288,
							"name": "removeDeliveredNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 289,
									"name": "notificationId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1537,
							"character": 29
						}
					]
				},
				{
					"id": 290,
					"name": "scheduleNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 291,
							"name": "scheduleNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 292,
									"name": "notification",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NotificationBuilder",
										"id": 11
									}
								},
								{
									"id": 293,
									"name": "schedule",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Schedule",
										"id": 211
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1539,
							"character": 22
						}
					]
				},
				{
					"id": 294,
					"name": "setBadge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 295,
							"name": "setBadge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 296,
									"name": "badge",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1541,
							"character": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						234,
						236,
						239,
						245,
						248,
						242,
						251,
						254,
						257,
						270,
						260,
						265,
						268,
						263,
						272,
						274,
						276,
						279,
						282,
						285,
						287,
						290,
						294
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1407,
					"character": 24
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "ModuleWithStatics",
					"id": 297
				}
			]
		},
		{
			"id": 297,
			"name": "ModuleWithStatics",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 298,
					"name": "AndroidBadgeIconType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1545,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidBadgeIconType",
						"id": 117
					}
				},
				{
					"id": 299,
					"name": "AndroidCategory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1546,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidCategory",
						"id": 135
					}
				},
				{
					"id": 306,
					"name": "AndroidColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1553,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidColor",
						"id": 152
					}
				},
				{
					"id": 304,
					"name": "AndroidDefaults",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1551,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidDefaults",
						"id": 175
					}
				},
				{
					"id": 300,
					"name": "AndroidGroupAlertBehavior",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1547,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidGroupAlertBehavior",
						"id": 180
					}
				},
				{
					"id": 305,
					"name": "AndroidImportance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1552,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidImportance",
						"id": 191
					}
				},
				{
					"id": 301,
					"name": "AndroidPriority",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1548,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidPriority",
						"id": 184
					}
				},
				{
					"id": 303,
					"name": "AndroidRepeatInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1550,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidRepeatInterval",
						"id": 206
					}
				},
				{
					"id": 307,
					"name": "AndroidStyle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1554,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidStyle",
						"id": 121
					}
				},
				{
					"id": 302,
					"name": "AndroidVisibility",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1549,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidVisibility",
						"id": 202
					}
				},
				{
					"id": 308,
					"name": "cancelAllNotifications",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 309,
							"name": "cancelAllNotifications",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.cancelAllNotifications",
								"id": 234
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1408,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.cancelAllNotifications",
						"id": 234
					}
				},
				{
					"id": 310,
					"name": "cancelNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 311,
							"name": "cancelNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 312,
									"name": "notificationId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.cancelNotification",
								"id": 236
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1410,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.cancelNotification",
						"id": 236
					}
				},
				{
					"id": 313,
					"name": "createChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 314,
							"name": "createChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new Android channel. Channels are used to collectively assign notifications to\na single responsible channel. Users can manage settings for channels, e.g. disabling sound or vibration.\nChannels can be further organized into groups (see `createChannelGroup`).",
								"text": "Once a channel has been created, only certain fields such as the name & description can be\nmodified. To change a groups settings, you must delete the group (via `deleteChannel`)\nand re-create it. Keep in mind the user always have final control over channel settings.\n\nCreating an existing notification channel with its original values performs no operation,\nso it's safe to call this code when starting an app.\n\nCreated channels can be viewed/managed under App Info -> Notifications.\n\n> On Android 8.0 (API 26) all notifications must be assigned to a channel.\n\nReturns the channel ID.\n\n#### Example\n\n```js\nconst channelId = await firebase.notifications().createChannel({\n  channelId: 'custom-channel',\n  name: 'Custom Channel',\n  description: 'A test channel',\n});\n\nawait firebase.notifications().displayNotification({\n  body: 'Test notification',\n  android: {\n    channelId, // 'custom-channel'\n  },\n});\n```\n"
							},
							"parameters": [
								{
									"id": 315,
									"name": "channel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An `AndroidChannel` interface.\n"
									},
									"type": {
										"type": "reference",
										"name": "AndroidChannel",
										"id": 215
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.createChannel",
								"id": 239
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1449,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.createChannel",
						"id": 239
					}
				},
				{
					"id": 319,
					"name": "createChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 320,
							"name": "createChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 321,
									"name": "channelGroup",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AndroidChannelGroup",
										"id": 229
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.createChannelGroup",
								"id": 245
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1460,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.createChannelGroup",
						"id": 245
					}
				},
				{
					"id": 322,
					"name": "createChannelGroups",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 323,
							"name": "createChannelGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 324,
									"name": "channelGroups",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannelGroup",
											"id": 229
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.createChannelGroups",
								"id": 248
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1462,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.createChannelGroups",
						"id": 248
					}
				},
				{
					"id": 316,
					"name": "createChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 317,
							"name": "createChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates multiple channels in a single operation.",
								"text": "See `createChannel` for more information.\n"
							},
							"parameters": [
								{
									"id": 318,
									"name": "channels",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An array of AndroidChannel interfaces.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannel",
											"id": 215
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.createChannels",
								"id": 242
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1458,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.createChannels",
						"id": 242
					}
				},
				{
					"id": 325,
					"name": "deleteChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 326,
							"name": "deleteChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes a channel by ID.",
								"text": "#### Example\n\n```js\nawait firebase.notifications().deleteChannel('custom-channel');\n```\n"
							},
							"parameters": [
								{
									"id": 327,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The channel ID to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.deleteChannel",
								"id": 251
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1475,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.deleteChannel",
						"id": 251
					}
				},
				{
					"id": 328,
					"name": "deleteChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 329,
							"name": "deleteChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 330,
									"name": "channelGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.deleteChannelGroup",
								"id": 254
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1477,
							"character": 20
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.deleteChannelGroup",
						"id": 254
					}
				},
				{
					"id": 331,
					"name": "displayNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 332,
							"name": "displayNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Displays a notification on the device.",
								"text": "See `AndroidNotification` and `IOSNotification` for platform specific options.\n\n#### Example\n\n```js\nawait firebase.notifications().displayNotification({\n  title: 'Test',\n  body: 'Test notification body',\n  android: {\n    // Android specific options\n  },\n  ios: {\n    // iOS specific options\n  },\n});\n```\n",
								"returns": "Promise<string> A promise that resolves the new notification id\n"
							},
							"parameters": [
								{
									"id": 333,
									"name": "notification",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A `Notification` interface."
									},
									"type": {
										"type": "reference",
										"name": "NotificationBuilder",
										"id": 11
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.displayNotification",
								"id": 257
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1502,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.displayNotification",
						"id": 257
					}
				},
				{
					"id": 344,
					"name": "getBadge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 345,
							"name": "getBadge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getBadge",
								"id": 270
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1523,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getBadge",
						"id": 270
					}
				},
				{
					"id": 334,
					"name": "getChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 335,
							"name": "getChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a single `AndroidChannel` by id.",
								"text": "Returns `null` if no channel could be matched to the given ID.\n"
							},
							"parameters": [
								{
									"id": 336,
									"name": "channelId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The channel id.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "AndroidChannel",
												"id": 215
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getChannel",
								"id": 260
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1511,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getChannel",
						"id": 260
					}
				},
				{
					"id": 339,
					"name": "getChannelGroup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 340,
							"name": "getChannelGroup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 341,
									"name": "channelGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "AndroidChannelGroup",
												"id": 229
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getChannelGroup",
								"id": 265
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1518,
							"character": 17
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getChannelGroup",
						"id": 265
					}
				},
				{
					"id": 342,
					"name": "getChannelGroups",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 343,
							"name": "getChannelGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannelGroup",
											"id": 229
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getChannelGroups",
								"id": 268
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1520,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getChannelGroups",
						"id": 268
					}
				},
				{
					"id": 337,
					"name": "getChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 338,
							"name": "getChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array of `AndroidChannel` which are currently active on the device."
							},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "AndroidChannel",
											"id": 215
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getChannels",
								"id": 263
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1516,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getChannels",
						"id": 263
					}
				},
				{
					"id": 346,
					"name": "getInitialNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 347,
							"name": "getInitialNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "RemoteNotification",
												"id": 23
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getInitialNotification",
								"id": 272
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1525,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getInitialNotification",
						"id": 272
					}
				},
				{
					"id": 348,
					"name": "getScheduledNotifications",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 349,
							"name": "getScheduledNotifications",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "RemoteNotification",
											"id": 23
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.getScheduledNotifications",
								"id": 274
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1527,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.getScheduledNotifications",
						"id": 274
					}
				},
				{
					"id": 350,
					"name": "onNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 351,
							"name": "onNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 352,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NotificationObserver",
										"id": 371
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NotificationObserverUnsubscribe",
								"id": 375
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.onNotification",
								"id": 276
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1529,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.onNotification",
						"id": 276
					}
				},
				{
					"id": 353,
					"name": "onNotificationDisplayed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 354,
							"name": "onNotificationDisplayed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 355,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NotificationObserver",
										"id": 371
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NotificationObserverUnsubscribe",
								"id": 375
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.onNotificationDisplayed",
								"id": 279
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1531,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.onNotificationDisplayed",
						"id": 279
					}
				},
				{
					"id": 356,
					"name": "onNotificationOpened",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 357,
							"name": "onNotificationOpened",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 358,
									"name": "observer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NotificationObserver",
										"id": 371
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NotificationObserverUnsubscribe",
								"id": 375
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.onNotificationOpened",
								"id": 282
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1533,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.onNotificationOpened",
						"id": 282
					}
				},
				{
					"id": 359,
					"name": "removeAllDeliveredNotifications",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 360,
							"name": "removeAllDeliveredNotifications",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.removeAllDeliveredNotifications",
								"id": 285
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1535,
							"character": 33
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.removeAllDeliveredNotifications",
						"id": 285
					}
				},
				{
					"id": 361,
					"name": "removeDeliveredNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 362,
							"name": "removeDeliveredNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 363,
									"name": "notificationId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.removeDeliveredNotification",
								"id": 287
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1537,
							"character": 29
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.removeDeliveredNotification",
						"id": 287
					}
				},
				{
					"id": 364,
					"name": "scheduleNotification",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 365,
							"name": "scheduleNotification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 366,
									"name": "notification",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NotificationBuilder",
										"id": 11
									}
								},
								{
									"id": 367,
									"name": "schedule",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Schedule",
										"id": 211
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.scheduleNotification",
								"id": 290
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1539,
							"character": 22
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.scheduleNotification",
						"id": 290
					}
				},
				{
					"id": 368,
					"name": "setBadge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 369,
							"name": "setBadge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 370,
									"name": "badge",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Promise",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Module.setBadge",
								"id": 294
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1541,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Module.setBadge",
						"id": 294
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						298,
						299,
						306,
						304,
						300,
						305,
						301,
						303,
						307,
						302
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						308,
						310,
						313,
						319,
						322,
						316,
						325,
						328,
						331,
						344,
						334,
						339,
						342,
						337,
						346,
						348,
						350,
						353,
						356,
						359,
						361,
						364,
						368
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1544,
					"character": 35
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Module",
					"id": 233
				}
			]
		},
		{
			"id": 1,
			"name": "Notification",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface for building a local notification for both Android & iOS devices.",
				"text": "#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  title: 'Welcome',\n  data: {\n    user: '123',\n  },\n  android: {\n    color: '#3f51b5',\n  },\n  ios: {\n    alertAction: 'Open App',\n  },\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
			},
			"children": [
				{
					"id": 2,
					"name": "body",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The main body content of a notification. This field required and is the main body of your notification.",
						"text": "On Android, if you wish to read the body when the notification is opened, add it to the `data` object.\n\n#### Example\n\n![Body Text](https://prismic-io.s3.amazonaws.com/invertase%2F7f9cc068-c618-44f0-88da-6041c6d55f48_new+project+%2817%29.jpg)\n\n```js\nconst notification = {\n  body: 'Hello World!',\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 46,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Additional data to store on the notification. Only `string` values can be stored.",
						"text": "#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  data: {\n    user: '123',\n  }\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 110,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 7,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 8,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 9,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3,
					"name": "notificationId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A unique identifier for your notification.",
						"text": "Defaults to a random string.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 53,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Overrides the sound the notification is displayed with.",
						"text": "The default value is `default`, which is the system default sound.\n\nTODO @ehesp FAQ/Guide on custom sounds\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 119,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5,
					"name": "subtitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification subtitle, which appears on a new line below the title.",
						"text": "#### Example\n\n![Title Text](https://prismic-io.s3.amazonaws.com/invertase%2F6fa1dea9-8cf6-4e9a-b318-8d8f73d568cf_new+project+%2818%29.jpg)\n\n```js\nconst notification = {\n  title: 'Welcome!',\n  subtitle: 'Learn more...',\n  body: 'Hello World!',\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 92,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification title which appears above the body text.",
						"text": "On Android, if you wish to read the title when the notification is opened, add it to the `data` object.\n\n#### Example\n\n![Title Text](https://prismic-io.s3.amazonaws.com/invertase%2F6fa1dea9-8cf6-4e9a-b318-8d8f73d568cf_new+project+%2818%29.jpg)\n\n```js\nconst notification = {\n  title: 'Welcome!',\n  body: 'Hello World!',\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 73,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2,
						6,
						3,
						10,
						5,
						4
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 28,
					"character": 29
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"name": "NotificationBuilder",
					"id": 11
				},
				{
					"type": "reference",
					"name": "RemoteNotification",
					"id": 23
				}
			]
		},
		{
			"id": 11,
			"name": "NotificationBuilder",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 12,
					"name": "android",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Android specific notification options. See the `AndroidNotification` interface for more\ninformation and default options which are applied to a notification.",
						"text": "#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  android: {\n    color: '#3f51b5',\n  },\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 140,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidNotification",
						"id": 53
					}
				},
				{
					"id": 14,
					"name": "body",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The main body content of a notification. This field required and is the main body of your notification.",
						"text": "On Android, if you wish to read the body when the notification is opened, add it to the `data` object.\n\n#### Example\n\n![Body Text](https://prismic-io.s3.amazonaws.com/invertase%2F7f9cc068-c618-44f0-88da-6041c6d55f48_new+project+%2817%29.jpg)\n\n```js\nconst notification = {\n  body: 'Hello World!',\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 46,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.body",
						"id": 2
					}
				},
				{
					"id": 18,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Additional data to store on the notification. Only `string` values can be stored.",
						"text": "#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  data: {\n    user: '123',\n  }\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 110,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 19,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 20,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 21,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.data",
						"id": 6
					}
				},
				{
					"id": 13,
					"name": "ios",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "iOS specific notification options. See the `IOSNotification` interface for more information\nand default options which are applied to a notification.",
						"text": "#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  ios: {\n    alertAction: 'Open App',\n  },\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 159,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotification",
						"id": 35
					}
				},
				{
					"id": 15,
					"name": "notificationId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A unique identifier for your notification.",
						"text": "Defaults to a random string.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 53,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.notificationId",
						"id": 3
					}
				},
				{
					"id": 22,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Overrides the sound the notification is displayed with.",
						"text": "The default value is `default`, which is the system default sound.\n\nTODO @ehesp FAQ/Guide on custom sounds\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 119,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.sound",
						"id": 10
					}
				},
				{
					"id": 17,
					"name": "subtitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification subtitle, which appears on a new line below the title.",
						"text": "#### Example\n\n![Title Text](https://prismic-io.s3.amazonaws.com/invertase%2F6fa1dea9-8cf6-4e9a-b318-8d8f73d568cf_new+project+%2818%29.jpg)\n\n```js\nconst notification = {\n  title: 'Welcome!',\n  subtitle: 'Learn more...',\n  body: 'Hello World!',\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 92,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.subtitle",
						"id": 5
					}
				},
				{
					"id": 16,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification title which appears above the body text.",
						"text": "On Android, if you wish to read the title when the notification is opened, add it to the `data` object.\n\n#### Example\n\n![Title Text](https://prismic-io.s3.amazonaws.com/invertase%2F6fa1dea9-8cf6-4e9a-b318-8d8f73d568cf_new+project+%2818%29.jpg)\n\n```js\nconst notification = {\n  title: 'Welcome!',\n  body: 'Hello World!',\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 73,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.title",
						"id": 4
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						12,
						14,
						18,
						13,
						15,
						22,
						17,
						16
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 122,
					"character": 36
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Notification",
					"id": 1
				}
			]
		},
		{
			"id": 23,
			"name": "RemoteNotification",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 24,
					"name": "android",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 163,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "AndroidNotification",
						"id": 53
					}
				},
				{
					"id": 26,
					"name": "body",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The main body content of a notification. This field required and is the main body of your notification.",
						"text": "On Android, if you wish to read the body when the notification is opened, add it to the `data` object.\n\n#### Example\n\n![Body Text](https://prismic-io.s3.amazonaws.com/invertase%2F7f9cc068-c618-44f0-88da-6041c6d55f48_new+project+%2817%29.jpg)\n\n```js\nconst notification = {\n  body: 'Hello World!',\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 46,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.body",
						"id": 2
					}
				},
				{
					"id": 30,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Additional data to store on the notification. Only `string` values can be stored.",
						"text": "#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  data: {\n    user: '123',\n  }\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 110,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 32,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 33,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.data",
						"id": 6
					}
				},
				{
					"id": 25,
					"name": "ios",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 164,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"name": "IOSNotification",
						"id": 35
					}
				},
				{
					"id": 27,
					"name": "notificationId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A unique identifier for your notification.",
						"text": "Defaults to a random string.\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 53,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.notificationId",
						"id": 3
					}
				},
				{
					"id": 34,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Overrides the sound the notification is displayed with.",
						"text": "The default value is `default`, which is the system default sound.\n\nTODO @ehesp FAQ/Guide on custom sounds\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 119,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.sound",
						"id": 10
					}
				},
				{
					"id": 29,
					"name": "subtitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification subtitle, which appears on a new line below the title.",
						"text": "#### Example\n\n![Title Text](https://prismic-io.s3.amazonaws.com/invertase%2F6fa1dea9-8cf6-4e9a-b318-8d8f73d568cf_new+project+%2818%29.jpg)\n\n```js\nconst notification = {\n  title: 'Welcome!',\n  subtitle: 'Learn more...',\n  body: 'Hello World!',\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 92,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.subtitle",
						"id": 5
					}
				},
				{
					"id": 28,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The notification title which appears above the body text.",
						"text": "On Android, if you wish to read the title when the notification is opened, add it to the `data` object.\n\n#### Example\n\n![Title Text](https://prismic-io.s3.amazonaws.com/invertase%2F6fa1dea9-8cf6-4e9a-b318-8d8f73d568cf_new+project+%2818%29.jpg)\n\n```js\nconst notification = {\n  title: 'Welcome!',\n  body: 'Hello World!',\n};\n\nawait firebase.notifications().displayNotification(notification);\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 73,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Notification.title",
						"id": 4
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						24,
						26,
						30,
						25,
						27,
						34,
						29,
						28
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 162,
					"character": 35
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Notification",
					"id": 1
				}
			]
		},
		{
			"id": 211,
			"name": "Schedule",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 213,
					"name": "exact",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the `fireDate` should be respected exactly.",
						"text": "To help save battery, only set to `true` under scenarios where the notification\n`fireDate` is critical.\n\nDefaults to `false`. Has no effect on iOS.\n",
						"tags": [
							{
								"tag": "android",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1221,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 212,
					"name": "fireDate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The date when the notification should first be shown, in milliseconds since 1970.",
						"text": "#### Example\n\nSchedule notification to display 10 minutes from now.\n\n```js\nawait firebase.notifications().scheduleNotification(notification, {\n  fireDate: Date.now() + 600000,\n});\n```\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1209,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 214,
					"name": "repeatInterval",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "How frequently after  the `fireDate` should the notification be repeated.",
						"text": "If not present, the notification will only be displayed once on the given `fireDate`.\n\n#### Example\n\nSchedule notification to display 10 minutes from now, and repeat\nevery week\n\n```js\nimport notifications, { AndroidRepeatInterval } from '@react-native-firebase/notifications';\n\nawait firebase.notifications().scheduleNotification(notification, {\n  fireDate: Date.now() + 600000,\n  repeatInterval: AndroidRepeatInterval.WEEK,\n});\n"
					},
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1241,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "MINUTE",
								"id": 207
							},
							{
								"type": "reference",
								"name": "HOUR",
								"id": 208
							},
							{
								"type": "reference",
								"name": "DAY",
								"id": 209
							},
							{
								"type": "reference",
								"name": "WEEK",
								"id": 210
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						213,
						212,
						214
					]
				}
			],
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1195,
					"character": 25
				}
			]
		},
		{
			"id": 371,
			"name": "NotificationObserver",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "TODO docs"
			},
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1189,
					"character": 32
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 372,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 373,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 374,
									"name": "notification",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RemoteNotification",
										"id": 23
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1189,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 375,
			"name": "NotificationObserverUnsubscribe",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1192,
					"character": 43
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 376,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 377,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "index.d.ts",
							"line": 1192,
							"character": 45
						}
					]
				}
			}
		},
		{
			"id": 378,
			"name": "notifeeModule",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "index.d.ts",
					"line": 1557,
					"character": 27
				}
			],
			"type": {
				"type": "reference",
				"name": "ModuleWithStatics",
				"id": 297
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				117,
				135,
				152,
				175,
				180,
				191,
				184,
				206,
				121,
				202
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				87,
				124,
				130,
				215,
				229,
				53,
				198,
				95,
				105,
				44,
				48,
				35,
				233,
				297,
				1,
				11,
				23,
				211
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				371,
				375
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				378
			]
		}
	]
}