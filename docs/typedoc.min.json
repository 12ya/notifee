{"id":0,"name":"@notifee/react-native - v0.0.1","kind":0,"flags":{},"children":[{"id":157,"name":"AndroidBadgeIconType","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"When a notification is being displayed as a badge, the `AndroidBadgeIconType` interface\ndescribes how the badge icon is shown to the user.","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":160,"name":"LARGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Shows the notification `largeIcon`."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1254,"character":7}],"defaultValue":"2"},{"id":158,"name":"NONE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"No badge is displayed, will always show as a number."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1244,"character":6}],"defaultValue":"0"},{"id":159,"name":"SMALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Shows the notification `smallIcon`."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1249,"character":7}],"defaultValue":"1"}],"groups":[{"title":"Enumeration members","kind":16,"children":[160,158,159]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1240,"character":32}]},{"id":161,"name":"AndroidCategory","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"The category of a notification.","text":"Setting a category on a notification helps the device to understand what the notification is for,\nor what impact it will have on the user. The category can be used for ranking and filtering\nthe notification.\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":162,"name":"ALARM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1267,"character":7}],"defaultValue":"\"alarm\""},{"id":163,"name":"CALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1268,"character":6}],"defaultValue":"\"call\""},{"id":164,"name":"EMAIL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1269,"character":7}],"defaultValue":"\"email\""},{"id":165,"name":"ERROR","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1270,"character":7}],"defaultValue":"\"error\""},{"id":166,"name":"EVENT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1271,"character":7}],"defaultValue":"\"event\""},{"id":167,"name":"MESSAGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1272,"character":9}],"defaultValue":"\"msg\""},{"id":168,"name":"NAVIGATION","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1273,"character":12}],"defaultValue":"\"navigation\""},{"id":169,"name":"PROGRESS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1274,"character":10}],"defaultValue":"\"progress\""},{"id":170,"name":"PROMO","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1275,"character":7}],"defaultValue":"\"promo\""},{"id":171,"name":"RECOMMENDATION","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1276,"character":16}],"defaultValue":"\"recommendation\""},{"id":172,"name":"REMINDER","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1277,"character":10}],"defaultValue":"\"reminder\""},{"id":173,"name":"SERVICE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1278,"character":9}],"defaultValue":"\"service\""},{"id":174,"name":"SOCIAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1279,"character":8}],"defaultValue":"\"social\""},{"id":175,"name":"STATUS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1280,"character":8}],"defaultValue":"\"status\""},{"id":176,"name":"SYSTEM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1281,"character":8}],"defaultValue":"\"sys\""},{"id":177,"name":"TRANSPORT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1282,"character":11}],"defaultValue":"\"transport\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1266,"character":27}]},{"id":178,"name":"AndroidColor","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"A set or predefined colors which can be used with Android Notifications.","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":192,"name":"AQUA","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1304,"character":6}],"defaultValue":"\"aqua\""},{"id":182,"name":"BLACK","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1294,"character":7}],"defaultValue":"\"black\""},{"id":180,"name":"BLUE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1292,"character":6}],"defaultValue":"\"blue\""},{"id":184,"name":"CYAN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1296,"character":6}],"defaultValue":"\"cyan\""},{"id":188,"name":"DARKGRAY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1300,"character":10}],"defaultValue":"\"darkgray\""},{"id":191,"name":"DARKGREY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1303,"character":10}],"defaultValue":"\"darkgrey\""},{"id":193,"name":"FUCHSIA","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1305,"character":9}],"defaultValue":"\"fuchsia\""},{"id":189,"name":"GRAY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1301,"character":6}],"defaultValue":"\"gray\""},{"id":181,"name":"GREEN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1293,"character":7}],"defaultValue":"\"green\""},{"id":187,"name":"LIGHTGRAY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1299,"character":11}],"defaultValue":"\"lightgray\""},{"id":190,"name":"LIGHTGREY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1302,"character":11}],"defaultValue":"\"lightgrey\""},{"id":194,"name":"LIME","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1306,"character":6}],"defaultValue":"\"lime\""},{"id":185,"name":"MAGENTA","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1297,"character":9}],"defaultValue":"\"magenta\""},{"id":195,"name":"MAROON","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1307,"character":8}],"defaultValue":"\"maroon\""},{"id":196,"name":"NAVY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1308,"character":6}],"defaultValue":"\"navy\""},{"id":197,"name":"OLIVE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1309,"character":7}],"defaultValue":"\"olive\""},{"id":198,"name":"PURPLE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1310,"character":8}],"defaultValue":"\"purple\""},{"id":179,"name":"RED","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1291,"character":5}],"defaultValue":"\"red\""},{"id":199,"name":"SILVER","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1311,"character":8}],"defaultValue":"\"silver\""},{"id":200,"name":"TEAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1312,"character":6}],"defaultValue":"\"teal\""},{"id":183,"name":"WHITE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1295,"character":7}],"defaultValue":"\"white\""},{"id":186,"name":"YELLOW","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1298,"character":8}],"defaultValue":"\"yellow\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[192,182,180,184,188,191,193,189,181,187,190,194,185,195,196,197,198,179,199,200,183,186]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1290,"character":24}]},{"id":201,"name":"AndroidDefaults","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"On devices which do not support notification channels (API Level < 26), the notification\nby default will use all methods to alert the user (depending on the importance).","text":"To override the default behaviour, provide an array of defaults to the notification.\n\nOn API Levels >= 26, this has no effect and notifications will use the channel behaviour.\n","tags":[{"tag":"platform","text":"android API Level < 26\n"}]},"children":[{"id":202,"name":"ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"All options will be used where possible."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1329,"character":5}],"defaultValue":" -1"},{"id":203,"name":"LIGHTS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"The notification will use lights to alert the user."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1334,"character":8}],"defaultValue":"4"},{"id":204,"name":"SOUND","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"The notification will use sound to alert the user."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1339,"character":7}],"defaultValue":"1"},{"id":205,"name":"VIBRATE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"The notification will vibrate to alert the user."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1344,"character":9}],"defaultValue":"2"}],"groups":[{"title":"Enumeration members","kind":16,"children":[202,203,204,205]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1325,"character":27}]},{"id":206,"name":"AndroidGroupAlertBehavior","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"TODO","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":207,"name":"ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1353,"character":5}],"defaultValue":"0"},{"id":209,"name":"CHILDREN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1355,"character":10}],"defaultValue":"2"},{"id":208,"name":"SUMMARY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1354,"character":9}],"defaultValue":"1"}],"groups":[{"title":"Enumeration members","kind":16,"children":[207,209,208]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1352,"character":37}]},{"id":210,"name":"AndroidImportance","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"The interface describing the importance levels of an incoming notification.","text":"A notification importance level can be set directly onto a notification channel for supported devices (API Level >= 26)\nor directly onto the notification for devices which do not support channels.\n\nThe importance is used by the device to both change the visual prompt of a received notification\nand also how it visually appears in the device notification shade.\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":211,"name":"DEFAULT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"The default importance applied to a channel/notification.","text":"The application small icon will show in the device statusbar. When the user pulls down the\nnotification shade, the notification will show in it's expanded state (if applicable).\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1376,"character":9}],"defaultValue":"3"},{"id":212,"name":"HIGH","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"The highest importance level applied to a channel/notification.","text":"Notifications will appear on-top of applications, allowing direct interaction without pulling\ndown the notification shade. This level should only be used for urgent notifications, such as\nincoming phone calls, messages etc, which require immediate attention.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1385,"character":6}],"defaultValue":"4"},{"id":213,"name":"LOW","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"A low importance level applied to a channel/notification.","text":"The application small icon will show in the device statusbar, however the notification will not alert\nthe user (no sound or vibration). The notification will show in it's expanded state when the\nnotification shade is pulled down.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1394,"character":5}],"defaultValue":"2"},{"id":214,"name":"MIN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"The minimum importance level applied to a channel/notification.","text":"The application small icon will not show up in the statusbar, or alert the user. The notification\nwill be in a collapsed state in the notification shade and placed at the bottom of the list.\n\nThis level should be used when the notification requires no immediate attention. An example of this\nimportance level is the Google app providing weather updates and only being visible when the\nuser pulls the notification shade down,\n\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1407,"character":5}],"defaultValue":"1"},{"id":215,"name":"NONE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"The notification will not be shown. This has the same effect as the user disabling notifications\nin the application settings."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1413,"character":6}],"defaultValue":"0"}],"groups":[{"title":"Enumeration members","kind":16,"children":[211,212,213,214,215]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1369,"character":29}]},{"id":216,"name":"AndroidSemanticAction","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"TODO","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":217,"name":"ARCHIVE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Archive the content associated with the notification. This could mean archiving an email, message, etc."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1425,"character":9}],"defaultValue":"5"},{"id":218,"name":"CALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Call a contact, group, etc."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1430,"character":6}],"defaultValue":"10"},{"id":219,"name":"DELETE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Delete the content associated with the notification. This could mean deleting an email, message, etc."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1435,"character":8}],"defaultValue":"4"},{"id":220,"name":"MARK_AS_READ","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Mark content as read."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1440,"character":14}],"defaultValue":"2"},{"id":221,"name":"MARK_AS_UNREAD","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Mark content as unread."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1445,"character":16}],"defaultValue":"3"},{"id":222,"name":"MUTE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Mute the content associated with the notification. This could mean silencing a conversation or currently playing media."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1450,"character":6}],"defaultValue":"6"},{"id":223,"name":"NONE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"No semantic action defined."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1455,"character":6}],"defaultValue":"0"},{"id":224,"name":"REPLY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Reply to a conversation, chat, group, or wherever replies may be appropriate."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1460,"character":7}],"defaultValue":"1"},{"id":225,"name":"THUMBS_DOWN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Mark content with a thumbs down."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1465,"character":13}],"defaultValue":"9"},{"id":226,"name":"THUMBS_UP","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Mark content with a thumbs up."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1470,"character":11}],"defaultValue":"8"},{"id":227,"name":"UNMUTE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Unmute the content associated with the notification. This could mean un-silencing a conversation or currently playing media."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1475,"character":8}],"defaultValue":"7"}],"groups":[{"title":"Enumeration members","kind":16,"children":[217,218,219,220,221,222,223,224,225,226,227]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1421,"character":33}]},{"id":228,"name":"AndroidStyle","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"Available Android Notification Styles.","text":"Used when providing a `style` to a notification builder with `displayNotification`.\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":229,"name":"BIGPICTURE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1486,"character":12}],"defaultValue":"0"},{"id":230,"name":"BIGTEXT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1487,"character":9}],"defaultValue":"1"},{"id":231,"name":"INBOX","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1488,"character":7}],"defaultValue":"2"},{"id":232,"name":"MESSAGING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1489,"character":11}],"defaultValue":"3"}],"groups":[{"title":"Enumeration members","kind":16,"children":[229,230,231,232]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1485,"character":24}]},{"id":233,"name":"AndroidVisibility","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"Interface used to define the visibility of an Android notification.","text":"Use with the `visibility` property on the notification.\n\nDefault value is `AndroidVisibility.PRIVATE`.\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":234,"name":"PRIVATE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Show the notification on all lockscreens, but conceal sensitive or private information on secure lockscreens."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1505,"character":9}],"defaultValue":"0"},{"id":235,"name":"PUBLIC","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Show this notification in its entirety on all lockscreens."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1510,"character":8}],"defaultValue":"1"},{"id":236,"name":"SECRET","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Do not reveal any part of this notification on a secure lockscreen.","text":"Useful for notifications showing sensitive information such as banking apps.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1517,"character":8}],"defaultValue":" -1"}],"groups":[{"title":"Enumeration members","kind":16,"children":[234,235,236]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1501,"character":29}]},{"id":252,"name":"EventType","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"An enum representing an event type for `onNotificationEvent` subscriptions."},"children":[{"id":256,"name":"ACTION_PRESS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Event type is sent when a user presses a notification action.","text":"The event sent with this type is [AndroidNotificationEvent](/react-native/reference/androidnotificationevent).\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":209,"character":14}],"defaultValue":"2"},{"id":258,"name":"APP_BLOCKED","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Event is sent when the user changes the notification blocked state for the entire application or\nwhen the user opens the application settings.","text":"The payload sent with this event is [AndroidAppBlockedEvent](/react-native/reference/androidappblockedevent).\n","tags":[{"tag":"platform","text":"android API Level >= 28\n"}]},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":231,"character":13}],"defaultValue":"4"},{"id":259,"name":"CHANNEL_BLOCKED","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Event type is sent when the user changes the notification blocked state for a channel in the application.","text":"The payload sent with this event is [AndroidChannelBlockedEvent](/react-native/reference/androidappblockedevent).\n","tags":[{"tag":"platform","text":"android API Level >= 28\n"}]},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":240,"character":17}],"defaultValue":"5"},{"id":260,"name":"CHANNEL_GROUP_BLOCKED","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Event type is sent when the user changes the notification blocked state for a channel group in the application.","text":"The payload sent with this event is [AndroidChannelGroupBlockedEvent](/react-native/reference/androidchannelgroupblockedevent).\n","tags":[{"tag":"platform","text":"android API Level >= 28\n"}]},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":249,"character":23}],"defaultValue":"6"},{"id":257,"name":"DELIVERED","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Event type sent when a notification has been delivered to the device. For scheduled notifications,\nthis event is sent when at the point when the schedule runs, not when a notification is first\ncreated.","text":"It's important to note even though a notification has been delivered, it may not be shown to the\nuser. For example, they may have notifications disabled on the device/channel/app.\n\nThe event payload sent with this event is [AndroidNotificationEvent](/react-native/reference/androidnotificationevent).\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":221,"character":11}],"defaultValue":"3"},{"id":254,"name":"DISMISSED","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Event type is sent when the user dismisses a notification. This is triggered via the user swiping\nthe notification from the notification shade or performing \"Clear all\" notifications.","text":"This event is **not** sent when a notification is cancelled or times out.\n\nThe payload sent with this event is [AndroidNotificationEvent](/react-native/reference/androidnotificationevent).\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":193,"character":11}],"defaultValue":"0"},{"id":255,"name":"PRESS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"Event type is sent when a notification has been pressed by the user.","text":"On Android, notifications must include an `android.pressAction` property for this event to trigger.\n\nThe payload sent with this event is [AndroidNotificationEvent](/react-native/reference/androidnotificationevent).\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":202,"character":7}],"defaultValue":"1"},{"id":261,"name":"SCHEDULED","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":254,"character":11}],"defaultValue":"7"},{"id":253,"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"comment":{"shortText":"An unknown event was received.","text":"This event type is a failsafe to catch any unknown events from the device. Please\nreport an issue with a reproduction so it can be correctly handled.\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":183,"character":9}],"defaultValue":" -1"}],"groups":[{"title":"Enumeration members","kind":16,"children":[256,258,259,260,257,254,255,261,253]}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":176,"character":21}]},{"id":262,"name":"ScheduleUnit","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":263,"name":"DAY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":258,"character":5}]},{"id":264,"name":"HOUR","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":259,"character":6}]},{"id":265,"name":"MINUTE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":260,"character":8}]}],"groups":[{"title":"Enumeration members","kind":16,"children":[263,264,265]}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":257,"character":24}]},{"id":66,"name":"AndroidAction","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"The interface used to describe a notification action.","text":"Notification actions allow users to interact with notifications, allowing you to handle events\nwithin your application. When an action completes (e.g. pressing an action, or filling out an input\nbox) and event is sent and can be handled by a `onEvent` listener.\n\nWhen an action completes, it is up to you handle the event by either cancelling or updating the\nnotification.\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":69,"name":"icon","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"An remote http icon representing the action. Newer devices may not show the icon.","text":"Recommended icon size is 24x24 px.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":663,"character":6}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":70,"name":"input","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If provided, the action accepts user input.","text":"If `true`, the user will be able to provide free text input when the action is pressed. This\nproperty can be further configured for advanced inputs.\n\nSee the [AndroidInput](/react-native/reference/androidinput) reference\nor [Android Actions](/react-native/docs/android/actions) for more information.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":674,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"true"},{"type":"reference","name":"AndroidInput","id":75}]}},{"id":67,"name":"pressAction","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The press action interface describing what happens when an action completes.","text":"Note; unlike the `pressAction` in the notification body, an action is not required to open the application\nand can perform background tasks. See the [AndroidPressAction](/react-native/reference/androidpressaction) reference\nor [Android Actions](/react-native/docs/android/actions) for more information.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":651,"character":13}],"type":{"type":"reference","name":"AndroidPressAction","id":71}},{"id":68,"name":"title","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The title of the notification, e.g. \"Reply\", \"Mark as read\" etc."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":656,"character":7}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[69,70,67,68]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":643,"character":30}]},{"id":278,"name":"AndroidAppBlockedEvent","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":279,"name":"blocked","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The blocked status of your entire application."},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":315,"character":9}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","kind":1024,"children":[279]}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":311,"character":39}]},{"id":81,"name":"AndroidBigPictureStyle","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"Notifications can show a large image when expanded, which is useful for apps with a heavy media\nfocus, such as Instagram.","text":"![Big Picture Style](https://developer.android.com/images/ui/notifications/template-image_2x.png)\n\n#### Example\n\n```js\nTODO example\n```\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":85,"name":"largeIcon","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":799,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":83,"name":"picture","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":797,"character":9}],"type":{"type":"intrinsic","name":"string"}},{"id":86,"name":"summary","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":800,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":84,"name":"title","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":798,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":82,"name":"type","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":796,"character":6}],"type":{"type":"reference","name":"BIGPICTURE","id":229}}],"groups":[{"title":"Properties","kind":1024,"children":[85,83,86,84,82]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":795,"character":39}]},{"id":87,"name":"AndroidBigTextStyle","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"Notifications can show a large amount of text when expanded, for example when displaying new\nmessages.","text":"By default, messages are not expanded, causing any overflowing notification `body` next to be\ntruncated. Setting a `bigTextStyle` allows the notification to be expandable showing the full\ntext body.\n\n![Big Text Style](https://developer.android.com/images/ui/notifications/template-large-text_2x.png)\n\n#### Example\n\n```js\nawait notifee.displayNotification({\n  body: 'Hello World',\n  android: {\n    style: {\n      type: notifee.AndroidStyle.BIGTEXT,\n      text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis consectetur magna ut nulla blandit tristique.',\n    },\n  }\n});\n```\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":91,"name":"summary","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets summary text when the notification is expanded."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":844,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":89,"name":"text","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The text to display when the notification is expanded."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":834,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":90,"name":"title","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Overrides the notification title when expanded."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":839,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":88,"name":"type","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":830,"character":6}],"type":{"type":"reference","name":"BIGTEXT","id":230}}],"groups":[{"title":"Properties","kind":1024,"children":[91,89,90,88]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":829,"character":36}]},{"id":118,"name":"AndroidChannel","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"An interface for describing an Android Channel.","text":"Channels override any individual notification preferences (e.g. lights/vibration) and the user\nhas control over the setting.\n\n> On Android 8.0 (API 26) each notification must be assigned to a channel.\n\n![Android Channel](https://prismic-io.s3.amazonaws.com/invertase%2Fbb773539-581a-457d-ae43-687a7a7646a9_new+project+%2822%29.jpg)\n\n#### Example\n\n```js\nawait notifee.createChannel({\n  id: 'alarms',\n  name: 'Alarms & Timers',\n  lightColor: '#3f51b5',\n  vibrationPattern: [300, 400],\n});\n```\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":121,"name":"badge","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether notifications posted to this channel can appear as application icon badges in a Launcher.","text":"Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1073,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":122,"name":"bypassDnd","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether or not notifications posted to this channel can interrupt the user in\n'Do Not Disturb' mode.","text":"Defaults to `false`.\n\nThis setting cannot be overridden once the channel is created.\n","tags":[{"tag":"platform","text":"android API Level >= 29\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1085,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":123,"name":"description","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets the user visible description of this channel.","text":"The recommended maximum length is 300 characters; the value may be truncated if it is too long.\n\nThis setting can be updated after creation.\n","tags":[{"tag":"platform","text":"android API Level >= 28\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1096,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":126,"name":"groupId","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets what group this channel belongs to. Group information is only used for presentation, not for behavior.","text":"Create a group via `createChannelGroup()`.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1123,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":119,"name":"id","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The unique channel ID."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1056,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":127,"name":"importance","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets the level of interruption of this notification channel.","text":"See `AndroidImportance` for more details on the levels.\n\nThis setting can only be set to a lower importance level once set.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1132,"character":12}],"type":{"type":"reference","name":"AndroidImportance","id":210}},{"id":128,"name":"lightColor","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If lights are enabled (via `enableLights`), sets/overrides the light color for notifications\nposted to this channel.","text":"This setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1140,"character":12}],"type":{"type":"union","types":[{"type":"reference","name":"AndroidColor","id":178},{"type":"intrinsic","name":"string"}]}},{"id":124,"name":"lights","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether notifications posted to this channel should display notification lights, on devices that support that feature.","text":"Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1105,"character":8}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":120,"name":"name","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The channel name. This is shown to the user so must be descriptive and relate to the notifications\nwhich will be delivered under this channel.","text":"This setting can be updated after creation.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1064,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":131,"name":"sound","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Overrides the sound the notification is displayed with.","text":"The default value is `default`, which is the system default sound.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1166,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":125,"name":"vibration","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether notification posted to this channel should vibrate.","text":"Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1114,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":130,"name":"vibrationPattern","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets/overrides the vibration pattern for notifications posted to this channel.","text":"The pattern in milliseconds. Must be an even amount of numbers.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1157,"character":18}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":129,"name":"visibility","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether notifications posted to this channel appear on the lockscreen or not,\nand if so, whether they appear in a redacted form.","text":"This setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1148,"character":12}],"type":{"type":"reference","name":"AndroidVisibility","id":233}}],"groups":[{"title":"Properties","kind":1024,"children":[121,122,123,126,119,127,128,124,120,131,125,130,129]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1052,"character":31}],"extendedBy":[{"type":"reference","name":"NativeAndroidChannel","id":132}]},{"id":274,"name":"AndroidChannelBlockedEvent","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":275,"name":"channel","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The channel that had its block state changed.","text":"Note that if the channel no longer exists during the time the event\nwas sent the channel property will be undefined.\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":298,"character":9}],"type":{"type":"reference","name":"NativeAndroidChannel","id":132}}],"groups":[{"title":"Properties","kind":1024,"children":[275]}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":291,"character":43}]},{"id":147,"name":"AndroidChannelGroup","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"Interface for an Android Channel Group.","text":"![Channel Group Example](https://prismic-io.s3.amazonaws.com/invertase%2F21fb6bbf-6932-47c3-8695-877e1d4f296b_new+project+%2821%29.jpg)\n","tags":[{"tag":"platform","text":"android API Level >= 26\n"}]},"children":[{"id":150,"name":"description","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"An optional description of the group. This is visible to the user.","text":"On Android APIs less than 28 this will always be undefined.\n","tags":[{"tag":"platform","text":"android API Level >= 28\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1209,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":148,"name":"id","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Unique id for this channel group."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1192,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":149,"name":"name","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The name of the group. This is visible to the user so should be a descriptive name which\ncategorizes other channels (e.g. reminders).","text":"The recommended maximum length is 40 characters; the value may be truncated if it is too long.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1200,"character":6}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[150,148,149]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1188,"character":36}],"extendedBy":[{"type":"reference","name":"NativeAndroidChannelGroup","id":151}]},{"id":276,"name":"AndroidChannelGroupBlockedEvent","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":277,"name":"channelGroup","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The channel group that had its block state changed.","text":"Note that if the channel group no longer exists during the time the event\nwas sent the channelGroup property will be undefined.\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":308,"character":14}],"type":{"type":"reference","name":"NativeAndroidChannelGroup","id":151}}],"groups":[{"title":"Properties","kind":1024,"children":[277]}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":301,"character":48}]},{"id":92,"name":"AndroidInboxStyle","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"TODO"},"children":[{"id":94,"name":"lines","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":852,"character":7}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":96,"name":"summary","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":854,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":95,"name":"title","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":853,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":93,"name":"type","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":851,"character":6}],"type":{"type":"reference","name":"INBOX","id":231}}],"groups":[{"title":"Properties","kind":1024,"children":[94,96,95,93]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":850,"character":34}]},{"id":75,"name":"AndroidInput","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"TODO","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":76,"name":"allowFreeFormInput","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If `true`, when an action is pressed this allows the user to type free form text into the input area.\nIf `false`, you must provide an array of `choices` the user is allowed to use as the input.","text":"Defaults to `true`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":747,"character":20}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":77,"name":"allowGeneratedReplies","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether generated replies can be added to the action.","text":"Generated replies will only be shown if the input has `choices` and whether the device\nis able to generate replies.\n\nDefaults to `true`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":757,"character":23}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":78,"name":"choices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"An array of pre-defined input choices the user can select.","text":"If `allowFreeFormInput` is `false`, this property must contain at least one choice.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":764,"character":9}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":79,"name":"editableChoices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If `true`, the user will be able to edit the selected choice before sending the action event, however\n`allowFreeFormInput` must also be `true`.","text":"By default, the platform will decide whether choices can be editable. To explicitly enable or disable\nthis, provide `true` or `false`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":773,"character":17}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":80,"name":"placeholder","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The placeholder text to display inside of the user input area."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":778,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[76,77,78,79,80]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":740,"character":29}]},{"id":97,"name":"AndroidMessagingStyle","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{},"children":[{"id":102,"name":"group","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether this conversation notification represents a group\n(3 or more persons)."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":883,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":100,"name":"messages","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"An array of messages to display inside of the notification."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":871,"character":10}],"type":{"type":"array","elementType":{"type":"reference","name":"AndroidMessagingStyleMessage","id":103}}},{"id":99,"name":"person","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The person who is receiving a message on the current device."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":866,"character":8}],"type":{"type":"reference","name":"AndroidPerson","id":107}},{"id":101,"name":"title","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"An optional conversation title, displayed at the top of the\nnotification."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":877,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":98,"name":"type","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":861,"character":6}],"type":{"type":"reference","name":"MESSAGING","id":232}}],"groups":[{"title":"Properties","kind":1024,"children":[102,100,99,101,98]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":860,"character":38}]},{"id":103,"name":"AndroidMessagingStyleMessage","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"The interface for messages when constructing a Messaging Style notification.","text":"#### Example\n\n```js\n\n```\n"},"children":[{"id":106,"name":"person","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The sender of this message. See `AndroidPerson` reference for more information\non the properties available.","text":"> This property should only be provided if the message is from an external person, and not the person receiving the message.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":912,"character":8}],"type":{"type":"reference","name":"AndroidPerson","id":107}},{"id":104,"name":"text","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The content of the message."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":899,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":105,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The timestamp of when the message arrived in milliseconds."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":904,"character":11}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","kind":1024,"children":[106,104,105]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":895,"character":45}]},{"id":270,"name":"AndroidNotificationEvent","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":273,"name":"input","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The input from a notification action.","text":"Once an input has been received, the notification should be updated to remove the pending state\nof the notification action, by adding the input value to the `inputHistory` property.\n","tags":[{"tag":"platform","text":"android API Level >= 20\n"}]},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":288,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":271,"name":"notification","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":270,"character":14}],"type":{"type":"reference","name":"Notification","id":237}},{"id":272,"name":"pressAction","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The press action which triggered the event.","text":"If a press action caused the event, this property will be available allowing you to retrieve the\naction ID and perform logic.\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":278,"character":13}],"type":{"type":"reference","name":"AndroidPressAction","id":71}}],"groups":[{"title":"Properties","kind":1024,"children":[273,271,272]}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":269,"character":41}]},{"id":107,"name":"AndroidPerson","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"The interface used to describe a person shown in notifications. Currently used with `AndroidMessagingStyle` notifications."},"children":[{"id":110,"name":"bot","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If `true` this person represents a machine rather than a human. This is used primarily for testing and automated tooling.","text":"Defaults to `false`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":937,"character":5}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":112,"name":"icon","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The icon to display next to the person in the notification. The icon can be URL or local\nAndroid resource.","text":"If not provided, an icon will be automatically creating using the `name` property.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":956,"character":6}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":109,"name":"id","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"An optional unique ID of the person. Setting this property is preferred for unique identification,\nhowever not required. If no value is provided, the `name` will be used instead.."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":930,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":111,"name":"important","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If `true` this person will be marked as important.","text":"Important users are those who frequently contact the receiving person. If the app is in\n\"Do not disturb\" mode, a notification containing an important person may override this mode\nif the person has been whitelisted on the device.\n\nDefaults to `false`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":948,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":108,"name":"name","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The name of the person.","text":"If no `id` is provided, the name will be used as the unique identifier.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":924,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":113,"name":"uri","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"TODO"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":961,"character":5}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[110,112,109,111,108,113]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":918,"character":30}]},{"id":71,"name":"AndroidPressAction","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"The interface used to describe a press action for Android notifications.","text":"There are various ways a user can interact with a notification, the most common being pressing\nthe notification, pressing an action or providing text input. This interface defines what happens\nwhen a user performs such interaction.\n\nWhen provided to a notification `pressAction`, the application will always open (if not already)\nusing the default `launchActivity` for the application.\n\nWhen provided to a notification action, the action will only open the application if a `launchActivity`\nand/or `mainComponent` is provided.\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":72,"name":"id","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The unique ID for the action.","text":"The `id` property is used to differentiate between user press actions. When listening to notification\nevents via `onEvent`, the ID can be read from the `event.action` object:\n\n```js\nnotifee.onEvent((eventType, event) => {\n  if (eventType === notifee.EventType.PRESS || eventType === notifee.EventType.ACTION_PRESS) {\n    console.log(`User press action id: ${event.action.id}`);\n  }\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":707,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":73,"name":"launchActivity","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The custom Android Activity to launch on a press action.","text":"This property can be used in advanced scenarios to launch a custom Android Activity when the user\nperforms a press action.\n\nIf the action originated from the notification body, this value defaults to `default`, opening the\ndefault Android Activity your application runs on. When providing a custom Activity class you must provide the\nfull scope & the class must extend `ReactActivity`.\n\nTODO Guide\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":721,"character":16}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":74,"name":"mainComponent","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"A custom registered React component to launch on press action.","text":"This property can be used to open a custom React component when the user performs a press action.\nFor this to correctly function, a basic native code change is required. See [Android Actions](#)\nto learn more.\n\nTODO Guide\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":732,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[72,73,74]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":692,"character":35}]},{"id":114,"name":"AndroidProgress","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"Interface for defining the progress of an Android Notification.","text":"A notification can show current progress of a task. The progress state can either be fixed or\nindeterminate (unknown).\n\n#### Example - Fixed Progress\n\n![Fixed Progress](https://miro.medium.com/max/480/1*OHOY45cU27NaYkF0MU3hrw.gif)\n\n```js\nawait notifee.displayNotification({\n  android: {\n    progress: {\n      max: 10,\n      current: 5,\n    }\n  },\n});\n```\n\n#### Example - Indeterminate Progress\n\nSetting `indeterminate` to `true` overrides the `max`/`current` settings.\n\n![Progress](https://miro.medium.com/max/480/1*mW-_3PUxAG1unAZOf0IuoQ.gif)\n\n```js\nawait notifee.displayNotification({\n  android: {\n    progress: {\n      max: 10,\n      current: 5,\n      indeterminate: true,\n    }\n  },\n});\n```\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":116,"name":"current","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The current progress.","text":"E.g. setting to `4` with a `max` value of `10` would set a fixed progress bar on the notification at 40% complete.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1018,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":117,"name":"indeterminate","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If `true`, overrides the `max` and `current` values and displays an unknown progress style. Useful when you have no\nknowledge of a tasks completion state.","text":"Defaults to `false`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1026,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":115,"name":"max","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The maximum progress number. E.g `10`.","text":"Must be greater than the `current` value.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1011,"character":5}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[116,117,115]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1005,"character":32}]},{"id":18,"name":"IOSAttachment","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"TODO","tags":[{"tag":"platform","text":"ios\n"}]},"children":[{"id":19,"name":"identifier","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":49,"character":12}],"type":{"type":"intrinsic","name":"string"}},{"id":21,"name":"options","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":51,"character":9}],"type":{"type":"reference","name":"IOSAttachmentOptions","id":22}},{"id":20,"name":"url","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":50,"character":5}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[19,21,20]}],"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":48,"character":30}]},{"id":22,"name":"IOSAttachmentOptions","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"TODO","tags":[{"tag":"platform","text":"ios\n"}]},"children":[{"id":25,"name":"thumbnailClippingRect","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":62,"character":23}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"object"}]}},{"id":24,"name":"thumbnailHidden","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":61,"character":17}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":26,"name":"thumbnailTime","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":63,"character":15}],"type":{"type":"intrinsic","name":"number"}},{"id":23,"name":"typeHint","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":60,"character":10}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[25,24,26,23]}],"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":59,"character":37}]},{"id":343,"name":"JsonConfig","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"An interface describing the contents of a `notifee.config.json` file."},"children":[{"id":344,"name":"android","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/Module.ts","line":210,"character":9}],"type":{"type":"reference","name":"JsonConfigAndroid","id":339}},{"id":345,"name":"ios","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/Module.ts","line":211,"character":5}],"type":{"type":"reference","name":"JsonConfigIOS","id":341}}],"groups":[{"title":"Properties","kind":1024,"children":[344,345]}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":209,"character":27}]},{"id":339,"name":"JsonConfigAndroid","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"An interface describing the Android specific configuration properties for the `notifee.config.json` file."},"children":[{"id":340,"name":"license","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Module.ts","line":196,"character":9}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[340]}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":195,"character":34}]},{"id":341,"name":"JsonConfigIOS","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"An interface describing the iOS specific configuration properties for the `notifee.config.json` file."},"children":[{"id":342,"name":"license","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Module.ts","line":203,"character":9}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[342]}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":202,"character":30}]},{"id":284,"name":"Module","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":285,"name":"cancelAllNotifications","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":286,"name":"cancelAllNotifications","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"API used to cancel all notifications.","text":"The `cancelAllNotifications` API removes any displayed notifications from the users device and\nany notifications which have triggers set.\n\nThis method does not cancel [Foreground Service](/react-native/docs/android/foreground-service)\nnotifications.\n"},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":23,"character":24}]},{"id":287,"name":"cancelNotification","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":288,"name":"cancelNotification","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"API used to cancel a single notification.","text":"The `cancelNotification` API removes removes any displayed notifications or ones with triggers\nset for the specified ID.\n\nThis method does not cancel [Foreground Service](/react-native/docs/android/foreground-service)\nnotifications.\n"},"parameters":[{"id":289,"name":"notificationId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The unique notification ID. This is automatically generated and returned\nwhen creating a notification, or has been set manually via the `id` property.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":37,"character":20}]},{"id":290,"name":"createChannel","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":291,"name":"createChannel","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new Android channel. Channels are used to collectively assign notifications to\na single responsible channel. Users can manage settings for channels, e.g. disabling sound or vibration.\nChannels can be further organized into groups (see `createChannelGroup`).","text":"Once a channel has been created, only certain fields such as the name & description can be\nmodified. To change a groups settings, you must delete the group (via `deleteChannel`)\nand re-create it. Keep in mind the user always have final control over channel settings.\n\nCreating an existing notification channel with its original values performs no operation,\nso it's safe to call this code when starting an app.\n\nCreated channels can be viewed/managed under App Info -> Notifications.\n\n> On Android 8.0 (API 26) all notifications must be assigned to a channel.\n\nReturns the channel ID.\n\n#### Example\n\n```js\nconst channelId = await notifee.createChannel({\n  channelId: 'custom-channel',\n  name: 'Custom Channel',\n  description: 'A test channel',\n});\n\nawait notifee.displayNotification({\n  body: 'Test notification',\n  android: {\n    channelId, // 'custom-channel'\n  },\n});\n```\n"},"parameters":[{"id":292,"name":"channel","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An `AndroidChannel` interface.\n"},"type":{"type":"reference","name":"AndroidChannel","id":118}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"string"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":76,"character":15}]},{"id":296,"name":"createChannelGroup","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":297,"name":"createChannelGroup","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":298,"name":"channelGroup","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"AndroidChannelGroup","id":147}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"string"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":87,"character":20}]},{"id":299,"name":"createChannelGroups","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":300,"name":"createChannelGroups","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":301,"name":"channelGroups","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"AndroidChannelGroup","id":147}}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":89,"character":21}]},{"id":293,"name":"createChannels","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":294,"name":"createChannels","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates multiple channels in a single operation.","text":"See `createChannel` for more information.\n"},"parameters":[{"id":295,"name":"channels","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An array of AndroidChannel interfaces.\n"},"type":{"type":"array","elementType":{"type":"reference","name":"AndroidChannel","id":118}}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":85,"character":16}]},{"id":302,"name":"deleteChannel","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":303,"name":"deleteChannel","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Deletes a channel by ID.","text":"#### Example\n\n```js\nawait notifee.deleteChannel('custom-channel');\n```\n"},"parameters":[{"id":304,"name":"channelId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The channel ID to delete.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":102,"character":15}]},{"id":305,"name":"deleteChannelGroup","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":306,"name":"deleteChannelGroup","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":307,"name":"channelGroupId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":104,"character":20}]},{"id":308,"name":"displayNotification","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":309,"name":"displayNotification","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Displays a notification on the device.","text":"See `NotificationAndroid` and `NotificationIOS` for platform specific options.\n\n#### Example\n\n```js\nawait notifee.displayNotification({\n  title: 'Test',\n  body: 'Test notification body',\n  android: {\n    // Android specific options\n  },\n  ios: {\n    // iOS specific options\n  },\n});\n```\n","returns":"Promise<string> A promise that resolves the new notification id\n"},"parameters":[{"id":310,"name":"notification","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A `Notification` interface."},"type":{"type":"reference","name":"Notification","id":237}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"string"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":129,"character":21}]},{"id":311,"name":"getChannel","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":312,"name":"getChannel","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a single `AndroidChannel` by id.","text":"Returns `null` if no channel could be matched to the given ID.\n","tags":[{"tag":"platform","text":"android\n"}]},"parameters":[{"id":313,"name":"channelId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The channel id."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"union","types":[{"type":"reference","name":"NativeAndroidChannel","id":132},{"type":"intrinsic","name":"null"}]}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":139,"character":12}]},{"id":316,"name":"getChannelGroup","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":317,"name":"getChannelGroup","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":318,"name":"channelGroupId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"union","types":[{"type":"reference","name":"NativeAndroidChannelGroup","id":151},{"type":"intrinsic","name":"null"}]}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":148,"character":17}]},{"id":319,"name":"getChannelGroups","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":320,"name":"getChannelGroups","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"NativeAndroidChannelGroup","id":151}}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":150,"character":18}]},{"id":314,"name":"getChannels","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":315,"name":"getChannels","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an array of `AndroidChannel` which are currently active on the device.","tags":[{"tag":"platform","text":"android\n"}]},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"NativeAndroidChannel","id":132}}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":146,"character":13}]},{"id":321,"name":"getInitialNotification","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":322,"name":"getInitialNotification","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"union","types":[{"type":"reference","name":"Notification","id":237},{"type":"intrinsic","name":"null"}]}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":152,"character":24}]},{"id":323,"name":"onEvent","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":324,"name":"onEvent","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":325,"name":"observer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"NotificationEventObserver","id":280}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":154,"character":9}]},{"id":326,"name":"openNotificationSettings","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":327,"name":"openNotificationSettings","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens the Android System settings for the application.","text":"If the API version is >= 26:\n- With no `channelId`, the notification settings screen is displayed.\n- With a `channelId`, the notification settings screen for the specific channel is displayed.\n\nIf the API version is < 26, the application settings screen is displayed. The `channelId`\nis ignored.\n\nIf an invalid `channelId` is provided (e.g. does not exist), the settings screen will redirect\nback to your application.\n\nOn iOS, this is a no-op.\n","tags":[{"tag":"platform","text":"android"}]},"parameters":[{"id":328,"name":"channelId","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":174,"character":26}]},{"id":329,"name":"registerForegroundService","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":330,"name":"registerForegroundService","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Register a foreground service runner used to manage long running notifications.","tags":[{"tag":"platform","text":"android\n"}]},"parameters":[{"id":331,"name":"runner","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The runner function which runs for the duration of the service's lifetime."},"type":{"type":"reflection","declaration":{"id":332,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":333,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":334,"name":"notification","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Notification","id":237}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":182,"character":35}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":182,"character":27}]},{"id":335,"name":"scheduleNotification","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":336,"name":"scheduleNotification","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":337,"name":"notification","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"Notification","id":237}},{"id":338,"name":"schedule","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"Schedule","id":266}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":189,"character":22}]}],"groups":[{"title":"Methods","kind":2048,"children":[285,287,290,296,299,293,302,305,308,311,316,319,314,321,323,326,329,335]}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":13,"character":23}],"extendedBy":[{"type":"reference","name":"ModuleWithStatics","id":348}]},{"id":346,"name":"ModuleStatics","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":347,"name":"SDK_VERSION","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Module.ts","line":215,"character":13}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[347]}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":214,"character":30}],"extendedBy":[{"type":"reference","name":"ModuleWithStatics","id":348}]},{"id":348,"name":"ModuleWithStatics","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":403,"name":"SDK_VERSION","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Module.ts","line":215,"character":13}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ModuleStatics.SDK_VERSION","id":347}},{"id":349,"name":"cancelAllNotifications","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":350,"name":"cancelAllNotifications","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"API used to cancel all notifications.","text":"The `cancelAllNotifications` API removes any displayed notifications from the users device and\nany notifications which have triggers set.\n\nThis method does not cancel [Foreground Service](/react-native/docs/android/foreground-service)\nnotifications.\n"},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]},"inheritedFrom":{"type":"reference","name":"Module.cancelAllNotifications","id":285}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":23,"character":24}],"inheritedFrom":{"type":"reference","name":"Module.cancelAllNotifications","id":285}},{"id":351,"name":"cancelNotification","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":352,"name":"cancelNotification","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"API used to cancel a single notification.","text":"The `cancelNotification` API removes removes any displayed notifications or ones with triggers\nset for the specified ID.\n\nThis method does not cancel [Foreground Service](/react-native/docs/android/foreground-service)\nnotifications.\n"},"parameters":[{"id":353,"name":"notificationId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The unique notification ID. This is automatically generated and returned\nwhen creating a notification, or has been set manually via the `id` property.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]},"inheritedFrom":{"type":"reference","name":"Module.cancelNotification","id":287}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":37,"character":20}],"inheritedFrom":{"type":"reference","name":"Module.cancelNotification","id":287}},{"id":354,"name":"createChannel","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":355,"name":"createChannel","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new Android channel. Channels are used to collectively assign notifications to\na single responsible channel. Users can manage settings for channels, e.g. disabling sound or vibration.\nChannels can be further organized into groups (see `createChannelGroup`).","text":"Once a channel has been created, only certain fields such as the name & description can be\nmodified. To change a groups settings, you must delete the group (via `deleteChannel`)\nand re-create it. Keep in mind the user always have final control over channel settings.\n\nCreating an existing notification channel with its original values performs no operation,\nso it's safe to call this code when starting an app.\n\nCreated channels can be viewed/managed under App Info -> Notifications.\n\n> On Android 8.0 (API 26) all notifications must be assigned to a channel.\n\nReturns the channel ID.\n\n#### Example\n\n```js\nconst channelId = await notifee.createChannel({\n  channelId: 'custom-channel',\n  name: 'Custom Channel',\n  description: 'A test channel',\n});\n\nawait notifee.displayNotification({\n  body: 'Test notification',\n  android: {\n    channelId, // 'custom-channel'\n  },\n});\n```\n"},"parameters":[{"id":356,"name":"channel","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An `AndroidChannel` interface.\n"},"type":{"type":"reference","name":"AndroidChannel","id":118}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Module.createChannel","id":290}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":76,"character":15}],"inheritedFrom":{"type":"reference","name":"Module.createChannel","id":290}},{"id":360,"name":"createChannelGroup","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":361,"name":"createChannelGroup","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":362,"name":"channelGroup","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"AndroidChannelGroup","id":147}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Module.createChannelGroup","id":296}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":87,"character":20}],"inheritedFrom":{"type":"reference","name":"Module.createChannelGroup","id":296}},{"id":363,"name":"createChannelGroups","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":364,"name":"createChannelGroups","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":365,"name":"channelGroups","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"AndroidChannelGroup","id":147}}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]},"inheritedFrom":{"type":"reference","name":"Module.createChannelGroups","id":299}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":89,"character":21}],"inheritedFrom":{"type":"reference","name":"Module.createChannelGroups","id":299}},{"id":357,"name":"createChannels","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":358,"name":"createChannels","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates multiple channels in a single operation.","text":"See `createChannel` for more information.\n"},"parameters":[{"id":359,"name":"channels","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An array of AndroidChannel interfaces.\n"},"type":{"type":"array","elementType":{"type":"reference","name":"AndroidChannel","id":118}}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]},"inheritedFrom":{"type":"reference","name":"Module.createChannels","id":293}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":85,"character":16}],"inheritedFrom":{"type":"reference","name":"Module.createChannels","id":293}},{"id":366,"name":"deleteChannel","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":367,"name":"deleteChannel","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Deletes a channel by ID.","text":"#### Example\n\n```js\nawait notifee.deleteChannel('custom-channel');\n```\n"},"parameters":[{"id":368,"name":"channelId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The channel ID to delete.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]},"inheritedFrom":{"type":"reference","name":"Module.deleteChannel","id":302}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":102,"character":15}],"inheritedFrom":{"type":"reference","name":"Module.deleteChannel","id":302}},{"id":369,"name":"deleteChannelGroup","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":370,"name":"deleteChannelGroup","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":371,"name":"channelGroupId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]},"inheritedFrom":{"type":"reference","name":"Module.deleteChannelGroup","id":305}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":104,"character":20}],"inheritedFrom":{"type":"reference","name":"Module.deleteChannelGroup","id":305}},{"id":372,"name":"displayNotification","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":373,"name":"displayNotification","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Displays a notification on the device.","text":"See `NotificationAndroid` and `NotificationIOS` for platform specific options.\n\n#### Example\n\n```js\nawait notifee.displayNotification({\n  title: 'Test',\n  body: 'Test notification body',\n  android: {\n    // Android specific options\n  },\n  ios: {\n    // iOS specific options\n  },\n});\n```\n","returns":"Promise<string> A promise that resolves the new notification id\n"},"parameters":[{"id":374,"name":"notification","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A `Notification` interface."},"type":{"type":"reference","name":"Notification","id":237}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Module.displayNotification","id":308}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":129,"character":21}],"inheritedFrom":{"type":"reference","name":"Module.displayNotification","id":308}},{"id":375,"name":"getChannel","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":376,"name":"getChannel","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a single `AndroidChannel` by id.","text":"Returns `null` if no channel could be matched to the given ID.\n","tags":[{"tag":"platform","text":"android\n"}]},"parameters":[{"id":377,"name":"channelId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The channel id."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"union","types":[{"type":"reference","name":"NativeAndroidChannel","id":132},{"type":"intrinsic","name":"null"}]}]},"inheritedFrom":{"type":"reference","name":"Module.getChannel","id":311}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":139,"character":12}],"inheritedFrom":{"type":"reference","name":"Module.getChannel","id":311}},{"id":380,"name":"getChannelGroup","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":381,"name":"getChannelGroup","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":382,"name":"channelGroupId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"union","types":[{"type":"reference","name":"NativeAndroidChannelGroup","id":151},{"type":"intrinsic","name":"null"}]}]},"inheritedFrom":{"type":"reference","name":"Module.getChannelGroup","id":316}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":148,"character":17}],"inheritedFrom":{"type":"reference","name":"Module.getChannelGroup","id":316}},{"id":383,"name":"getChannelGroups","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":384,"name":"getChannelGroups","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"NativeAndroidChannelGroup","id":151}}]},"inheritedFrom":{"type":"reference","name":"Module.getChannelGroups","id":319}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":150,"character":18}],"inheritedFrom":{"type":"reference","name":"Module.getChannelGroups","id":319}},{"id":378,"name":"getChannels","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":379,"name":"getChannels","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an array of `AndroidChannel` which are currently active on the device.","tags":[{"tag":"platform","text":"android\n"}]},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"NativeAndroidChannel","id":132}}]},"inheritedFrom":{"type":"reference","name":"Module.getChannels","id":314}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":146,"character":13}],"inheritedFrom":{"type":"reference","name":"Module.getChannels","id":314}},{"id":385,"name":"getInitialNotification","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":386,"name":"getInitialNotification","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"union","types":[{"type":"reference","name":"Notification","id":237},{"type":"intrinsic","name":"null"}]}]},"inheritedFrom":{"type":"reference","name":"Module.getInitialNotification","id":321}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":152,"character":24}],"inheritedFrom":{"type":"reference","name":"Module.getInitialNotification","id":321}},{"id":387,"name":"onEvent","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":388,"name":"onEvent","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":389,"name":"observer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"NotificationEventObserver","id":280}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Module.onEvent","id":323}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":154,"character":9}],"inheritedFrom":{"type":"reference","name":"Module.onEvent","id":323}},{"id":390,"name":"openNotificationSettings","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":391,"name":"openNotificationSettings","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Opens the Android System settings for the application.","text":"If the API version is >= 26:\n- With no `channelId`, the notification settings screen is displayed.\n- With a `channelId`, the notification settings screen for the specific channel is displayed.\n\nIf the API version is < 26, the application settings screen is displayed. The `channelId`\nis ignored.\n\nIf an invalid `channelId` is provided (e.g. does not exist), the settings screen will redirect\nback to your application.\n\nOn iOS, this is a no-op.\n","tags":[{"tag":"platform","text":"android"}]},"parameters":[{"id":392,"name":"channelId","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]},"inheritedFrom":{"type":"reference","name":"Module.openNotificationSettings","id":326}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":174,"character":26}],"inheritedFrom":{"type":"reference","name":"Module.openNotificationSettings","id":326}},{"id":393,"name":"registerForegroundService","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":394,"name":"registerForegroundService","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Register a foreground service runner used to manage long running notifications.","tags":[{"tag":"platform","text":"android\n"}]},"parameters":[{"id":395,"name":"runner","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The runner function which runs for the duration of the service's lifetime."},"type":{"type":"reflection","declaration":{"id":396,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":397,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":398,"name":"notification","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Notification","id":237}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":182,"character":35}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"Module.registerForegroundService","id":329}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":182,"character":27}],"inheritedFrom":{"type":"reference","name":"Module.registerForegroundService","id":329}},{"id":399,"name":"scheduleNotification","kind":2048,"kindString":"Method","flags":{"isExported":true},"signatures":[{"id":400,"name":"scheduleNotification","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":401,"name":"notification","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"Notification","id":237}},{"id":402,"name":"schedule","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"Schedule","id":266}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]},"inheritedFrom":{"type":"reference","name":"Module.scheduleNotification","id":335}}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":189,"character":22}],"inheritedFrom":{"type":"reference","name":"Module.scheduleNotification","id":335}}],"groups":[{"title":"Properties","kind":1024,"children":[403]},{"title":"Methods","kind":2048,"children":[349,351,354,360,363,357,366,369,372,375,380,383,378,385,387,390,393,399]}],"sources":[{"fileName":"packages/react-native/types/Module.ts","line":219,"character":34}],"extendedTypes":[{"type":"reference","name":"Module","id":284},{"type":"reference","name":"ModuleStatics","id":346}]},{"id":132,"name":"NativeAndroidChannel","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":136,"name":"badge","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether notifications posted to this channel can appear as application icon badges in a Launcher.","text":"Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1073,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"inheritedFrom":{"type":"reference","name":"AndroidChannel.badge","id":121}},{"id":133,"name":"blocked","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1178,"character":9}],"type":{"type":"intrinsic","name":"boolean"}},{"id":137,"name":"bypassDnd","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether or not notifications posted to this channel can interrupt the user in\n'Do Not Disturb' mode.","text":"Defaults to `false`.\n\nThis setting cannot be overridden once the channel is created.\n","tags":[{"tag":"platform","text":"android API Level >= 29\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1085,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"inheritedFrom":{"type":"reference","name":"AndroidChannel.bypassDnd","id":122}},{"id":138,"name":"description","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets the user visible description of this channel.","text":"The recommended maximum length is 300 characters; the value may be truncated if it is too long.\n\nThis setting can be updated after creation.\n","tags":[{"tag":"platform","text":"android API Level >= 28\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1096,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"AndroidChannel.description","id":123}},{"id":141,"name":"groupId","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets what group this channel belongs to. Group information is only used for presentation, not for behavior.","text":"Create a group via `createChannelGroup()`.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1123,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"AndroidChannel.groupId","id":126}},{"id":134,"name":"id","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The unique channel ID."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1056,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"AndroidChannel.id","id":119}},{"id":142,"name":"importance","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets the level of interruption of this notification channel.","text":"See `AndroidImportance` for more details on the levels.\n\nThis setting can only be set to a lower importance level once set.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1132,"character":12}],"type":{"type":"reference","name":"AndroidImportance","id":210},"inheritedFrom":{"type":"reference","name":"AndroidChannel.importance","id":127}},{"id":143,"name":"lightColor","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If lights are enabled (via `enableLights`), sets/overrides the light color for notifications\nposted to this channel.","text":"This setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1140,"character":12}],"type":{"type":"union","types":[{"type":"reference","name":"AndroidColor","id":178},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"AndroidChannel.lightColor","id":128}},{"id":139,"name":"lights","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether notifications posted to this channel should display notification lights, on devices that support that feature.","text":"Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1105,"character":8}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"inheritedFrom":{"type":"reference","name":"AndroidChannel.lights","id":124}},{"id":135,"name":"name","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The channel name. This is shown to the user so must be descriptive and relate to the notifications\nwhich will be delivered under this channel.","text":"This setting can be updated after creation.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1064,"character":6}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"AndroidChannel.name","id":120}},{"id":146,"name":"sound","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Overrides the sound the notification is displayed with.","text":"The default value is `default`, which is the system default sound.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1166,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"AndroidChannel.sound","id":131}},{"id":140,"name":"vibration","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether notification posted to this channel should vibrate.","text":"Defaults to `true`.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1114,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"inheritedFrom":{"type":"reference","name":"AndroidChannel.vibration","id":125}},{"id":145,"name":"vibrationPattern","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets/overrides the vibration pattern for notifications posted to this channel.","text":"The pattern in milliseconds. Must be an even amount of numbers.\n\nThis setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1157,"character":18}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}},"inheritedFrom":{"type":"reference","name":"AndroidChannel.vibrationPattern","id":130}},{"id":144,"name":"visibility","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether notifications posted to this channel appear on the lockscreen or not,\nand if so, whether they appear in a redacted form.","text":"This setting cannot be overridden once the channel is created.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1148,"character":12}],"type":{"type":"reference","name":"AndroidVisibility","id":233},"inheritedFrom":{"type":"reference","name":"AndroidChannel.visibility","id":129}}],"groups":[{"title":"Properties","kind":1024,"children":[136,133,137,138,141,134,142,143,139,135,146,140,145,144]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1169,"character":37}],"extendedTypes":[{"type":"reference","name":"AndroidChannel","id":118}]},{"id":151,"name":"NativeAndroidChannelGroup","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"Interface for a native Android Channel Group.","tags":[{"tag":"platform","text":"android API Level >= 26\n"}]},"children":[{"id":152,"name":"blocked","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Returns whether or not notifications posted to a Channel belonging to this group are\nblocked by the user.","text":"On API levels < 28, returns `false`.\n","tags":[{"tag":"platform","text":"android API Level >= 28\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1226,"character":9}],"type":{"type":"intrinsic","name":"boolean"}},{"id":153,"name":"channels","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Returns a list of channels assigned to this channel group."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1231,"character":10}],"type":{"type":"array","elementType":{"type":"reference","name":"NativeAndroidChannel","id":132}}},{"id":156,"name":"description","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"An optional description of the group. This is visible to the user.","text":"On Android APIs less than 28 this will always be undefined.\n","tags":[{"tag":"platform","text":"android API Level >= 28\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1209,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"AndroidChannelGroup.description","id":150}},{"id":154,"name":"id","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Unique id for this channel group."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1192,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"AndroidChannelGroup.id","id":148}},{"id":155,"name":"name","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The name of the group. This is visible to the user so should be a descriptive name which\ncategorizes other channels (e.g. reminders).","text":"The recommended maximum length is 40 characters; the value may be truncated if it is too long.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1200,"character":6}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"AndroidChannelGroup.name","id":149}}],"groups":[{"title":"Properties","kind":1024,"children":[152,153,156,154,155]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":1217,"character":42}],"extendedTypes":[{"type":"reference","name":"AndroidChannelGroup","id":147}]},{"id":1,"name":"NativeError","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"An Error that has occurred in native Android or iOS code converted into a JavaScript Error."},"children":[{"id":8,"name":"Error","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":984,"character":17}],"type":{"type":"reference","name":"ErrorConstructor"}},{"id":2,"name":"code","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Error code, e.g. `invalid-parameter`"},"sources":[{"fileName":"packages/react-native/types/Library.ts","line":12,"character":15}],"type":{"type":"intrinsic","name":"string"}},{"id":3,"name":"message","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"Error message"},"sources":[{"fileName":"packages/react-native/types/Library.ts","line":17,"character":18}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Error.message"}},{"id":6,"name":"name","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":973,"character":8}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Error.name"}},{"id":4,"name":"nativeErrorCode","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The native returned error code, different per platform"},"sources":[{"fileName":"packages/react-native/types/Library.ts","line":22,"character":26}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"id":5,"name":"nativeErrorMessage","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The native returned error message, different per platform"},"sources":[{"fileName":"packages/react-native/types/Library.ts","line":27,"character":29}],"type":{"type":"intrinsic","name":"string"}},{"id":7,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":975,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"inheritedFrom":{"type":"reference","name":"Error.stack"}}],"groups":[{"title":"Properties","kind":1024,"children":[8,2,3,6,4,5,7]}],"sources":[{"fileName":"packages/react-native/types/Library.ts","line":8,"character":28}],"extendedTypes":[{"type":"reference","name":"Error"}]},{"id":237,"name":"Notification","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"Interface for building a local notification for both Android & iOS devices.","text":"#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  title: 'Welcome',\n  data: {\n    user: '123',\n  },\n  android: {\n    color: '#3f51b5',\n  },\n  ios: {\n    alertAction: 'Open App',\n  },\n};\n\nawait notifee.displayNotification(notification);\n```\n"},"children":[{"id":246,"name":"android","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Android specific notification options. See the `NotificationAndroid` interface for more\ninformation and default options which are applied to a notification.","text":"#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  android: {\n    color: '#3f51b5',\n  },\n};\n\nawait notifee.displayNotification(notification);\n```\n","tags":[{"tag":"platform","text":"android\n"}]},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":137,"character":9}],"type":{"type":"reference","name":"NotificationAndroid","id":27}},{"id":238,"name":"body","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The main body content of a notification.","text":"#### Example\n\n![Body Text](https://prismic-io.s3.amazonaws.com/invertase%2F7f9cc068-c618-44f0-88da-6041c6d55f48_new+project+%2817%29.jpg)\n\n```js\nconst notification = {\n  body: 'Hello World!',\n};\n\nawait notifee.displayNotification(notification);\n```\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":52,"character":6}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":242,"name":"data","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Additional data to store on the notification. Only `string` values can be stored.","text":"#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  data: {\n    user: '123',\n  }\n};\n\nawait notifee.displayNotification(notification);\n```\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":116,"character":6}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":243,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":244,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":245,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}}]}},{"id":239,"name":"id","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"A unique identifier for your notification.","text":"Defaults to a random string.\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":59,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":247,"name":"ios","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"iOS specific notification options. See the `NotificationIOS` interface for more information\nand default options which are applied to a notification.","text":"#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  ios: {\n    alertAction: 'Open App',\n  },\n};\n\nawait notifee.displayNotification(notification);\n```\n","tags":[{"tag":"platform","text":"ios\n"}]},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":158,"character":5}],"type":{"type":"reference","name":"NotificationIOS","id":9}},{"id":241,"name":"subtitle","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The notification subtitle, which appears on a new line below the title.","text":"#### Example\n\n![Title Text](https://prismic-io.s3.amazonaws.com/invertase%2F6fa1dea9-8cf6-4e9a-b318-8d8f73d568cf_new+project+%2818%29.jpg)\n\n```js\nconst notification = {\n  title: 'Welcome!',\n  subtitle: 'Learn more...',\n  body: 'Hello World!',\n};\n\nawait notifee.displayNotification(notification);\n```\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":98,"character":10}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":240,"name":"title","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The notification title which appears above the body text.","text":"On Android, if you wish to read the title when the notification is opened, add it to the `data` object.\n\n#### Example\n\n![Title Text](https://prismic-io.s3.amazonaws.com/invertase%2F6fa1dea9-8cf6-4e9a-b318-8d8f73d568cf_new+project+%2818%29.jpg)\n\n```js\nconst notification = {\n  title: 'Welcome!',\n  body: 'Hello World!',\n};\n\nawait notifee.displayNotification(notification);\n```\n"},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":79,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[246,238,242,239,247,241,240]}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":36,"character":29}]},{"id":27,"name":"NotificationAndroid","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"The interface for Android specific options which are applied to a notification.","text":"#### Example\n\n```js\nconst notification = {\n  body: 'Hello World!',\n  android: {\n    color: '#3F51B5',\n    autoCancel: false,\n    ongoing: true,\n  },\n};\n\nawait notifee.displayNotification(notification);\n```\n","tags":[{"tag":"platform","text":"android\n"}]},"children":[{"id":28,"name":"actions","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":29,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"AndroidAction","id":66}}},{"id":29,"name":"asForegroundService","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"When set to `true` this notification will be shown as a foreground service.","text":"The application can only display one foreground service notification at once. If a\nforeground service notification is already running and a new notification with this flag set to\n`true` is provided, the service will stop the existing service and start a new one.\n\nEnsure a foreground service runner function has been provided to `registerForegroundService`.\nWithout one, the notification will not be displayed.\n\nDefaults to `false`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":43,"character":21}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":30,"name":"autoCancel","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Setting this flag will make it so the notification is automatically canceled when the user\nclicks it in the panel.","text":"By default when the user taps a notification it is automatically removed from the notification\npanel. Setting this to `false` will keep the notification in the panel.\n\nIf `false`, the notification will persist in the notification panel after being pressed. It will\nremain there until the user removes it (e.g. swipes away) or is cancelled via `removeDeliveredNotification`.\n\nDefaults to `true`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":57,"character":12}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":31,"name":"badgeIconType","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Starting with 8.0 (API level 26), notification badges (also known as notification dots) appear\non a launcher icon when the associated app has an active notification. Users can long-press\non the app icon to reveal the notifications (alongside any app shortcuts).","text":"This value might be ignored, for launchers that don't support badge icons.\n\n![Badges](https://developer.android.com/images/ui/notifications/badges-open_2x.png)\n\nIf the notification is shown as a badge, this option can be set to control how the badge icon\nis shown:\n\n- `NONE`: Uses the default preference of the device launcher. Some launchers will display no icon, others will use the `largeIcon` (if provided).\n- `SMALL`: Uses the icon provided to `smallIcon`, if available.\n- `LARGE`: Uses the icon provided to `largeIcon`, if available.\n\nDefaults to `AndroidBadgeIconType.LARGE`.\n","tags":[{"tag":"platform","text":"android API Level >= 26\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":79,"character":15}],"type":{"type":"reference","name":"AndroidBadgeIconType","id":157}},{"id":32,"name":"category","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Assigns the notification to a category. Use the one which best describes the notification.","text":"The category may be used by the device for ranking and filtering.\n\n```js\nconst notification = {\n  body: 'Congratulations...',\n  android: {\n    category: notifee.AndroidCategory.MESSAGE,\n  },\n};\n\nawait notifee.displayNotification(notification);\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":97,"character":10}],"type":{"type":"reference","name":"AndroidCategory","id":161}},{"id":33,"name":"channelId","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Specify the `AndroidChannel` which the notification will be delivered on.","text":"Channels override any notification options.\n\n> On Android 8.0 (API 26) the channel ID is required. Providing a invalid channel ID will throw an error.\n\n#### Example\n\n```js\nconst channelId = notifee.createChannel({\n  channelId: 'my-custom-channel',\n  name: 'Custom Notification Channel',\n});\n\nawait notifee.displayNotification({\n  body: 'Notification with channel',\n  android: {\n    channelId,\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":122,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":36,"name":"chronometerDirection","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If `showChronometer` is `true`, the direction of the chronometer can be changed to count down instead of up.","text":"Has no effect if `showChronometer` is `false`.\n\nDefaults to `up`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":170,"character":22}],"type":{"type":"union","types":[{"type":"stringLiteral","value":"up"},{"type":"stringLiteral","value":"down"}]}},{"id":34,"name":"color","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Set an custom accent color for the notification. If not provided, the default notification\nsystem color will be used.","text":"The color can be a predefined system `AndroidColor` or [hexadecimal](https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4).\n\nSetting a color will change key parts of a notification, such as the small icon, action text and\nthe input area background color.\n\n#### Example\n\nUsing a predefined color.\n\n```js\nimport notifee, { AndroidColor } from '@notifee/react-native';\n\nawait notifee.displayNotification({\n  android: {\n    color: AndroidColor.AQUA,\n    // or\n    color: '#2196f3', // material blue\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":149,"character":7}],"type":{"type":"union","types":[{"type":"reference","name":"AndroidColor","id":178},{"type":"intrinsic","name":"string"}]}},{"id":35,"name":"colorized","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"When `asForegroundService` is `true`, the notification will use the provided `color` property\nto set a background color on the notification. This property has no effect when `asForegroundService`\nis `false`.","text":"This should only be used for high priority ongoing tasks like navigation, an ongoing call,\nor other similarly high-priority events for the user.\n\nDefaults to `false`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":161,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":37,"name":"defaults","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"For devices without notification channel support, this property sets the default behaviour\nfor a notification.","text":"On API Level >= 26, this has no effect.\n\nSee [AndroidDefaults](/react-native/reference/androiddefaults) for more information.\n","tags":[{"tag":"platform","text":"android API Level < 26\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":182,"character":10}],"type":{"type":"array","elementType":{"type":"reference","name":"AndroidDefaults","id":201}}},{"id":38,"name":"fullScreenAction","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":184,"character":18}],"type":{"type":"reference","name":"AndroidPressAction","id":71}},{"id":40,"name":"groupAlertBehavior","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets the group alert behavior for this notification. Use this method to mute this notification\nif alerts for this notification's group should be handled by a different notification. This is\nonly applicable for notifications that belong to a `group`. This must be called on all notifications\nyou want to mute. For example, if you want only the summary of your group to make noise, all\nchildren in the group should have the group alert behavior `AndroidGroupAlertBehavior.SUMMARY`.","text":"See `AndroidGroupAlertBehavior` for more information on different behaviours.\n\nDefaults to `AndroidGroupAlertBehavior.ALL`.\n\n#### Example\n\n```js\nimport notifee, { AndroidGroupAlertBehavior } from '@notifee/react-native';\n\nawait notifee.displayNotification({\n  android: {\n    groupId: message.group.id,\n    groupAlertBehavior: AndroidGroupAlertBehavior.CHILDREN,\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":230,"character":20}],"type":{"type":"reference","name":"AndroidGroupAlertBehavior","id":206}},{"id":39,"name":"groupId","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Set this notification to be part of a group of notifications sharing the same key. Grouped notifications may\ndisplay in a cluster or stack on devices which support such rendering.","text":"To make this notification the summary for its group, set `groupSummary` to `true`.\n\n![Grouped Notifications](https://developer.android.com/images/ui/notifications/notification-group_2x.png)\n\n```js\nimport notifee from '@notifee/react-native';\n\nawait notifee.displayNotification({\n  android: {\n    groupId: message.group.id,\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":204,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":41,"name":"groupSummary","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Whether this notification should be a group summary.","text":"If `true`, Set this notification to be the group summary for a group of notifications. Grouped notifications may display in\na cluster or stack on devices which support such rendering. Requires a `group` key to be set.\n\nDefaults to `false`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":240,"character":14}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":50,"name":"importance","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Set a notification importance for devices without channel support.","text":"Devices using Android API Level < 26 have no channel support, meaning incoming notifications\nwon't be assigned an importance level from the channel. If your application supports devices\nwithout channel support, set this property to directly assign an importance level to the incoming\nnotification.\n\nDefaults to `AndroidImportance.DEFAULT`.\n\nSee [AndroidImportance](/react-native/reference/androidimportance) for descriptions of each importance level.\n\n#### Example\n\nSet this notification importance to high.\n\n```js\nawait notifee.displayNotification({\n  android: {\n    importance: notifee.AndroidImportance.HIGH,\n  },\n});\n```\n","tags":[{"tag":"platform","text":"android API Level < 26\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":355,"character":12}],"type":{"type":"reference","name":"AndroidImportance","id":210}},{"id":42,"name":"inputHistory","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The local user input history for this notification.","text":"Input history is shown on supported devices below the main notification body. History of the\nusers input with the notification should be shown when receiving action input by updating\nthe existing notification. It is recommended to clear the history when it is no longer\nrelevant (e.g. someone has responded to the users input).\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":250,"character":14}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":43,"name":"largeIcon","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets a large icon on the notification.","text":"![Large Icon](https://prismic-io.s3.amazonaws.com/invertase%2F3f2f803e-b9ae-4e6b-8b58-f0b8ab01aa52_new+project+%2819%29.jpg)\n\nTODO: example, URL?\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":259,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":44,"name":"lights","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets the color and frequency of the light pattern. This only has effect on supported devices.","text":"The option takes an array containing a hexadecimal color value or predefined `AndroidColor`,\nalong with the number of milliseconds to show the light, and the number of milliseconds to\nturn off the light. The light frequency pattern is repeated.\n\n#### Example\n\nShow a red light, for 300ms and turn it off for 600ms.\n\n```js\nawait notifee.displayNotification({\n  android: {\n    lights: ['#f44336', 300, 600],\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":280,"character":8}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"reference","name":"AndroidColor","id":178},{"type":"intrinsic","name":"string"}]},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":45,"name":"localOnly","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"TODO\nDescription - if true, wont show on connected devices","text":"Defaults to `false`.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":288,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":46,"name":"number","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Overrides the current number of active notifications shown on the device.","text":"The number of active notifications is shown in various locations (such as the notification badge tray)\ndepending on your device and launcher type.\n\nIf no number is provided, the system displays the current number of active notifications.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":298,"character":8}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":47,"name":"ongoing","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Set whether this is an on-going notification.","text":"- Ongoing notifications are sorted above the regular notifications in the notification panel.\n- Ongoing notifications do not have an 'X' close button, and are not affected by the \"Clear all\" button.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":306,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":48,"name":"onlyAlertOnce","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Notifications with the same `id` will only show a single instance at any one time on your device,\nhowever will still alert the user (for example, by making a sound).","text":"If this flag is set to `true`, notifications with the same `id` will only alert the user once whilst\nthe notification is active.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":315,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":49,"name":"pressAction","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"By default notifications have no behaviour when a user presses them. The\n`pressAction` property allows you to set what happens when a user presses\nthe notification.","text":"The notification will always open the application when an `pressAction` is provided. It is\nhowever possible to provide advanced configuration to the press action to open custom\nactivities or React components. See [AndroidPressAction](/react-native/reference/androidpressaction)\nfor more information.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":327,"character":13}],"type":{"type":"reference","name":"AndroidPressAction","id":71}},{"id":51,"name":"progress","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"A notification can show current progress of a task. The progress state can either be fixed or\nindeterminate (unknown).","text":"#### Example - Fixed Progress\n\n![Fixed Progress](https://miro.medium.com/max/480/1*OHOY45cU27NaYkF0MU3hrw.gif)\n\n```js\nawait notifee.displayNotification({\n  id: 'upload-task',\n  android: {\n    progress: {\n      max: 10,\n      current: 0,\n    }\n  },\n});\n\n// Sometime later... Set progress to 50%\nawait notifee.displayNotification({\n  id: 'upload-task',\n  android: {\n    progress: {\n      max: 10,\n      current: 5,\n    }\n  },\n});\n```\n\n#### Example - Indeterminate Progress\n\nSetting `indeterminate` to `true` overrides the `max`/`current` settings.\n\n![Progress](https://miro.medium.com/max/480/1*mW-_3PUxAG1unAZOf0IuoQ.gif)\n\n```js\nawait notifee.displayNotification({\n  android: {\n    progress: {\n      max: 10,\n      current: 5,\n      indeterminate: true,\n    }\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":406,"character":10}],"type":{"type":"reference","name":"AndroidProgress","id":114}},{"id":52,"name":"publicVersion","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"TODO"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":411,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"null"}]}},{"id":53,"name":"shortcutId","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"If this notification is duplicative of a Launcher shortcut, sets the id of the shortcut,\nin case the Launcher wants to hide the shortcut.","text":"Note: This field will be ignored by Launchers that don't support badging or shortcuts.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":419,"character":12}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":61,"name":"showChronometer","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Shows a counting timer on the notification, useful for on-going notifications such as a phone call.","text":"If no `timestamp` is provided, a counter will display on the notification starting from 00:00. If a `timestamp` is\nprovided, the number of hours/minutes/seconds since that have elapsed since that value will be shown instead.\n\nDefaults to `false`.\n\n#### Example\n\nShow a counter starting from 00:20.\n\n```js\nawait notifee.displayNotification({\n  body: 'Limited time prize available',\n  android: {\n    timestamp: Date.now() - 20000,\n    showChronometer: true,\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":568,"character":17}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":54,"name":"showTimestamp","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets whether the `timestamp` provided is shown in the notification.","text":"Setting this field is useful for notifications which are more informative with a timestamp,\nsuch as an E-Mail.\n\nIf no `timestamp` is set, this field has no effect.\n\n#### Example\n\nAssuming the current notification has delivered to the user 8 minutes ago, the timestamp\nwill be displayed to the user in the notification, for example:\n\n![When Timestamp](https://prismic-io.s3.amazonaws.com/invertase%2F3f2f803e-b9ae-4e6b-8b58-f0b8ab01aa52_new+project+%2819%29.jpg)\n\n```js\nawait notifee.displayNotification({\n  android: {\n    timestamp: Date.now(),\n    showTimestamp: true,\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":445,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":55,"name":"smallIcon","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The small icon to show in the heads-up notification.","text":"TODO: How to add custom icons\n\nDefaults to `ic_launcher`.\n\n#### Example\n\n```js\nawait notifee.displayNotification({\n  bodyL: 'Custom small icon',\n  android: {\n    smallIcon: 'app-icon',\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":465,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":56,"name":"smallIconLevel","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"An additional level parameter for when the icon is an instance of a Android LevelListDrawable."},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":470,"character":16}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":57,"name":"sortKey","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Set a sort key that orders this notification among other notifications from the same package.\nThis can be useful if an external sort was already applied and an app would like to preserve\nthis. Notifications will be sorted lexicographically using this value, although providing\ndifferent priorities in addition to providing sort key may cause this value to be ignored.","text":"If a `group` has been set, the sort key can also be used to order members of a notification group.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":480,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":58,"name":"style","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Styled notifications provide users with more informative content and additional functionality.\nThe current supported formats are:","text":"1. **Big Picture Style**: Shows a large picture when expanded. See `AndroidBigPictureStyle` for more information and examples.\n2. **Big Text Style**: Shows a large volume of text when expanded. See `AndroidBigTextStyle` for more information and examples.\n\n#### Example - Big Picture Style\n\n#### Example - Big Text Style\n\n```js\nawait notifee.displayNotification({\n  body: 'Congratulations you have won a prize...',\n  android: {\n    style: {\n      type: notifee.AndroidStyle.BIGTEXT,\n      text: 'Congratulations you have won a prize. To claim the prize please login to your account...'\n    }\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":505,"character":7}],"type":{"type":"union","types":[{"type":"reference","name":"AndroidBigPictureStyle","id":81},{"type":"reference","name":"AndroidBigTextStyle","id":87},{"type":"reference","name":"AndroidInboxStyle","id":92},{"type":"reference","name":"AndroidMessagingStyle","id":97}]}},{"id":64,"name":"tag","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"- tags\n- for querying notifications\n- has no visual impact on notifications"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":605,"character":5}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":59,"name":"ticker","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Text that summarizes this notification for accessibility services. As of the Android L release, this\ntext is no longer shown on screen, but it is still useful to accessibility services\n(where it serves as an audible announcement of the notification's appearance).","text":"Ticker text does not show in the notification.\n\n#### Example\n\n```js\nawait notifee.displayNotification({\n  android: {\n    body: 'You have 1 new message',\n    ticker: 'A new message has been received',\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":525,"character":8}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":60,"name":"timeoutAfter","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets the time in milliseconds at which the notification should be\ncancelled once displayed, if it is not already cancelled.","text":"#### Example\n\nTime out after 10 seconds.\n\n```js\nawait notifee.displayNotification({\n  body: 'Show for 10 seconds',\n  android: {\n    timeoutAfter: 10000,\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":544,"character":14}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":65,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"The timestamp in milliseconds for this notification. Notifications in the panel are sorted by this time.","text":"- Use with `showTimestamp` to show the timestamp to the users.\n- Use with `showChronometer` to create a on-going timer.\n\n#### Example\n\nShow the length of time the notification has been showing for.\n\n```js\nawait notifee.displayNotification({\n  body: 'Phone call in progress',\n  android: {\n    ongoing: true,\n    timestamp: Date.now(),\n    showChronometer: true,\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":628,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":62,"name":"vibrationPattern","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Enables and sets the vibrate pattern.","text":"The pattern in milliseconds. Must be an even amount of numbers.\n\n#### Example\n\nVibrate for 300ms with a 300ms delay.\n\n```js\nawait notifee.displayNotification({\n  android: {\n    body: 'Vibrating notification',\n    vibrationPattern: [300, 300],\n  },\n});\n```\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":588,"character":18}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":63,"name":"visibility","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"shortText":"Sets the visibility for this notification. This may be used for apps which show user\nsensitive information (e.g. a banking app).","text":"Defaults to `AndroidVisibility.PRIVATE`.\n\nSee `AndroidVisibility` for more information.\n"},"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":598,"character":12}],"type":{"type":"reference","name":"AndroidVisibility","id":233}}],"groups":[{"title":"Properties","kind":1024,"children":[28,29,30,31,32,33,36,34,35,37,38,40,39,41,50,42,43,44,45,46,47,48,49,51,52,53,61,54,55,56,57,58,64,59,60,65,62,63]}],"sources":[{"fileName":"packages/react-native/types/NotificationAndroid.ts","line":25,"character":36}]},{"id":248,"name":"NotificationEvent","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":251,"name":"detail","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":164,"character":8}],"type":{"type":"union","types":[{"type":"reference","name":"AndroidNotificationEvent","id":270},{"type":"reference","name":"AndroidChannelBlockedEvent","id":274},{"type":"reference","name":"AndroidChannelGroupBlockedEvent","id":276},{"type":"reference","name":"AndroidAppBlockedEvent","id":278}]}},{"id":250,"name":"headless","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":163,"character":10}],"type":{"type":"intrinsic","name":"boolean"}},{"id":249,"name":"type","kind":1024,"kindString":"Property","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":162,"character":6}],"type":{"type":"reference","name":"EventType","id":252}}],"groups":[{"title":"Properties","kind":1024,"children":[251,250,249]}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":161,"character":34}]},{"id":9,"name":"NotificationIOS","kind":256,"kindString":"Interface","flags":{"isExported":true},"comment":{"shortText":"TODO","tags":[{"tag":"platform","text":"ios\n"}]},"children":[{"id":11,"name":"alertAction","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios iOS 9 Only\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":20,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":10,"name":"attachment","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios iOS 10+\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":15,"character":12}],"type":{"type":"reference","name":"IOSAttachment","id":18}},{"id":12,"name":"badge","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":22,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":13,"name":"category","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":25,"character":10}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":17,"name":"complete","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":40,"character":10}],"type":{"type":"reference","name":"Function"}},{"id":14,"name":"hasAction","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios iOS 9 Only\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":30,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":15,"name":"launchImage","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":32,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":16,"name":"threadIdentifier","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"ios iOS 10+\n"}]},"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":37,"character":18}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[11,10,12,13,17,14,15,16]}],"sources":[{"fileName":"packages/react-native/types/NotificationIOS.ts","line":11,"character":32}]},{"id":266,"name":"Schedule","kind":256,"kindString":"Interface","flags":{"isExported":true},"children":[{"id":268,"name":"interval","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":265,"character":10}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":267,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":264,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":269,"name":"unit","kind":1024,"kindString":"Property","flags":{"isExported":true,"isOptional":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":266,"character":6}],"type":{"type":"reference","name":"ScheduleUnit","id":262}}],"groups":[{"title":"Properties","kind":1024,"children":[268,267,269]}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":263,"character":25}]},{"id":280,"name":"NotificationEventObserver","kind":4194304,"kindString":"Type alias","flags":{"isExported":true},"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":171,"character":37}],"type":{"type":"reflection","declaration":{"id":281,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":282,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":283,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"NotificationEvent","id":248}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/react-native/types/Notification.ts","line":171,"character":39}]}}}],"groups":[{"title":"Enumerations","kind":4,"children":[157,161,178,201,206,210,216,228,233,252,262]},{"title":"Interfaces","kind":256,"children":[66,278,81,87,118,274,147,276,92,75,97,103,270,107,71,114,18,22,343,339,341,284,346,348,132,151,1,237,27,248,9,266]},{"title":"Type aliases","kind":4194304,"children":[280]}]}